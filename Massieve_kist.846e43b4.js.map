{"mappings":"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","sources":["<anon>","js/Massieve_Kist.js"],"sourcesContent":["import \"./Massieve_kist.626d928d.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $dyjou = parcelRequire(\"dyjou\");\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $5Rd1x = parcelRequire(\"5Rd1x\");\n// De scene\nvar $8d47602718109865$var$scene = new $dyjou.Scene();\n$8d47602718109865$var$scene.background = new $ilwiq.Color('white');\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\nconst $8d47602718109865$var$container = document.getElementById('canvas-container');\nconst $8d47602718109865$var$renderer = new $ilwiq.WebGLRenderer({\n    antialias: true,\n    alpha: true,\n    powerPreference: \"high-performance\",\n    canvas: $8d47602718109865$var$container.querySelector('canvas')\n});\n$8d47602718109865$var$renderer.setSize($8d47602718109865$var$container.clientWidth, $8d47602718109865$var$container.clientHeight);\n$8d47602718109865$var$renderer.setPixelRatio(window.devicePixelRatio);\n// Update canvas bij resize:\nwindow.addEventListener('resize', ()=>{\n    const width = $8d47602718109865$var$container.clientWidth;\n    const height = $8d47602718109865$var$container.clientHeight;\n    $8d47602718109865$var$renderer.setSize(width, height);\n    $8d47602718109865$var$camera.aspect = width / height;\n    $8d47602718109865$var$camera.updateProjectionMatrix();\n});\n// Camera die de grootte van de container gebruikt\nvar $8d47602718109865$var$camera = new $ilwiq.PerspectiveCamera(70, $8d47602718109865$var$container.clientWidth / $8d47602718109865$var$container.clientHeight, 0.1, 1000);\n$8d47602718109865$var$camera.position.set(1.2, 1.2, 1.2);\n$8d47602718109865$var$camera.lookAt($8d47602718109865$var$scene.position);\n// OrbitControls instellen\nvar $8d47602718109865$var$controls = new (0, $5Rd1x.OrbitControls)($8d47602718109865$var$camera, $8d47602718109865$var$renderer.domElement);\n$8d47602718109865$var$controls.enableDamping = true; // Schakel demping in voor soepelere beweging\n$8d47602718109865$var$controls.dampingFactor = 0.25;\n$8d47602718109865$var$controls.screenSpacePanning = false;\n// Verlichting toevoegen\nconst $8d47602718109865$var$ambientLight = new $dyjou.AmbientLight(0xf6cd8b, 2.0);\nconst $8d47602718109865$var$light = new $dyjou.DirectionalLight(0xFFFFFF, 2.0);\n$8d47602718109865$var$light.position.set(2.5, 5, 5);\n$8d47602718109865$var$light.castShadow = true;\n$8d47602718109865$var$light.shadow.mapSize.width = 2048;\n$8d47602718109865$var$light.shadow.mapSize.height = 2048;\n$8d47602718109865$var$light.shadow.camera.near = 0.5;\n$8d47602718109865$var$light.shadow.camera.far = 50;\n$8d47602718109865$var$light.shadow.camera.left = -10;\n$8d47602718109865$var$light.shadow.camera.right = 10;\n$8d47602718109865$var$light.shadow.camera.top = 10;\n$8d47602718109865$var$light.shadow.camera.bottom = -10;\n$8d47602718109865$var$renderer.shadowMap.enabled = true;\n$8d47602718109865$var$renderer.shadowMap.type = $ilwiq.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\n$8d47602718109865$var$scene.add($8d47602718109865$var$ambientLight, $8d47602718109865$var$light);\n//schaduwvlak\nlet $8d47602718109865$var$ground;\n// Voeg een axis helper toe\n//scene.add(new THREE.AxesHelper(2));\nconst $8d47602718109865$var$PlankLichtColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xccac74\n});\nconst $8d47602718109865$var$PlankDonkerColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xccac74\n});\nconst $8d47602718109865$var$KeperColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xccaa66\n});\nconst $8d47602718109865$var$PlaatColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xa28338\n});\nconst $8d47602718109865$var$edgeMaterial = new $dyjou.LineBasicMaterial({\n    color: 0x0000\n});\n//-------------Functie om een object met randen te maken--------------\nfunction $8d47602718109865$var$createBoxWithEdges(geometry, material) {\n    const mesh = new $ilwiq.Mesh(geometry, material);\n    mesh.castShadow = true;\n    const edges = new $dyjou.EdgesGeometry(geometry);\n    const line = new $dyjou.LineSegments(edges, $8d47602718109865$var$edgeMaterial);\n    mesh.add(line);\n    return mesh;\n}\n//--------onderdelen------------\nlet $8d47602718109865$var$Kepers = [];\nlet $8d47602718109865$var$Onderplanken = [];\nlet $8d47602718109865$var$ZijPlanken = [];\nlet $8d47602718109865$var$ZijStaanders = [];\nlet $8d47602718109865$var$KopPlaten = [];\nlet $8d47602718109865$var$KopRegels = [];\nlet $8d47602718109865$var$KopStaanders = [];\nlet $8d47602718109865$var$DekselPlanken = [];\nlet $8d47602718109865$var$TussenPlanken = [];\nlet $8d47602718109865$var$DekselVerstevigingen = [];\n//----Variabelen-----\nlet $8d47602718109865$var$Lengte;\nlet $8d47602718109865$var$Breedte;\nlet $8d47602718109865$var$Hoogte = 0.6;\nlet $8d47602718109865$var$PlaatDikte = 0.018;\nlet $8d47602718109865$var$PlankDikte = 0.02;\nlet $8d47602718109865$var$PlankBreedte = 0.1;\nlet $8d47602718109865$var$KeperBreedte = 0.075;\nlet $8d47602718109865$var$KeperHoogte = 0.1;\nlet $8d47602718109865$var$KeperKopAfstand = 0.1;\nlet $8d47602718109865$var$VerstevigingBreedte = 0.075;\nlet $8d47602718109865$var$VerstevigingDikte = 0.033;\nlet $8d47602718109865$var$KopDikte = $8d47602718109865$var$PlankDikte + $8d47602718109865$var$PlaatDikte;\n$8d47602718109865$var$Breedte = Math.ceil($8d47602718109865$var$Breedte / $8d47602718109865$var$PlankBreedte) * $8d47602718109865$var$PlankBreedte;\n$8d47602718109865$var$Hoogte = Math.ceil($8d47602718109865$var$Hoogte / $8d47602718109865$var$PlankBreedte) * $8d47602718109865$var$PlankBreedte;\nlet $8d47602718109865$var$MaxSpacing = 0.6;\nlet $8d47602718109865$var$AantalKepers;\nlet $8d47602718109865$var$Spacing;\nlet $8d47602718109865$var$AantalZijPlanken;\nlet $8d47602718109865$var$AantalOnderPlanken;\nlet $8d47602718109865$var$KeperAfstand;\nlet $8d47602718109865$var$Zpos;\n//***********************************UITVOERING BEPALEN*****************************$ */\nfunction $8d47602718109865$var$Uitvoering_Bepalen() {\n    console.log($8d47602718109865$var$AantalOnderPlanken);\n    if (document.getElementById('Uitvoering').value == 'Light') {\n        $8d47602718109865$var$PlankDikte = 0.015;\n        $8d47602718109865$var$PlankBreedte = 0.07;\n        $8d47602718109865$var$KeperBreedte = 0.07;\n        $8d47602718109865$var$VerstevigingBreedte = 0.07;\n        $8d47602718109865$var$VerstevigingDikte = 0.025;\n    } else if (document.getElementById('Uitvoering').value == 'Medium') {\n        $8d47602718109865$var$PlankDikte = 0.018;\n        $8d47602718109865$var$PlankBreedte = 0.1;\n        $8d47602718109865$var$KeperBreedte = 0.1;\n        $8d47602718109865$var$VerstevigingBreedte = 0.1;\n        $8d47602718109865$var$VerstevigingDikte = 0.028;\n    } else if (document.getElementById('Uitvoering').value == 'Heavy') {\n        $8d47602718109865$var$PlankDikte = 0.022;\n        $8d47602718109865$var$PlankBreedte = 0.1;\n        $8d47602718109865$var$KeperBreedte = 0.1;\n        $8d47602718109865$var$VerstevigingBreedte = 0.1;\n        $8d47602718109865$var$VerstevigingDikte = 0.025;\n    }\n    $8d47602718109865$var$KopDikte = $8d47602718109865$var$PlankDikte + $8d47602718109865$var$PlaatDikte;\n//------------------Uitvoering bepalen---------------\n}\n//***************Variabelen inlezen en uitrekenen van herhalende parameters.******************\nfunction $8d47602718109865$var$VariabelenInlezen() {\n    //Inlezen van de HTML parameters\n    $8d47602718109865$var$Lengte = parseFloat(document.getElementById('LengteInput').value) / 1000;\n    $8d47602718109865$var$Breedte = parseFloat(document.getElementById('BreedteInput').value) / 1000;\n    $8d47602718109865$var$KeperAfstand = parseFloat(document.getElementById('KeperAfstandInput').value) / 1000;\n    $8d47602718109865$var$Hoogte = parseFloat(document.getElementById('HoogteInput').value) / 1000;\n    const KeperAfstandSlider = document.getElementById('KeperAfstandSlider');\n    KeperAfstandSlider.max = $8d47602718109865$var$Lengte * 1000;\n    KeperAfstandSlider.min = $8d47602718109865$var$AantalKepers * $8d47602718109865$var$KeperBreedte * 1000;\n    $8d47602718109865$var$Lengte = Math.round($8d47602718109865$var$Lengte * 100) / 100;\n    $8d47602718109865$var$Lengte = Math.max(0.5, $8d47602718109865$var$Lengte);\n    $8d47602718109865$var$Breedte = Math.max(0.3, $8d47602718109865$var$Breedte);\n    $8d47602718109865$var$Hoogte = Math.max(0.15, $8d47602718109865$var$Hoogte);\n    $8d47602718109865$var$Lengte = Math.min(4, $8d47602718109865$var$Lengte);\n    $8d47602718109865$var$Breedte = Math.min(4, $8d47602718109865$var$Breedte);\n    $8d47602718109865$var$Hoogte = Math.min(4, $8d47602718109865$var$Hoogte);\n    //We herrekenen de effectieve breedte en hoogte van de kist zodat deze uit volle planken bestaat  \n    $8d47602718109865$var$Breedte = Math.ceil($8d47602718109865$var$Breedte / $8d47602718109865$var$PlankBreedte) * $8d47602718109865$var$PlankBreedte;\n    $8d47602718109865$var$Hoogte = Math.ceil(($8d47602718109865$var$Hoogte + $8d47602718109865$var$PlankDikte) / $8d47602718109865$var$PlankBreedte) * $8d47602718109865$var$PlankBreedte;\n    // We sturen de waarden van Lengte breedte en hoogte terug.\n    document.getElementById('BreedteInput').value = ($8d47602718109865$var$Breedte * 1000).toFixed(0);\n    document.getElementById('HoogteInput').value = (($8d47602718109865$var$Hoogte - $8d47602718109865$var$PlankDikte) * 1000).toFixed(0);\n    document.getElementById('LengteInput').value = ($8d47602718109865$var$Lengte * 1000).toFixed(0);\n    // AantalZijplanken\n    $8d47602718109865$var$AantalZijPlanken = Math.round($8d47602718109865$var$Hoogte / $8d47602718109865$var$PlankBreedte);\n    $8d47602718109865$var$AantalOnderPlanken = Math.round($8d47602718109865$var$Breedte / $8d47602718109865$var$PlankBreedte);\n    //Keper Afstand bepalen voor manuele input  \n    /*Het aantal Kepers wordt altijd automatisch bepaald aan de hand van de standaard overspanning.\r\n  Maar als de Checkbox Aantal kepers zelf bepalen aangevinkt staat is de waarde gelijk aan de input.*/ if (document.getElementById('KeperAfstandCheck').checked) {\n        const KeperAantal = document.getElementById('KeperAantalInput');\n        $8d47602718109865$var$AantalKepers = KeperAantal.value;\n        $8d47602718109865$var$AantalKepers = Math.max(2, $8d47602718109865$var$AantalKepers);\n        KeperAantal.value = $8d47602718109865$var$AantalKepers;\n        $8d47602718109865$var$KeperAfstand = Math.max($8d47602718109865$var$KeperAfstand, $8d47602718109865$var$AantalKepers * $8d47602718109865$var$KeperBreedte);\n        $8d47602718109865$var$KeperAfstand = Math.min($8d47602718109865$var$KeperAfstand, $8d47602718109865$var$Lengte);\n        document.getElementById('KeperAfstandInput').value = ($8d47602718109865$var$KeperAfstand * 1000).toFixed(0);\n        $8d47602718109865$var$Spacing = ($8d47602718109865$var$KeperAfstand - $8d47602718109865$var$KeperBreedte) / ($8d47602718109865$var$AantalKepers - 1);\n    } else {\n        $8d47602718109865$var$AantalKepers = Math.max(2, Math.ceil(($8d47602718109865$var$Lengte + 2 * $8d47602718109865$var$KopDikte - 2 * $8d47602718109865$var$KeperKopAfstand) / $8d47602718109865$var$MaxSpacing));\n        $8d47602718109865$var$KeperAfstand = Math.max($8d47602718109865$var$KeperAfstand, $8d47602718109865$var$AantalKepers * $8d47602718109865$var$KeperBreedte);\n        $8d47602718109865$var$KeperAfstand = Math.min($8d47602718109865$var$KeperAfstand, $8d47602718109865$var$Lengte);\n        $8d47602718109865$var$Spacing = ($8d47602718109865$var$Lengte + 2 * $8d47602718109865$var$KopDikte - 2 * $8d47602718109865$var$KeperKopAfstand - $8d47602718109865$var$KeperBreedte) / ($8d47602718109865$var$AantalKepers - 1);\n    }\n}\n//***************oude onderdelenen verwijderen******************\nfunction $8d47602718109865$var$OnderdelenDeleten() {\n    $8d47602718109865$var$Kepers.forEach((a)=>$8d47602718109865$var$scene.remove(a));\n    $8d47602718109865$var$Onderplanken.forEach((a)=>$8d47602718109865$var$scene.remove(a));\n    $8d47602718109865$var$ZijPlanken.forEach((a)=>$8d47602718109865$var$scene.remove(a));\n    $8d47602718109865$var$ZijStaanders.forEach((a)=>$8d47602718109865$var$scene.remove(a));\n    $8d47602718109865$var$KopPlaten.forEach((a)=>$8d47602718109865$var$scene.remove(a));\n    $8d47602718109865$var$KopRegels.forEach((a)=>$8d47602718109865$var$scene.remove(a));\n    $8d47602718109865$var$KopStaanders.forEach((a)=>$8d47602718109865$var$scene.remove(a));\n    $8d47602718109865$var$DekselPlanken.forEach((a)=>$8d47602718109865$var$scene.remove(a));\n    $8d47602718109865$var$TussenPlanken.forEach((a)=>$8d47602718109865$var$scene.remove(a));\n    $8d47602718109865$var$DekselVerstevigingen.forEach((a)=>$8d47602718109865$var$scene.remove(a));\n}\n//_____________________________________________________________ONDERDELEN____________________________________________________________________\n//*************Kepers***************************************\nfunction $8d47602718109865$var$Keper_Gen() {\n    for(let i = 0; i < $8d47602718109865$var$AantalKepers; i++){\n        // Afmetingen van het onderdeel (x,y,z)\n        let keper = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$Breedte + 2 * $8d47602718109865$var$PlankDikte, $8d47602718109865$var$KeperHoogte, $8d47602718109865$var$KeperBreedte), $8d47602718109865$var$KeperColorMat);\n        let Ypos = -$8d47602718109865$var$KeperHoogte / 2;\n        if (document.getElementById('KeperAfstandCheck').checked) $8d47602718109865$var$Zpos = -0.5 * ($8d47602718109865$var$KeperAfstand - $8d47602718109865$var$KeperBreedte) + i * $8d47602718109865$var$Spacing;\n        else $8d47602718109865$var$Zpos = -($8d47602718109865$var$Lengte / 2 + $8d47602718109865$var$KopDikte - $8d47602718109865$var$KeperBreedte / 2 - $8d47602718109865$var$KeperKopAfstand) + i * $8d47602718109865$var$Spacing;\n        // Positioneren onder de kist\n        keper.position.set(0, Ypos, $8d47602718109865$var$Zpos);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(keper);\n        $8d47602718109865$var$Kepers.push(keper);\n    }\n}\n//*************OnderPlanken***************************************\nfunction $8d47602718109865$var$OnderPlanken_Gen() {\n    for(let i = 0; i < $8d47602718109865$var$AantalOnderPlanken; i++){\n        // Afmetingen van het onderdeel (x,y,z)\n        let OnderPlank = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$PlankBreedte, $8d47602718109865$var$PlankDikte, $8d47602718109865$var$Lengte + 2 * $8d47602718109865$var$KopDikte), $8d47602718109865$var$PlankLichtColorMat);\n        // Positioneren onder de kist\n        OnderPlank.position.set($8d47602718109865$var$Breedte / 2 - i * $8d47602718109865$var$PlankBreedte - $8d47602718109865$var$PlankBreedte / 2, $8d47602718109865$var$PlankDikte / 2, 0);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(OnderPlank);\n        $8d47602718109865$var$Onderplanken.push(OnderPlank);\n    }\n}\n//*************ZijPlanken***************************************\nfunction $8d47602718109865$var$ZijPlanken_Gen() {\n    for(let i = 0; i < $8d47602718109865$var$AantalZijPlanken; i++){\n        // Afmetingen van het onderdeel (x,y,z)\n        let ZijPlank = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$PlankDikte, $8d47602718109865$var$PlankBreedte, $8d47602718109865$var$Lengte + 2 * $8d47602718109865$var$KopDikte), $8d47602718109865$var$PlankLichtColorMat);\n        // Positioneren onder de kist\n        ZijPlank.position.set($8d47602718109865$var$Breedte / 2 + $8d47602718109865$var$PlankDikte / 2, $8d47602718109865$var$PlankBreedte / 2 + i * $8d47602718109865$var$PlankBreedte, 0);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(ZijPlank);\n        $8d47602718109865$var$ZijPlanken.push(ZijPlank);\n    }\n    for(let a = 0; a < $8d47602718109865$var$AantalZijPlanken; a++){\n        // Afmetingen van het onderdeel (x,y,z)\n        let ZijPlank = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$PlankDikte, $8d47602718109865$var$PlankBreedte, $8d47602718109865$var$Lengte + 2 * $8d47602718109865$var$KopDikte), $8d47602718109865$var$PlankLichtColorMat);\n        // Positioneren onder de kist\n        ZijPlank.position.set(-$8d47602718109865$var$Breedte / 2 - $8d47602718109865$var$PlankDikte / 2, $8d47602718109865$var$PlankBreedte / 2 + a * $8d47602718109865$var$PlankBreedte, 0);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(ZijPlank);\n        $8d47602718109865$var$ZijPlanken.push(ZijPlank);\n    }\n}\n//*************Zijstaander***************************************\nfunction $8d47602718109865$var$Zijstaander_Gen() {\n    for(let i = 0; i < $8d47602718109865$var$AantalKepers; i++){\n        let Xsize = $8d47602718109865$var$VerstevigingDikte;\n        let Ysize = $8d47602718109865$var$KeperHoogte - 0.01 + $8d47602718109865$var$PlankDikte + $8d47602718109865$var$Hoogte;\n        let Zsize = $8d47602718109865$var$VerstevigingBreedte;\n        // Afmetingen van het onderdeel (x,y,z)\n        let ZijkantStaander = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry(Xsize, Ysize, Zsize), $8d47602718109865$var$PlankDonkerColorMat);\n        let Xpos = $8d47602718109865$var$Breedte / 2 + $8d47602718109865$var$PlankDikte + $8d47602718109865$var$VerstevigingDikte / 2;\n        let Ypos = -$8d47602718109865$var$KeperHoogte + 0.01 + ($8d47602718109865$var$Hoogte + $8d47602718109865$var$KeperHoogte - 0.010 + $8d47602718109865$var$PlankDikte) * 1 / 2;\n        if (document.getElementById('KeperAfstandCheck').checked) $8d47602718109865$var$Zpos = -0.5 * ($8d47602718109865$var$KeperAfstand - $8d47602718109865$var$KeperBreedte) + i * $8d47602718109865$var$Spacing;\n        else $8d47602718109865$var$Zpos = -($8d47602718109865$var$Lengte / 2 + $8d47602718109865$var$KopDikte - $8d47602718109865$var$KeperBreedte / 2 - $8d47602718109865$var$KeperKopAfstand) + i * $8d47602718109865$var$Spacing;\n        // Positioneren onder de kist\n        ZijkantStaander.position.set(Xpos, Ypos, $8d47602718109865$var$Zpos);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(ZijkantStaander);\n        $8d47602718109865$var$ZijStaanders.push(ZijkantStaander);\n    }\n    for(let a = 0; a < $8d47602718109865$var$AantalKepers; a++){\n        // Afmetangen van het onderdeel (x,y,z)\n        let ZijkantStaander = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$VerstevigingDikte, $8d47602718109865$var$KeperHoogte - 0.01 + $8d47602718109865$var$PlankDikte + $8d47602718109865$var$AantalZijPlanken * $8d47602718109865$var$PlankBreedte, $8d47602718109865$var$VerstevigingBreedte), $8d47602718109865$var$PlankDonkerColorMat);\n        // Positioneren onder de kist\n        let Xpos = $8d47602718109865$var$Breedte / 2 + $8d47602718109865$var$PlankDikte + $8d47602718109865$var$VerstevigingDikte / 2;\n        let Ypos = -$8d47602718109865$var$KeperHoogte + 0.01 + ($8d47602718109865$var$Hoogte + $8d47602718109865$var$KeperHoogte - 0.01 + $8d47602718109865$var$PlankDikte) * 1 / 2;\n        if (document.getElementById('KeperAfstandCheck').checked) $8d47602718109865$var$Zpos = -0.5 * ($8d47602718109865$var$KeperAfstand - $8d47602718109865$var$KeperBreedte) + a * $8d47602718109865$var$Spacing;\n        else $8d47602718109865$var$Zpos = -($8d47602718109865$var$Lengte / 2 + $8d47602718109865$var$KopDikte - $8d47602718109865$var$KeperBreedte / 2 - $8d47602718109865$var$KeperKopAfstand) + a * $8d47602718109865$var$Spacing;\n        // Positioneren onder de kist\n        ZijkantStaander.position.set(-Xpos, Ypos, $8d47602718109865$var$Zpos);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(ZijkantStaander);\n        $8d47602718109865$var$ZijStaanders.push(ZijkantStaander);\n    }\n}\n//*************KopPlaten***************************************\nfunction $8d47602718109865$var$KopPlaten_Gen() {\n    for(let i = 0; i < 2; i++){\n        // Afmetingen van het onderdeel (x,y,z)\n        let KopPlaat = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$Breedte - 0.001, $8d47602718109865$var$AantalZijPlanken * $8d47602718109865$var$PlankBreedte - $8d47602718109865$var$PlankDikte, $8d47602718109865$var$PlaatDikte), $8d47602718109865$var$PlaatColorMat);\n        if (i == 0) // Positioneren onder de kist\n        KopPlaat.position.set(0, $8d47602718109865$var$AantalZijPlanken * $8d47602718109865$var$PlankBreedte / 2 + $8d47602718109865$var$PlankDikte / 2, ($8d47602718109865$var$Lengte + $8d47602718109865$var$PlaatDikte) * 1 / 2);\n        else KopPlaat.position.set(0, $8d47602718109865$var$AantalZijPlanken * $8d47602718109865$var$PlankBreedte / 2 + $8d47602718109865$var$PlankDikte / 2, ($8d47602718109865$var$Lengte + $8d47602718109865$var$PlaatDikte) * -1 / 2);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(KopPlaat);\n        $8d47602718109865$var$KopPlaten.push(KopPlaat);\n    }\n}\n//*************KopRegels***************************************\nfunction $8d47602718109865$var$KopRegels_Gen() {\n    for(let i = 0; i < 2; i++){\n        // Afmetingen van het onderdeel (x,y,z)\n        let KopRegel = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$Breedte - 2 * $8d47602718109865$var$PlankBreedte, $8d47602718109865$var$PlankBreedte, $8d47602718109865$var$PlankDikte), $8d47602718109865$var$PlankDonkerColorMat);\n        KopRegel.position.set(0, $8d47602718109865$var$PlankDikte + $8d47602718109865$var$PlankBreedte / 2 + i * (($8d47602718109865$var$AantalZijPlanken - 1) * $8d47602718109865$var$PlankBreedte - $8d47602718109865$var$PlankDikte), ($8d47602718109865$var$Lengte + 2 * $8d47602718109865$var$PlaatDikte + $8d47602718109865$var$PlankDikte) * 1 / 2 + 0.001);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(KopRegel);\n        $8d47602718109865$var$KopRegels.push(KopRegel);\n    }\n    for(let a = 0; a < 2; a++){\n        // Afmetingen van het onderdeel (x,y,z)\n        let KopRegel = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$Breedte - 2 * $8d47602718109865$var$PlankBreedte, $8d47602718109865$var$PlankBreedte, $8d47602718109865$var$PlankDikte), $8d47602718109865$var$PlankDonkerColorMat);\n        KopRegel.position.set(0, $8d47602718109865$var$PlankDikte + $8d47602718109865$var$PlankBreedte / 2 + a * (($8d47602718109865$var$AantalZijPlanken - 1) * $8d47602718109865$var$PlankBreedte - $8d47602718109865$var$PlankDikte), ($8d47602718109865$var$Lengte + 2 * $8d47602718109865$var$PlaatDikte + $8d47602718109865$var$PlankDikte) * -1 / 2 - 0.001);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(KopRegel);\n        $8d47602718109865$var$KopRegels.push(KopRegel);\n    }\n}\n//*************KopStaanders***************************************\nfunction $8d47602718109865$var$KopStaanders_Gen() {\n    for(let i = 0; i < 2; i++){\n        // Afmetingen van het onderdeel (x,y,z)\n        let KopStaander = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$PlankBreedte, $8d47602718109865$var$AantalZijPlanken * $8d47602718109865$var$PlankBreedte - $8d47602718109865$var$PlankDikte, $8d47602718109865$var$PlankDikte), $8d47602718109865$var$PlankDonkerColorMat);\n        let Xpos = $8d47602718109865$var$Breedte / 2 - $8d47602718109865$var$PlankBreedte / 2 - i * ($8d47602718109865$var$Breedte - $8d47602718109865$var$PlankBreedte);\n        let Ypos = $8d47602718109865$var$AantalZijPlanken * $8d47602718109865$var$PlankBreedte / 2 + $8d47602718109865$var$PlankDikte / 2;\n        let Zpos = ($8d47602718109865$var$Lengte + 2 * $8d47602718109865$var$PlaatDikte + $8d47602718109865$var$PlankDikte) * 1 / 2 + 0.001;\n        KopStaander.position.set(Xpos, Ypos, Zpos);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(KopStaander);\n        $8d47602718109865$var$KopStaanders.push(KopStaander);\n    }\n    for(let a = 0; a < 2; a++){\n        // Afmetingen van het onderdeel (x,y,z)\n        let KopStaander = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$PlankBreedte, $8d47602718109865$var$AantalZijPlanken * $8d47602718109865$var$PlankBreedte - $8d47602718109865$var$PlankDikte, $8d47602718109865$var$PlankDikte), $8d47602718109865$var$PlankDonkerColorMat);\n        let Xpos = $8d47602718109865$var$Breedte / 2 - $8d47602718109865$var$PlankBreedte / 2 - a * ($8d47602718109865$var$Breedte - $8d47602718109865$var$PlankBreedte);\n        let Ypos = $8d47602718109865$var$AantalZijPlanken * $8d47602718109865$var$PlankBreedte / 2 + $8d47602718109865$var$PlankDikte / 2;\n        let Zpos = ($8d47602718109865$var$Lengte + 2 * $8d47602718109865$var$PlaatDikte + $8d47602718109865$var$PlankDikte) * 1 / 2 + 0.001;\n        KopStaander.position.set(Xpos, Ypos, -Zpos);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(KopStaander);\n        $8d47602718109865$var$KopStaanders.push(KopStaander);\n    }\n}\n//*************DekselPlanken***************************************\nfunction $8d47602718109865$var$DekselPlanken_Gen() {\n    for(let i = 0; i < $8d47602718109865$var$AantalOnderPlanken - 2; i++){\n        // Afmetingen van het onderdeel (x,y,z)\n        let DekselPlank = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$PlankBreedte, $8d47602718109865$var$PlankDikte, $8d47602718109865$var$Lengte + 2 * $8d47602718109865$var$KopDikte), $8d47602718109865$var$PlankLichtColorMat);\n        let Xpos = $8d47602718109865$var$Breedte / 2 - i * $8d47602718109865$var$PlankBreedte - $8d47602718109865$var$PlankBreedte / 2 + $8d47602718109865$var$PlankDikte;\n        let Ypos = $8d47602718109865$var$Hoogte + $8d47602718109865$var$PlankDikte / 2;\n        // Positioneren onder de kist\n        DekselPlank.position.set(Xpos, Ypos, 0);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(DekselPlank);\n        $8d47602718109865$var$DekselPlanken.push(DekselPlank);\n    }\n    //---------------Tweede kant---------------------\n    for(let i = 0; i < 2; i++){\n        // Afmetingen van het onderdeel (x,y,z)\n        let DekselPlank = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$PlankBreedte, $8d47602718109865$var$PlankDikte, $8d47602718109865$var$Lengte + 2 * $8d47602718109865$var$KopDikte), $8d47602718109865$var$PlankLichtColorMat);\n        let Xpos = $8d47602718109865$var$Breedte / 2 - i * $8d47602718109865$var$PlankBreedte - $8d47602718109865$var$PlankBreedte / 2 + $8d47602718109865$var$PlankDikte;\n        let Ypos = $8d47602718109865$var$Hoogte + $8d47602718109865$var$PlankDikte / 2;\n        // Positioneren onder de kist\n        DekselPlank.position.set(-Xpos, Ypos, 0);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(DekselPlank);\n        $8d47602718109865$var$DekselPlanken.push(DekselPlank);\n    }\n}\n//*************TussenPlanken***************************************\nfunction $8d47602718109865$var$TussenPlanken_Gen() {\n    // Afmetingen van het onderdeel (x,y,z)\n    let TussenPlank = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry(2 * $8d47602718109865$var$PlankDikte, $8d47602718109865$var$PlankDikte, $8d47602718109865$var$Lengte + 2 * $8d47602718109865$var$KopDikte), $8d47602718109865$var$PlankLichtColorMat);\n    let Xpos = -($8d47602718109865$var$Breedte / 2 - 2 * $8d47602718109865$var$PlankBreedte);\n    let Ypos = $8d47602718109865$var$Hoogte + $8d47602718109865$var$PlankDikte / 2;\n    // Positioneren onder de kist\n    TussenPlank.position.set(Xpos, Ypos, 0);\n    // Toevoegen aan de scene en de array\n    $8d47602718109865$var$scene.add(TussenPlank);\n    $8d47602718109865$var$TussenPlanken.push(TussenPlank);\n}\n//*************DekselVersteviging***************************************\nfunction $8d47602718109865$var$DekselVersteviging_Gen() {\n    // Afmetingen van het onderdeel (x,y,z)\n    for(let i = 0; i < $8d47602718109865$var$AantalKepers; i++){\n        let DekselVersteviging = $8d47602718109865$var$createBoxWithEdges(new $ilwiq.BoxGeometry($8d47602718109865$var$Breedte + 2 * $8d47602718109865$var$PlankDikte + 2 * $8d47602718109865$var$VerstevigingDikte, $8d47602718109865$var$VerstevigingDikte, $8d47602718109865$var$VerstevigingBreedte), $8d47602718109865$var$PlankDonkerColorMat);\n        let Ypos = $8d47602718109865$var$Hoogte + $8d47602718109865$var$PlankDikte + $8d47602718109865$var$VerstevigingDikte / 2;\n        if (document.getElementById('KeperAfstandCheck').checked) $8d47602718109865$var$Zpos = -0.5 * ($8d47602718109865$var$KeperAfstand - $8d47602718109865$var$KeperBreedte) + i * $8d47602718109865$var$Spacing;\n        else $8d47602718109865$var$Zpos = -($8d47602718109865$var$Lengte / 2 + $8d47602718109865$var$KopDikte - $8d47602718109865$var$KeperBreedte / 2 - $8d47602718109865$var$KeperKopAfstand) + i * $8d47602718109865$var$Spacing;\n        // Positioneren onder de kist\n        DekselVersteviging.position.set(0, Ypos, $8d47602718109865$var$Zpos);\n        // Toevoegen aan de scene en de array\n        $8d47602718109865$var$scene.add(DekselVersteviging);\n        $8d47602718109865$var$DekselVerstevigingen.push(DekselVersteviging);\n    }\n}\n//-----------------schaduwvlak toevoegen------------------------\nif ($8d47602718109865$var$ground) $8d47602718109865$var$scene.remove($8d47602718109865$var$ground);\n$8d47602718109865$var$ground = new $ilwiq.Mesh(new $ilwiq.PlaneGeometry(30, 30), new $dyjou.ShadowMaterial({\n    color: 0xD3D3D3\n}));\n$8d47602718109865$var$ground.rotation.x = -Math.PI / 2;\n$8d47602718109865$var$ground.receiveShadow = true;\n$8d47602718109865$var$ground.position.y = -$8d47602718109865$var$KeperHoogte;\n$8d47602718109865$var$scene.add($8d47602718109865$var$ground);\n//___________________________________________________________________________________________________________________________________________________________\nfunction $8d47602718109865$var$UpdateModel() {\n    $8d47602718109865$var$Uitvoering_Bepalen();\n    $8d47602718109865$var$VariabelenInlezen();\n    $8d47602718109865$var$OnderdelenDeleten();\n    $8d47602718109865$var$Keper_Gen();\n    $8d47602718109865$var$OnderPlanken_Gen();\n    $8d47602718109865$var$ZijPlanken_Gen();\n    $8d47602718109865$var$Zijstaander_Gen();\n    $8d47602718109865$var$KopPlaten_Gen();\n    $8d47602718109865$var$KopRegels_Gen();\n    $8d47602718109865$var$KopStaanders_Gen();\n    if (document.getElementById('DekselVerbergenCheck').checked == false) {\n        $8d47602718109865$var$DekselPlanken_Gen();\n        $8d47602718109865$var$TussenPlanken_Gen();\n        $8d47602718109865$var$DekselVersteviging_Gen();\n    }\n}\n//---------animatie starten------------\nfunction $8d47602718109865$var$animate() {\n    requestAnimationFrame($8d47602718109865$var$animate);\n    $8d47602718109865$var$controls.update();\n    $8d47602718109865$var$renderer.render($8d47602718109865$var$scene, $8d47602718109865$var$camera);\n}\n$8d47602718109865$var$animate();\n//-------------kist updaten bij aanpassing-----------\nfunction $8d47602718109865$var$setupEventListeners() {\n    const elements = document.querySelectorAll(\"input, select, textarea\");\n    elements.forEach((el)=>{\n        if (el.tagName === \"INPUT\") {\n            if (el.type === \"range\") // Sliders live update bij input\n            el.addEventListener(\"input\", $8d47602718109865$var$UpdateModel);\n            else if (el.type === \"text\" || el.type === \"number\") {\n                // Tekst/nummer: update bij blur of Enter\n                el.addEventListener(\"blur\", $8d47602718109865$var$UpdateModel);\n                el.addEventListener(\"keydown\", (e)=>{\n                    if (e.key === \"Enter\") $8d47602718109865$var$UpdateModel();\n                });\n            } else if (el.type === \"checkbox\") // Checkbox update bij change\n            el.addEventListener(\"change\", $8d47602718109865$var$UpdateModel);\n        } else if (el.tagName === \"SELECT\") // Select update bij change\n        el.addEventListener(\"change\", $8d47602718109865$var$UpdateModel);\n    });\n}\n$8d47602718109865$var$UpdateModel();\n$8d47602718109865$var$setupEventListeners();\n\n\n//# sourceMappingURL=Massieve_kist.846e43b4.js.map\n","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\n\r\n\r\n\r\n// De scene\r\nvar scene = new THREE.Scene();\r\nscene.background = new THREE.Color('white');\r\n\r\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\r\nconst container = document.getElementById('canvas-container');\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true, powerPreference: \"high-performance\",  canvas: container.querySelector('canvas') });\r\nrenderer.setSize(container.clientWidth, container.clientHeight);\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n// Update canvas bij resize:\r\nwindow.addEventListener('resize', () => {\r\n  const width = container.clientWidth;\r\n  const height = container.clientHeight;\r\n  renderer.setSize(width, height);\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n});\r\n\r\n// Camera die de grootte van de container gebruikt\r\nvar camera = new THREE.PerspectiveCamera(\r\n  70,\r\n  container.clientWidth / container.clientHeight,\r\n  0.1,\r\n  1000\r\n);\r\ncamera.position.set(1.2, 1.2, 1.2);\r\ncamera.lookAt(scene.position);\r\n\r\n\r\n\r\n\r\n// OrbitControls instellen\r\nvar controls = new OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true; // Schakel demping in voor soepelere beweging\r\ncontrols.dampingFactor = 0.25;\r\ncontrols.screenSpacePanning = false;\r\n\r\n\r\n// Verlichting toevoegen\r\nconst ambientLight = new THREE.AmbientLight(0xf6cd8b, 2.0);\r\nconst light = new THREE.DirectionalLight(0xFFFFFF, 2.0);\r\nlight.position.set(2.5, 5, 5);\r\nlight.castShadow = true;\r\nlight.shadow.mapSize.width = 2048;\r\nlight.shadow.mapSize.height = 2048;\r\nlight.shadow.camera.near = 0.5;\r\nlight.shadow.camera.far = 50;\r\nlight.shadow.camera.left = -10;\r\nlight.shadow.camera.right = 10;\r\nlight.shadow.camera.top = 10;\r\nlight.shadow.camera.bottom = -10;\r\nrenderer.shadowMap.enabled = true;\r\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\r\nscene.add(ambientLight, light);\r\n\r\n//schaduwvlak\r\nlet ground;\r\n\r\n// Voeg een axis helper toe\r\n//scene.add(new THREE.AxesHelper(2));\r\n\r\n\r\nconst PlankLichtColorMat = new THREE.MeshStandardMaterial({ color: \t\t0xccac74 });\r\nconst PlankDonkerColorMat = new THREE.MeshStandardMaterial({ color: \t\t\t0xccac74 });\r\nconst KeperColorMat = new THREE.MeshStandardMaterial({ color: \t\t0xccaa66 });\r\nconst PlaatColorMat = new THREE.MeshStandardMaterial({ color: \t\t0xa28338 });\r\n\r\nconst edgeMaterial = new THREE.LineBasicMaterial({ color: 0x0000 });\r\n\r\n\r\n\r\n//-------------Functie om een object met randen te maken--------------\r\nfunction createBoxWithEdges(geometry, material) {\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.castShadow = true;\r\n    const edges = new THREE.EdgesGeometry(geometry);\r\n    const line = new THREE.LineSegments(edges, edgeMaterial);\r\n    mesh.add(line);\r\n    return mesh;\r\n}\r\n\r\n\r\n//--------onderdelen------------\r\nlet Kepers = [];\r\nlet Onderplanken = [];\r\nlet ZijPlanken=[];\r\nlet ZijStaanders=[];\r\nlet KopPlaten=[];\r\nlet KopRegels=[];\r\nlet KopStaanders=[];\r\nlet DekselPlanken=[];\r\nlet TussenPlanken =[];\r\nlet DekselVerstevigingen = [];\r\n\r\n//----Variabelen-----\r\nlet Lengte;\r\nlet Breedte;\r\nlet Hoogte = 600/1000;\r\n\r\n\r\nlet PlaatDikte = 18/1000;\r\nlet PlankDikte = 20/1000;\r\nlet PlankBreedte = 100/1000;\r\nlet KeperBreedte = 75/1000;\r\nlet KeperHoogte = 100/1000;\r\nlet KeperKopAfstand = 100/1000;\r\nlet VerstevigingBreedte = 75/1000;\r\nlet VerstevigingDikte = 33/1000 ;\r\nlet KopDikte= PlankDikte+PlaatDikte;\r\n\r\nBreedte = Math.ceil(Breedte/PlankBreedte)*PlankBreedte;\r\nHoogte= Math.ceil(Hoogte/PlankBreedte)*PlankBreedte;\r\n\r\nlet MaxSpacing=600/1000;\r\nlet AantalKepers;\r\nlet Spacing;\r\nlet AantalZijPlanken;\r\nlet AantalOnderPlanken;\r\nlet KeperAfstand;\r\nlet Zpos;\r\n\r\n\r\n\r\n//***********************************UITVOERING BEPALEN*****************************$ */\r\nfunction Uitvoering_Bepalen(){\r\n     console.log(AantalOnderPlanken);    \r\n\r\n     if (document.getElementById('Uitvoering').value== 'Light'){\r\n        PlankDikte=15/1000;\r\n        PlankBreedte=70/1000;\r\n        KeperBreedte=70/1000;\r\n        VerstevigingBreedte = 70/1000;\r\n        VerstevigingDikte = 25/1000 ;\r\n\r\n        }\r\n    else if(document.getElementById('Uitvoering').value == 'Medium'){\r\n        PlankDikte=18/1000;\r\n        PlankBreedte=100/1000;\r\n        KeperBreedte=100/1000;\r\n        VerstevigingBreedte = 100/1000;\r\n        VerstevigingDikte = 28/1000 ;\r\n        }\r\n    else if(document.getElementById('Uitvoering').value == 'Heavy'){\r\n        PlankDikte=22/1000;\r\n        PlankBreedte=100/1000;\r\n        KeperBreedte=100/1000;\r\n                VerstevigingBreedte = 100/1000;\r\n        VerstevigingDikte = 25/1000 ;\r\n        }  \r\n         KopDikte= PlankDikte+PlaatDikte;\r\n\r\n\r\n      //------------------Uitvoering bepalen---------------\r\n\r\n}\r\n\r\n\r\n//***************Variabelen inlezen en uitrekenen van herhalende parameters.******************\r\n\r\nfunction VariabelenInlezen(){\r\n\r\n        \r\n \r\n  //Inlezen van de HTML parameters\r\n    Lengte = parseFloat(document.getElementById('LengteInput').value)/1000;\r\n    Breedte = parseFloat(document.getElementById('BreedteInput').value)/1000;\r\n    KeperAfstand = parseFloat(document.getElementById('KeperAfstandInput').value)/1000;\r\n    Hoogte = (parseFloat(document.getElementById('HoogteInput').value)/1000);\r\n\r\n    const KeperAfstandSlider = document.getElementById('KeperAfstandSlider');\r\n    KeperAfstandSlider.max = (Lengte)*1000;\r\n    KeperAfstandSlider.min = (AantalKepers*KeperBreedte)*1000;\r\n\r\n    Lengte = Math.round(Lengte*100)/100;\r\n\r\n    Lengte = Math.max(500/1000,Lengte); \r\n    Breedte = Math.max(300/1000,Breedte);\r\n    Hoogte = Math.max(150/1000,Hoogte);\r\n    Lengte = Math.min(4000/1000,Lengte);\r\n    Breedte = Math.min(4000/1000,Breedte);\r\n    Hoogte = Math.min(4000/1000,Hoogte);\r\n    \r\n //We herrekenen de effectieve breedte en hoogte van de kist zodat deze uit volle planken bestaat  \r\n    Breedte = Math.ceil((Breedte)/PlankBreedte)*PlankBreedte;\r\n    Hoogte = (Math.ceil((Hoogte+PlankDikte)/PlankBreedte))*PlankBreedte;\r\n\r\n   // We sturen de waarden van Lengte breedte en hoogte terug.\r\n  document.getElementById('BreedteInput').value = (Breedte*1000).toFixed(0);\r\n  document.getElementById('HoogteInput').value = ((Hoogte-PlankDikte)*1000).toFixed(0);   \r\n  document.getElementById('LengteInput').value = (Lengte*1000).toFixed(0);\r\n\r\n\r\n\r\n// AantalZijplanken\r\n  AantalZijPlanken = Math.round(Hoogte/PlankBreedte);\r\n  AantalOnderPlanken = Math.round(Breedte/PlankBreedte);\r\n\r\n  //Keper Afstand bepalen voor manuele input  \r\n  /*Het aantal Kepers wordt altijd automatisch bepaald aan de hand van de standaard overspanning.\r\n  Maar als de Checkbox Aantal kepers zelf bepalen aangevinkt staat is de waarde gelijk aan de input.*/\r\n\r\n  if (document.getElementById('KeperAfstandCheck').checked){\r\n    const KeperAantal = document.getElementById('KeperAantalInput');\r\n    AantalKepers = KeperAantal.value;\r\n    AantalKepers = Math.max(2,AantalKepers);\r\n    KeperAantal.value= AantalKepers;\r\n\r\n\r\n    KeperAfstand = Math.max(KeperAfstand,AantalKepers*KeperBreedte);\r\n    KeperAfstand = Math.min(KeperAfstand,Lengte);\r\n    document.getElementById('KeperAfstandInput').value=(KeperAfstand*1000).toFixed(0);\r\n    Spacing = (KeperAfstand-KeperBreedte)/((AantalKepers-1)) ;\r\n  }\r\n  else {\r\n    AantalKepers = Math.max(2, Math.ceil((Lengte+2*KopDikte-2*KeperKopAfstand)/(MaxSpacing)));\r\n    KeperAfstand = Math.max(KeperAfstand,AantalKepers*KeperBreedte);\r\n    KeperAfstand = Math.min(KeperAfstand,Lengte);\r\n    Spacing = (Lengte+2*KopDikte-2*KeperKopAfstand-KeperBreedte)/(AantalKepers-1); \r\n\r\n  }\r\n\r\n\r\n  }\r\n\r\n//***************oude onderdelenen verwijderen******************\r\n\r\nfunction OnderdelenDeleten(){\r\n    Kepers.forEach(a => scene.remove(a));\r\n    Onderplanken.forEach(a => scene.remove(a));\r\n    ZijPlanken.forEach(a => scene.remove(a));\r\n    ZijStaanders.forEach(a=>scene.remove(a));\r\n    KopPlaten.forEach(a=>scene.remove(a));\r\n    KopRegels.forEach(a=>scene.remove(a));\r\n    KopStaanders.forEach(a=>scene.remove(a));\r\n    DekselPlanken.forEach(a=>scene.remove(a));\r\n    TussenPlanken.forEach(a=>scene.remove(a));\r\n    DekselVerstevigingen.forEach(a=>scene.remove(a));\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n//_____________________________________________________________ONDERDELEN____________________________________________________________________\r\n//*************Kepers***************************************\r\nfunction Keper_Gen(){\r\n    \r\n    for (let i=0; i<AantalKepers;i++){\r\n\r\n        \r\n        // Afmetingen van het onderdeel (x,y,z)\r\n\r\n    let keper = createBoxWithEdges(new THREE.BoxGeometry(Breedte+2*PlankDikte, KeperHoogte,KeperBreedte), KeperColorMat);\r\n \r\n    let Ypos = -KeperHoogte/2;\r\n    if (document.getElementById('KeperAfstandCheck').checked){\r\n    Zpos = -1/2*(KeperAfstand-KeperBreedte)+i*Spacing;\r\n    }\r\n    else{\r\n    Zpos = -(Lengte/2+KopDikte-KeperBreedte/2-KeperKopAfstand)+i*Spacing;\r\n    }\r\n\r\n\r\n    // Positioneren onder de kist\r\n    keper.position.set(0,Ypos,Zpos) ;\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(keper);\r\n      Kepers.push(keper);\r\n    }\r\n  \r\n}\r\n\r\n//*************OnderPlanken***************************************\r\nfunction OnderPlanken_Gen(){\r\n\r\n     \r\n    for (let i=0; i<AantalOnderPlanken;i++){\r\n\r\n        \r\n        // Afmetingen van het onderdeel (x,y,z)\r\n      let OnderPlank = createBoxWithEdges(new THREE.BoxGeometry(PlankBreedte,PlankDikte,Lengte+2*KopDikte), PlankLichtColorMat);\r\n  \r\n      // Positioneren onder de kist\r\n      OnderPlank.position.set(Breedte/2-i*PlankBreedte-PlankBreedte/2, PlankDikte/2,0);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(OnderPlank);\r\n      Onderplanken.push(OnderPlank);\r\n    }\r\n  \r\n}\r\n\r\n//*************ZijPlanken***************************************\r\nfunction ZijPlanken_Gen(){\r\n     \r\n    for (let i=0; i<AantalZijPlanken;i++){\r\n\r\n       // Afmetingen van het onderdeel (x,y,z)\r\n      let ZijPlank = createBoxWithEdges(new THREE.BoxGeometry(PlankDikte,PlankBreedte,Lengte+2*KopDikte), PlankLichtColorMat);\r\n  \r\n      // Positioneren onder de kist\r\n      ZijPlank.position.set(Breedte/2+PlankDikte/2,PlankBreedte/2+i*PlankBreedte,0);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(ZijPlank);\r\n      ZijPlanken.push(ZijPlank);\r\n    }\r\n        for (let a=0; a<AantalZijPlanken;a++){\r\n\r\n       // Afmetingen van het onderdeel (x,y,z)\r\n      let ZijPlank = createBoxWithEdges(new THREE.BoxGeometry(PlankDikte,PlankBreedte,Lengte+2*KopDikte), PlankLichtColorMat);\r\n  \r\n      // Positioneren onder de kist\r\n      ZijPlank.position.set(-Breedte/2-PlankDikte/2,PlankBreedte/2+a*PlankBreedte,0);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(ZijPlank);\r\n      ZijPlanken.push(ZijPlank);\r\n    }\r\n\r\n  \r\n}\r\n\r\n//*************Zijstaander***************************************\r\nfunction Zijstaander_Gen(){\r\n\r\n\r\n    \r\n   for (let i=0; i<AantalKepers;i++){\r\n\r\n        \r\n    let Xsize= VerstevigingDikte;\r\n    let Ysize= (KeperHoogte-10/1000) + PlankDikte + Hoogte;\r\n    let Zsize= VerstevigingBreedte;\r\n        // Afmetingen van het onderdeel (x,y,z)\r\n      let ZijkantStaander = createBoxWithEdges(new THREE.BoxGeometry(Xsize,Ysize,Zsize), PlankDonkerColorMat);\r\n      \r\n      let Xpos = Breedte/2+PlankDikte+VerstevigingDikte/2;\r\n      let Ypos =  -KeperHoogte+10/1000+(Hoogte+KeperHoogte-0.010+PlankDikte)*1/2;\r\n      if (document.getElementById('KeperAfstandCheck').checked){\r\n       Zpos = -1/2*(KeperAfstand-KeperBreedte)+i*Spacing;\r\n      }\r\n       else{\r\n       Zpos = -(Lengte/2+KopDikte-KeperBreedte/2-KeperKopAfstand)+i*Spacing;\r\n      }\r\n\r\n      // Positioneren onder de kist\r\n      ZijkantStaander.position.set(Xpos,Ypos, Zpos);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(ZijkantStaander);\r\n      ZijStaanders.push(ZijkantStaander);\r\n    }\r\n       for (let a=0; a<AantalKepers;a++){\r\n\r\n        \r\n        // Afmetangen van het onderdeel (x,y,z)\r\n      let ZijkantStaander = createBoxWithEdges(new THREE.BoxGeometry(VerstevigingDikte,( KeperHoogte-10/1000) + PlankDikte + AantalZijPlanken * PlankBreedte,VerstevigingBreedte), PlankDonkerColorMat);\r\n  \r\n      // Positioneren onder de kist\r\n      let Xpos =  Breedte/2+PlankDikte+VerstevigingDikte/2;\r\n      let Ypos =  -KeperHoogte+10/1000+(Hoogte+KeperHoogte-10/1000+PlankDikte)*1/2;\r\n          if (document.getElementById('KeperAfstandCheck').checked){\r\n    Zpos = -1/2*(KeperAfstand-KeperBreedte)+a*Spacing;\r\n    }\r\n    else{\r\n    Zpos = -(Lengte/2+KopDikte-KeperBreedte/2-KeperKopAfstand)+a*Spacing;\r\n    }\r\n\r\n\r\n\r\n      // Positioneren onder de kist\r\n      ZijkantStaander.position.set(-Xpos,Ypos, Zpos);\r\n      // Toevoegen aan de scene en de array\r\n      scene.add(ZijkantStaander);\r\n      ZijStaanders.push(ZijkantStaander);\r\n    }\r\n}\r\n//*************KopPlaten***************************************\r\nfunction KopPlaten_Gen(){\r\n\r\n     \r\n    for (let i=0; i<2;i++){\r\n\r\n        \r\n        // Afmetingen van het onderdeel (x,y,z)\r\n      let KopPlaat = createBoxWithEdges(new THREE.BoxGeometry(Breedte-0.001,AantalZijPlanken*PlankBreedte-PlankDikte,PlaatDikte), PlaatColorMat);\r\n  if (i==0){\r\n      // Positioneren onder de kist\r\n      KopPlaat.position.set(0,AantalZijPlanken*PlankBreedte/2+PlankDikte/2,(Lengte+PlaatDikte)*1/2);\r\n  }\r\n  else {\r\n\r\n      KopPlaat.position.set(0,AantalZijPlanken*PlankBreedte/2+PlankDikte/2,(Lengte+PlaatDikte)*-1/2);\r\n  }\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(KopPlaat);\r\n      KopPlaten.push(KopPlaat);\r\n    }\r\n  \r\n}\r\n//*************KopRegels***************************************\r\nfunction KopRegels_Gen(){\r\n\r\n     \r\n    for (let i=0; i<2;i++){\r\n\r\n        \r\n        // Afmetingen van het onderdeel (x,y,z)\r\n      let KopRegel = createBoxWithEdges(new THREE.BoxGeometry(Breedte-2*PlankBreedte,PlankBreedte,PlankDikte), PlankDonkerColorMat);\r\n\r\n\r\n      KopRegel.position.set(0,PlankDikte+PlankBreedte/2+(i*((AantalZijPlanken-1)*PlankBreedte-PlankDikte)),(Lengte+2*PlaatDikte+PlankDikte)*1/2+0.001);\r\n  \r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(KopRegel);\r\n      KopRegels.push(KopRegel);\r\n    }\r\n        for (let a=0; a<2;a++){\r\n\r\n        \r\n        // Afmetingen van het onderdeel (x,y,z)\r\n      let KopRegel = createBoxWithEdges(new THREE.BoxGeometry(Breedte -2*PlankBreedte,PlankBreedte,PlankDikte), PlankDonkerColorMat);\r\n\r\n\r\n      KopRegel.position.set(0,PlankDikte+PlankBreedte/2+(a*((AantalZijPlanken-1)*PlankBreedte-PlankDikte)),(Lengte+2*PlaatDikte+PlankDikte)*-1/2-0.001);\r\n  \r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(KopRegel);\r\n      KopRegels.push(KopRegel);\r\n    }\r\n  \r\n  \r\n}\r\n\r\n//*************KopStaanders***************************************\r\nfunction KopStaanders_Gen(){\r\n\r\n     \r\n    for (let i=0; i<2;i++){\r\n\r\n        \r\n        // Afmetingen van het onderdeel (x,y,z)\r\n      let KopStaander = createBoxWithEdges(new THREE.BoxGeometry(PlankBreedte,AantalZijPlanken*PlankBreedte-PlankDikte,PlankDikte), PlankDonkerColorMat);\r\n\r\n      let Xpos= Breedte/2-PlankBreedte/2 - i*(Breedte-PlankBreedte);\r\n      let Ypos = AantalZijPlanken*PlankBreedte/2+PlankDikte/2;\r\n      let Zpos = (Lengte+2*PlaatDikte+PlankDikte)*1/2+0.001;\r\n\r\n      KopStaander.position.set(Xpos,Ypos,Zpos);\r\n  \r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(KopStaander);\r\n      KopStaanders.push(KopStaander);\r\n\r\n       }\r\n           for (let a=0; a<2;a++){\r\n\r\n            // Afmetingen van het onderdeel (x,y,z)\r\n      let KopStaander = createBoxWithEdges(new THREE.BoxGeometry(PlankBreedte,AantalZijPlanken*PlankBreedte-PlankDikte,PlankDikte), PlankDonkerColorMat);\r\n\r\n      let Xpos= Breedte/2-PlankBreedte/2 - a*(Breedte-PlankBreedte);\r\n      let Ypos = AantalZijPlanken*PlankBreedte/2+PlankDikte/2;\r\n      let Zpos = (Lengte+2*PlaatDikte+PlankDikte)*1/2+0.001;\r\n\r\n      KopStaander.position.set(Xpos,Ypos,-Zpos);\r\n  \r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(KopStaander);\r\n      KopStaanders.push(KopStaander);\r\n\r\n       }\r\n  \r\n  \r\n}\r\n\r\n//*************DekselPlanken***************************************\r\nfunction DekselPlanken_Gen(){\r\n\r\n     \r\n    for (let i=0; i<(AantalOnderPlanken-2);i++){\r\n\r\n        \r\n        // Afmetingen van het onderdeel (x,y,z)\r\n      let DekselPlank = createBoxWithEdges(new THREE.BoxGeometry(PlankBreedte,PlankDikte,Lengte+2*KopDikte), PlankLichtColorMat);\r\n  \r\n      let Xpos =  Breedte/2-i*PlankBreedte-PlankBreedte/2+PlankDikte;\r\n      let Ypos =  Hoogte+PlankDikte/2;\r\n      // Positioneren onder de kist\r\n      DekselPlank.position.set(Xpos,Ypos,0);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(DekselPlank);\r\n      DekselPlanken.push(DekselPlank);\r\n    }\r\n    //---------------Tweede kant---------------------\r\n      for (let i=0; i<2;i++){\r\n\r\n        \r\n        // Afmetingen van het onderdeel (x,y,z)\r\n      let DekselPlank = createBoxWithEdges(new THREE.BoxGeometry(PlankBreedte,PlankDikte,Lengte+2*KopDikte), PlankLichtColorMat);\r\n  \r\n      let Xpos =  Breedte/2-i*PlankBreedte-PlankBreedte/2+PlankDikte;\r\n      let Ypos =  Hoogte+PlankDikte/2;\r\n      // Positioneren onder de kist\r\n      DekselPlank.position.set(-Xpos,Ypos,0);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(DekselPlank);\r\n      DekselPlanken.push(DekselPlank);\r\n    \r\n    }\r\n\r\n}\r\n\r\n//*************TussenPlanken***************************************\r\nfunction TussenPlanken_Gen(){\r\n\r\n     \r\n \r\n        \r\n        // Afmetingen van het onderdeel (x,y,z)\r\n      let TussenPlank = createBoxWithEdges(new THREE.BoxGeometry(2*PlankDikte,PlankDikte,Lengte+2*KopDikte), PlankLichtColorMat);\r\n  \r\n      let Xpos =  -(Breedte/2 -2*PlankBreedte);\r\n      let Ypos = Hoogte+PlankDikte/2;\r\n      // Positioneren onder de kist\r\n      TussenPlank.position.set(Xpos,Ypos,0);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(TussenPlank);\r\n      TussenPlanken.push(TussenPlank);\r\n    \r\n}\r\n\r\n//*************DekselVersteviging***************************************\r\nfunction DekselVersteviging_Gen(){\r\n\r\n     \r\n        \r\n    // Afmetingen van het onderdeel (x,y,z)\r\n  for ( let i=0; i<AantalKepers;i++){\r\n    let DekselVersteviging = createBoxWithEdges(new THREE.BoxGeometry(Breedte+2*PlankDikte+2*VerstevigingDikte,VerstevigingDikte,VerstevigingBreedte), PlankDonkerColorMat);\r\n    \r\n    let Ypos = Hoogte+PlankDikte+VerstevigingDikte/2;\r\n    if (document.getElementById('KeperAfstandCheck').checked){\r\n      Zpos = -1/2*(KeperAfstand-KeperBreedte)+i*Spacing;\r\n      }\r\n    else{\r\n      Zpos = -(Lengte/2+KopDikte-KeperBreedte/2-KeperKopAfstand)+i*Spacing;\r\n      }\r\n\r\n       // Positioneren onder de kist\r\n      DekselVersteviging.position.set(0,Ypos,Zpos);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(DekselVersteviging);\r\n      DekselVerstevigingen.push(DekselVersteviging);\r\n  }\r\n}\r\n\r\n//-----------------schaduwvlak toevoegen------------------------\r\nif (ground) scene.remove(ground);\r\nground = new THREE.Mesh(new THREE.PlaneGeometry(30, 30), new THREE.ShadowMaterial({color: 0xD3D3D3}));\r\nground.rotation.x = -Math.PI / 2;\r\nground.receiveShadow = true;\r\nground.position.y = -KeperHoogte;\r\nscene.add(ground);\r\n\r\n//___________________________________________________________________________________________________________________________________________________________\r\n\r\n\r\n\r\nfunction UpdateModel(){\r\n  Uitvoering_Bepalen();\r\n  VariabelenInlezen();\r\n  OnderdelenDeleten();\r\n  Keper_Gen();\r\n  OnderPlanken_Gen();\r\n  ZijPlanken_Gen();\r\n  Zijstaander_Gen();\r\n  KopPlaten_Gen();\r\n  KopRegels_Gen();\r\n  KopStaanders_Gen();\r\n  if (document.getElementById('DekselVerbergenCheck').checked==false){\r\n  DekselPlanken_Gen();\r\n  TussenPlanken_Gen();\r\n  DekselVersteviging_Gen();\r\n}\r\n\r\n\r\n  }\r\n\r\n\r\n//---------animatie starten------------\r\nfunction animate() {\r\n    requestAnimationFrame(animate);\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n  }\r\n  animate();\r\n\r\n\r\n\r\n  \r\n  //-------------kist updaten bij aanpassing-----------\r\nfunction setupEventListeners() {\r\n  const elements = document.querySelectorAll(\"input, select, textarea\");\r\n\r\n  elements.forEach((el) => {\r\n    if (el.tagName === \"INPUT\") {\r\n      if (el.type === \"range\") {\r\n        // Sliders live update bij input\r\n        el.addEventListener(\"input\", UpdateModel);\r\n      } else if (el.type === \"text\" || el.type === \"number\") {\r\n        // Tekst/nummer: update bij blur of Enter\r\n        el.addEventListener(\"blur\", UpdateModel);\r\n        el.addEventListener(\"keydown\", (e) => {\r\n          if (e.key === \"Enter\") UpdateModel();\r\n        });\r\n      } else if (el.type === \"checkbox\") {\r\n        // Checkbox update bij change\r\n        el.addEventListener(\"change\", UpdateModel);\r\n      }\r\n    } else if (el.tagName === \"SELECT\") {\r\n      // Select update bij change\r\n      el.addEventListener(\"change\", UpdateModel);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nUpdateModel();\r\nsetupEventListeners();\r\n  \r\n  "],"names":["$8d47602718109865$var$ground","$8d47602718109865$var$Lengte","$8d47602718109865$var$Breedte","$8d47602718109865$var$AantalKepers","$8d47602718109865$var$Spacing","$8d47602718109865$var$AantalZijPlanken","$8d47602718109865$var$AantalOnderPlanken","$8d47602718109865$var$KeperAfstand","$8d47602718109865$var$Zpos","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$dyjou","$ilwiq","$5Rd1x","$8d47602718109865$var$scene","Scene","background","Color","$8d47602718109865$var$container","document","getElementById","$8d47602718109865$var$renderer","WebGLRenderer","antialias","alpha","powerPreference","canvas","querySelector","setSize","clientWidth","clientHeight","setPixelRatio","window","devicePixelRatio","addEventListener","width","height","$8d47602718109865$var$camera","aspect","updateProjectionMatrix","PerspectiveCamera","position","set","lookAt","$8d47602718109865$var$controls","OrbitControls","domElement","enableDamping","dampingFactor","screenSpacePanning","$8d47602718109865$var$ambientLight","AmbientLight","$8d47602718109865$var$light","DirectionalLight","castShadow","shadow","mapSize","camera","near","far","left","right","top","bottom","shadowMap","enabled","type","PCFSoftShadowMap","add","$8d47602718109865$var$PlankLichtColorMat","MeshStandardMaterial","color","$8d47602718109865$var$PlankDonkerColorMat","$8d47602718109865$var$KeperColorMat","$8d47602718109865$var$PlaatColorMat","$8d47602718109865$var$edgeMaterial","LineBasicMaterial","$8d47602718109865$var$createBoxWithEdges","geometry","material","mesh","Mesh","edges","EdgesGeometry","line","LineSegments","$8d47602718109865$var$Kepers","$8d47602718109865$var$Onderplanken","$8d47602718109865$var$ZijPlanken","$8d47602718109865$var$ZijStaanders","$8d47602718109865$var$KopPlaten","$8d47602718109865$var$KopRegels","$8d47602718109865$var$KopStaanders","$8d47602718109865$var$DekselPlanken","$8d47602718109865$var$TussenPlanken","$8d47602718109865$var$DekselVerstevigingen","$8d47602718109865$var$Hoogte","$8d47602718109865$var$PlankDikte","$8d47602718109865$var$PlankBreedte","$8d47602718109865$var$KeperBreedte","$8d47602718109865$var$VerstevigingBreedte","$8d47602718109865$var$VerstevigingDikte","$8d47602718109865$var$KopDikte","$8d47602718109865$var$UpdateModel","console","log","value","parseFloat","KeperAfstandSlider","max","min","Math","round","ceil","toFixed","checked","KeperAantal","forEach","a","remove","i","keper","BoxGeometry","push","OnderPlank","ZijPlank","$8d47602718109865$var$Zijstaander_Gen","Xsize","Ysize","$8d47602718109865$var$KeperHoogte","Zsize","ZijkantStaander","Xpos","Ypos","KopPlaat","KopRegel","$8d47602718109865$var$KopStaanders_Gen","KopStaander","Zpos","TussenPlank","$8d47602718109865$var$DekselPlanken_Gen","DekselPlank","DekselVersteviging","PlaneGeometry","ShadowMaterial","rotation","x","PI","receiveShadow","y","$8d47602718109865$var$animate","requestAnimationFrame","update","render","elements","querySelectorAll","el","tagName","e","key"],"version":3,"file":"Massieve_kist.846e43b4.js.map"}