{"mappings":"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","sources":["<anon>","js/Open_Krat.js"],"sourcesContent":["import \"./Massieve_kist.626d928d.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $dyjou = parcelRequire(\"dyjou\");\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $5Rd1x = parcelRequire(\"5Rd1x\");\n// De scene\nvar $e51008aa85eeb898$var$scene = new $dyjou.Scene();\n$e51008aa85eeb898$var$scene.background = new $ilwiq.Color('white');\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\nconst $e51008aa85eeb898$var$container = document.getElementById('canvas-container');\nconst $e51008aa85eeb898$var$renderer = new $ilwiq.WebGLRenderer({\n    antialias: true,\n    alpha: true,\n    powerPreference: \"high-performance\",\n    canvas: $e51008aa85eeb898$var$container.querySelector('canvas')\n});\n$e51008aa85eeb898$var$renderer.setSize($e51008aa85eeb898$var$container.clientWidth, $e51008aa85eeb898$var$container.clientHeight);\n$e51008aa85eeb898$var$renderer.setPixelRatio(window.devicePixelRatio);\n// Update canvas bij resize:\nwindow.addEventListener('resize', ()=>{\n    const width = $e51008aa85eeb898$var$container.clientWidth;\n    const height = $e51008aa85eeb898$var$container.clientHeight;\n    $e51008aa85eeb898$var$renderer.setSize(width, height);\n    $e51008aa85eeb898$var$camera.aspect = width / height;\n    $e51008aa85eeb898$var$camera.updateProjectionMatrix();\n});\n// Camera die de grootte van de container gebruikt\nvar $e51008aa85eeb898$var$camera = new $ilwiq.PerspectiveCamera(70, $e51008aa85eeb898$var$container.clientWidth / $e51008aa85eeb898$var$container.clientHeight, 0.1, 1000);\n$e51008aa85eeb898$var$camera.position.set(1.5, 1.5, 1.5);\n$e51008aa85eeb898$var$camera.lookAt($e51008aa85eeb898$var$scene.position);\n// OrbitControls instellen\nvar $e51008aa85eeb898$var$controls = new (0, $5Rd1x.OrbitControls)($e51008aa85eeb898$var$camera, $e51008aa85eeb898$var$renderer.domElement);\n$e51008aa85eeb898$var$controls.enableDamping = true; // Schakel demping in voor soepelere beweging\n$e51008aa85eeb898$var$controls.dampingFactor = 0.25;\n$e51008aa85eeb898$var$controls.screenSpacePanning = false;\n// Verlichting toevoegen\nconst $e51008aa85eeb898$var$ambientLight = new $dyjou.AmbientLight(0xf6cd8b, 2.0);\nconst $e51008aa85eeb898$var$light = new $dyjou.DirectionalLight(0xFFFFFF, 2.0);\n$e51008aa85eeb898$var$light.position.set(2.5, 5, 5);\n$e51008aa85eeb898$var$light.castShadow = true;\n$e51008aa85eeb898$var$light.shadow.mapSize.width = 2048;\n$e51008aa85eeb898$var$light.shadow.mapSize.height = 2048;\n$e51008aa85eeb898$var$light.shadow.camera.near = 0.5;\n$e51008aa85eeb898$var$light.shadow.camera.far = 50;\n$e51008aa85eeb898$var$light.shadow.camera.left = -10;\n$e51008aa85eeb898$var$light.shadow.camera.right = 10;\n$e51008aa85eeb898$var$light.shadow.camera.top = 10;\n$e51008aa85eeb898$var$light.shadow.camera.bottom = -10;\n$e51008aa85eeb898$var$renderer.shadowMap.enabled = true;\n$e51008aa85eeb898$var$renderer.shadowMap.type = $ilwiq.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\n$e51008aa85eeb898$var$scene.add($e51008aa85eeb898$var$ambientLight, $e51008aa85eeb898$var$light);\n//schaduwvlak\nlet $e51008aa85eeb898$var$ground;\n// Voeg een axis helper toe\n//scene.add(new THREE.AxesHelper(2));\n//materialen\nvar $e51008aa85eeb898$var$PlaatMateriaal;\nconst $e51008aa85eeb898$var$OSBColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0x1b7101\n});\nconst $e51008aa85eeb898$var$BetonColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0x1f1716\n});\nconst $e51008aa85eeb898$var$MultColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xccac74\n});\nconst $e51008aa85eeb898$var$KeperColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xccac74\n});\nconst $e51008aa85eeb898$var$edgeMaterial = new $dyjou.LineBasicMaterial({\n    color: 0x000000\n});\n// Functie om een object met randen te maken\nfunction $e51008aa85eeb898$var$createBoxWithEdges(geometry, material) {\n    const mesh = new $ilwiq.Mesh(geometry, material);\n    mesh.castShadow = true;\n    const edges = new $dyjou.EdgesGeometry(geometry);\n    const line = new $dyjou.LineSegments(edges, $e51008aa85eeb898$var$edgeMaterial);\n    mesh.add(line);\n    return mesh;\n}\n//onderdelen aanmaken\nlet $e51008aa85eeb898$var$Blokken = [];\nlet $e51008aa85eeb898$var$BovenPlanken = [];\nlet $e51008aa85eeb898$var$TussenPlanken = [];\nlet $e51008aa85eeb898$var$DekPlanken = [];\nlet $e51008aa85eeb898$var$ZijkantStaanders = [];\nlet $e51008aa85eeb898$var$ZijkantRegels = [];\nlet $e51008aa85eeb898$var$KopStaanders = [];\nlet $e51008aa85eeb898$var$KopRegels = [];\nlet $e51008aa85eeb898$var$DekselRegels = [];\nlet $e51008aa85eeb898$var$DekselStaanders = [];\n// Variabelen aanmaken\nlet $e51008aa85eeb898$var$Lengte;\nlet $e51008aa85eeb898$var$Breedte;\nlet $e51008aa85eeb898$var$Hoogte;\nlet $e51008aa85eeb898$var$AantalBodemPlanken;\nlet $e51008aa85eeb898$var$AantalTussenPlanken;\nlet $e51008aa85eeb898$var$AantalBovenPlanken;\nlet $e51008aa85eeb898$var$AantalZijkantPlanken;\nlet $e51008aa85eeb898$var$AantalDekselPlanken;\nlet $e51008aa85eeb898$var$PlankDikte;\nlet $e51008aa85eeb898$var$PlankBreedte;\nlet $e51008aa85eeb898$var$DekPlankHoogte = 0.022;\nlet $e51008aa85eeb898$var$DekPlankBreedte = 0.100;\nlet $e51008aa85eeb898$var$BodemPlankHoogte = 0.022;\nlet $e51008aa85eeb898$var$BodemPlankBreedte = 0.100;\nlet $e51008aa85eeb898$var$TussenPlankHoogte = 0.022;\nlet $e51008aa85eeb898$var$TussenPlankBreedte = 0.100;\nlet $e51008aa85eeb898$var$DekselPlankHoogte = 0.022;\nlet $e51008aa85eeb898$var$DekselPlankBreedte = 0.1;\nlet $e51008aa85eeb898$var$ZijkantPlankHoogte = 0.022;\nlet $e51008aa85eeb898$var$ZijkantPlankBreedte = 0.1;\nlet $e51008aa85eeb898$var$BlokHoogte = 0.1;\nlet $e51008aa85eeb898$var$BlokBreedte = 0.08;\nlet $e51008aa85eeb898$var$BlokstartZ;\nlet $e51008aa85eeb898$var$BlokspacingZ;\nlet $e51008aa85eeb898$var$ZijkantRegelYStart;\nlet $e51008aa85eeb898$var$ZijkantRegelYSpacing;\nfunction $e51008aa85eeb898$var$VariabelenInLezen() {\n    //input gebruiker ophalen\n    $e51008aa85eeb898$var$Lengte = parseFloat(document.getElementById('LengteSlider').value) / 1000;\n    $e51008aa85eeb898$var$Breedte = parseFloat(document.getElementById('BreedteSlider').value) / 1000;\n    $e51008aa85eeb898$var$Hoogte = parseFloat(document.getElementById('HoogteSlider').value) / 1000;\n    $e51008aa85eeb898$var$AantalBodemPlanken = parseFloat(document.getElementById(\"OnderlatInput\").value);\n    $e51008aa85eeb898$var$AantalTussenPlanken = parseFloat(document.getElementById(\"TussenlatInput\").value);\n    $e51008aa85eeb898$var$AantalBovenPlanken = parseFloat(document.getElementById('DekPlankenInput').value);\n    $e51008aa85eeb898$var$AantalZijkantPlanken = parseFloat(document.getElementById('ZijkantPlankenInput').value);\n    $e51008aa85eeb898$var$AantalDekselPlanken = document.getElementById('DekselPlankenInput').value;\n    $e51008aa85eeb898$var$AantalBodemPlanken = Math.max(2, Math.round($e51008aa85eeb898$var$AantalBodemPlanken));\n    $e51008aa85eeb898$var$AantalTussenPlanken = Math.max(2, Math.round($e51008aa85eeb898$var$AantalTussenPlanken));\n    $e51008aa85eeb898$var$AantalBovenPlanken = Math.max(2, Math.round($e51008aa85eeb898$var$AantalBovenPlanken));\n    $e51008aa85eeb898$var$AantalZijkantPlanken = Math.max(2, Math.round($e51008aa85eeb898$var$AantalZijkantPlanken));\n    $e51008aa85eeb898$var$AantalDekselPlanken = Math.max(2, Math.round($e51008aa85eeb898$var$AantalDekselPlanken));\n    $e51008aa85eeb898$var$Lengte = Math.max($e51008aa85eeb898$var$Lengte, $e51008aa85eeb898$var$AantalTussenPlanken * $e51008aa85eeb898$var$BlokBreedte);\n    $e51008aa85eeb898$var$Breedte = Math.max($e51008aa85eeb898$var$Breedte, $e51008aa85eeb898$var$AantalBovenPlanken * $e51008aa85eeb898$var$DekPlankBreedte, $e51008aa85eeb898$var$AantalBodemPlanken * $e51008aa85eeb898$var$BodemPlankBreedte, $e51008aa85eeb898$var$AantalDekselPlanken * $e51008aa85eeb898$var$DekselPlankBreedte);\n    $e51008aa85eeb898$var$Hoogte = Math.max($e51008aa85eeb898$var$Hoogte, $e51008aa85eeb898$var$AantalZijkantPlanken * $e51008aa85eeb898$var$ZijkantPlankBreedte);\n    document.getElementById(\"OnderlatInput\").value = $e51008aa85eeb898$var$AantalBodemPlanken.toFixed(0);\n    document.getElementById(\"TussenlatInput\").value = $e51008aa85eeb898$var$AantalTussenPlanken.toFixed(0);\n    document.getElementById(\"DekPlankenInput\").value = $e51008aa85eeb898$var$AantalBovenPlanken.toFixed(0);\n    document.getElementById(\"ZijkantPlankenInput\").value = $e51008aa85eeb898$var$AantalZijkantPlanken.toFixed(0);\n    document.getElementById(\"DekselPlankenInput\").value = $e51008aa85eeb898$var$AantalDekselPlanken.toFixed(0);\n    document.getElementById(\"BreedteInput\").value = ($e51008aa85eeb898$var$Breedte * 1000).toFixed(0);\n    document.getElementById(\"LengteInput\").value = ($e51008aa85eeb898$var$Lengte * 1000).toFixed(0);\n    document.getElementById(\"HoogteInput\").value = ($e51008aa85eeb898$var$Hoogte * 1000).toFixed(0);\n}\nfunction $e51008aa85eeb898$var$VerwijderOnderdelen() {\n    // Eerst verwijderen we de oude onderdelen\n    $e51008aa85eeb898$var$BovenPlanken.forEach((plank)=>$e51008aa85eeb898$var$scene.remove(plank));\n    $e51008aa85eeb898$var$TussenPlanken.forEach((plank)=>$e51008aa85eeb898$var$scene.remove(plank));\n    $e51008aa85eeb898$var$DekPlanken.forEach((plank)=>$e51008aa85eeb898$var$scene.remove(plank));\n    $e51008aa85eeb898$var$Blokken.forEach((blok)=>$e51008aa85eeb898$var$scene.remove(blok));\n    $e51008aa85eeb898$var$ZijkantStaanders.forEach((blok)=>$e51008aa85eeb898$var$scene.remove(blok));\n    $e51008aa85eeb898$var$ZijkantRegels.forEach((plank)=>$e51008aa85eeb898$var$scene.remove(plank));\n    $e51008aa85eeb898$var$KopStaanders.forEach((blok)=>$e51008aa85eeb898$var$scene.remove(blok));\n    $e51008aa85eeb898$var$KopRegels.forEach((plank)=>$e51008aa85eeb898$var$scene.remove(plank));\n    $e51008aa85eeb898$var$DekselRegels.forEach((blok)=>$e51008aa85eeb898$var$scene.remove(blok));\n    $e51008aa85eeb898$var$DekselStaanders.forEach((plank)=>$e51008aa85eeb898$var$scene.remove(plank));\n}\nfunction $e51008aa85eeb898$var$OptiePlank() {\n    if (document.getElementById('Uitvoering').value == 'Light') {\n        $e51008aa85eeb898$var$PlankDikte = 0.015;\n        $e51008aa85eeb898$var$PlankBreedte = 0.075;\n        $e51008aa85eeb898$var$BlokHoogte = 0.1;\n        $e51008aa85eeb898$var$BlokBreedte = 0.08;\n    } else if (document.getElementById('Uitvoering').value == 'Medium') {\n        $e51008aa85eeb898$var$PlankDikte = 0.018;\n        $e51008aa85eeb898$var$PlankBreedte = 0.1;\n        $e51008aa85eeb898$var$BlokHoogte = 0.1;\n        $e51008aa85eeb898$var$BlokBreedte = 0.1;\n    } else if (document.getElementById('Uitvoering').value == 'Heavy') {\n        $e51008aa85eeb898$var$PlankDikte = 0.022;\n        $e51008aa85eeb898$var$PlankBreedte = 0.1;\n        $e51008aa85eeb898$var$BlokHoogte = 0.1;\n        $e51008aa85eeb898$var$BlokBreedte = 0.1;\n    }\n    $e51008aa85eeb898$var$DekPlankHoogte = $e51008aa85eeb898$var$PlankDikte;\n    $e51008aa85eeb898$var$DekPlankBreedte = $e51008aa85eeb898$var$PlankBreedte;\n    $e51008aa85eeb898$var$BodemPlankHoogte = $e51008aa85eeb898$var$PlankDikte;\n    $e51008aa85eeb898$var$BodemPlankBreedte = $e51008aa85eeb898$var$PlankBreedte;\n    $e51008aa85eeb898$var$TussenPlankHoogte = $e51008aa85eeb898$var$PlankDikte;\n    $e51008aa85eeb898$var$TussenPlankBreedte = $e51008aa85eeb898$var$PlankBreedte;\n    $e51008aa85eeb898$var$DekPlankHoogte = $e51008aa85eeb898$var$PlankDikte;\n    $e51008aa85eeb898$var$DekselPlankBreedte = $e51008aa85eeb898$var$PlankBreedte;\n    $e51008aa85eeb898$var$ZijkantPlankHoogte = $e51008aa85eeb898$var$PlankDikte;\n    $e51008aa85eeb898$var$ZijkantPlankBreedte = $e51008aa85eeb898$var$PlankBreedte;\n}\nfunction $e51008aa85eeb898$var$Bodem_GEN() {\n    //---------------Onderste Planken generenen---------------------------\n    let startX = -($e51008aa85eeb898$var$Breedte - $e51008aa85eeb898$var$BodemPlankBreedte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte) / 2;\n    let spacingX = ($e51008aa85eeb898$var$Breedte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte - $e51008aa85eeb898$var$BodemPlankBreedte) / ($e51008aa85eeb898$var$AantalBodemPlanken - 1);\n    for(let i = 0; i < $e51008aa85eeb898$var$AantalBodemPlanken; i++){\n        let xPos = startX + i * spacingX;\n        let BovenPlank = $e51008aa85eeb898$var$createBoxWithEdges(new $ilwiq.BoxGeometry($e51008aa85eeb898$var$BodemPlankBreedte, $e51008aa85eeb898$var$BodemPlankHoogte, $e51008aa85eeb898$var$Lengte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte), $e51008aa85eeb898$var$KeperColorMat);\n        BovenPlank.position.set(xPos, $e51008aa85eeb898$var$BodemPlankHoogte / 2, 0);\n        $e51008aa85eeb898$var$scene.add(BovenPlank);\n        $e51008aa85eeb898$var$BovenPlanken.push(BovenPlank);\n    }\n}\nfunction $e51008aa85eeb898$var$Blokken_GEN() {\n    //-----------------Blokken genereren op een grid---------------------\n    let startX = -($e51008aa85eeb898$var$Breedte - $e51008aa85eeb898$var$BlokBreedte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte) / 2;\n    let spacingX = ($e51008aa85eeb898$var$Breedte - $e51008aa85eeb898$var$BlokBreedte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte) / ($e51008aa85eeb898$var$AantalBodemPlanken - 1);\n    $e51008aa85eeb898$var$BlokstartZ = -($e51008aa85eeb898$var$Lengte - $e51008aa85eeb898$var$BlokBreedte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte) / 2;\n    $e51008aa85eeb898$var$BlokspacingZ = ($e51008aa85eeb898$var$Lengte - $e51008aa85eeb898$var$BlokBreedte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte) / ($e51008aa85eeb898$var$AantalTussenPlanken - 1);\n    for(let i = 0; i < $e51008aa85eeb898$var$AantalBodemPlanken; i++)for(let j = 0; j < $e51008aa85eeb898$var$AantalTussenPlanken; j++){\n        let xPos = startX + i * spacingX;\n        let zPos = $e51008aa85eeb898$var$BlokstartZ + j * $e51008aa85eeb898$var$BlokspacingZ;\n        let blok = $e51008aa85eeb898$var$createBoxWithEdges(new $ilwiq.BoxGeometry($e51008aa85eeb898$var$BlokBreedte, $e51008aa85eeb898$var$BlokHoogte, $e51008aa85eeb898$var$BlokBreedte), $e51008aa85eeb898$var$KeperColorMat);\n        blok.position.set(xPos, $e51008aa85eeb898$var$BodemPlankHoogte + $e51008aa85eeb898$var$BlokHoogte / 2, zPos);\n        $e51008aa85eeb898$var$scene.add(blok);\n        $e51008aa85eeb898$var$Blokken.push(blok);\n    }\n}\nfunction $e51008aa85eeb898$var$TussenPlanken_GEN() {\n    // TussenPlanken genereren\n    let startZ = -(($e51008aa85eeb898$var$Lengte - $e51008aa85eeb898$var$TussenPlankBreedte) / 2 + $e51008aa85eeb898$var$ZijkantPlankHoogte);\n    let spacingZ = ($e51008aa85eeb898$var$Lengte - $e51008aa85eeb898$var$TussenPlankBreedte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte) / ($e51008aa85eeb898$var$AantalTussenPlanken - 1);\n    for(let i = 0; i < $e51008aa85eeb898$var$AantalTussenPlanken; i++){\n        let ZPos = startZ + i * spacingZ;\n        let TussenPlank = $e51008aa85eeb898$var$createBoxWithEdges(new $ilwiq.BoxGeometry($e51008aa85eeb898$var$Breedte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte, $e51008aa85eeb898$var$TussenPlankHoogte, $e51008aa85eeb898$var$TussenPlankBreedte), $e51008aa85eeb898$var$KeperColorMat);\n        TussenPlank.position.set(0, $e51008aa85eeb898$var$BlokHoogte + $e51008aa85eeb898$var$BodemPlankHoogte + $e51008aa85eeb898$var$TussenPlankHoogte / 2, ZPos);\n        $e51008aa85eeb898$var$scene.add(TussenPlank);\n        $e51008aa85eeb898$var$TussenPlanken.push(TussenPlank);\n    }\n}\nfunction $e51008aa85eeb898$var$Dek_GEN() {\n    //************spreiding van aantal planken over dek************\n    let startX = -(($e51008aa85eeb898$var$Breedte - $e51008aa85eeb898$var$DekPlankBreedte) / 2 + $e51008aa85eeb898$var$ZijkantPlankHoogte);\n    let endX = ($e51008aa85eeb898$var$Breedte - $e51008aa85eeb898$var$DekPlankBreedte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte) / 2;\n    const beschikbareLengte = endX - startX;\n    const spacing = $e51008aa85eeb898$var$AantalBovenPlanken > 1 ? beschikbareLengte / ($e51008aa85eeb898$var$AantalBovenPlanken - 1) : 0;\n    for(let i = 0; i < $e51008aa85eeb898$var$AantalBovenPlanken; i++){\n        let XPos = startX + i * spacing;\n        let DekPlank = $e51008aa85eeb898$var$createBoxWithEdges(new $ilwiq.BoxGeometry($e51008aa85eeb898$var$DekPlankBreedte, $e51008aa85eeb898$var$DekPlankHoogte, $e51008aa85eeb898$var$Lengte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte), $e51008aa85eeb898$var$KeperColorMat);\n        // Positioneren onder de kist\n        DekPlank.position.set(XPos, $e51008aa85eeb898$var$BlokHoogte + $e51008aa85eeb898$var$BodemPlankHoogte + $e51008aa85eeb898$var$TussenPlankHoogte + $e51008aa85eeb898$var$DekPlankHoogte / 2, 0);\n        // Toevoegen aan de scene en de array\n        $e51008aa85eeb898$var$scene.add(DekPlank);\n        $e51008aa85eeb898$var$DekPlanken.push(DekPlank);\n    }\n}\nfunction $e51008aa85eeb898$var$ZijkantStaanders_GEN() {\n    for(let i = 0; i < $e51008aa85eeb898$var$AantalTussenPlanken; i++){\n        let ZStart = $e51008aa85eeb898$var$Lengte / 2 + $e51008aa85eeb898$var$ZijkantPlankHoogte - $e51008aa85eeb898$var$ZijkantPlankBreedte / 2;\n        let Spacing = ($e51008aa85eeb898$var$Lengte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte - $e51008aa85eeb898$var$ZijkantPlankBreedte) / ($e51008aa85eeb898$var$AantalTussenPlanken - 1);\n        let xPos = $e51008aa85eeb898$var$Breedte / 2 + $e51008aa85eeb898$var$ZijkantPlankHoogte / 2 + $e51008aa85eeb898$var$ZijkantPlankHoogte;\n        let Ysize = $e51008aa85eeb898$var$BlokHoogte + $e51008aa85eeb898$var$TussenPlankHoogte + $e51008aa85eeb898$var$DekPlankHoogte + $e51008aa85eeb898$var$Hoogte + $e51008aa85eeb898$var$DekselPlankHoogte;\n        for (let richting of [\n            1,\n            -1\n        ]){\n            let ZijkantStaander = $e51008aa85eeb898$var$createBoxWithEdges(new $ilwiq.BoxGeometry($e51008aa85eeb898$var$ZijkantPlankHoogte, Ysize, $e51008aa85eeb898$var$ZijkantPlankBreedte), $e51008aa85eeb898$var$KeperColorMat);\n            ZijkantStaander.position.set(richting * xPos, Ysize / 2 + $e51008aa85eeb898$var$BodemPlankHoogte, ZStart - i * Spacing);\n            $e51008aa85eeb898$var$scene.add(ZijkantStaander);\n            $e51008aa85eeb898$var$ZijkantStaanders.push(ZijkantStaander);\n        }\n    }\n}\nfunction $e51008aa85eeb898$var$ZijkantRegels_Gen() {\n    let Xpos = $e51008aa85eeb898$var$Breedte / 2 + $e51008aa85eeb898$var$ZijkantPlankHoogte / 2;\n    $e51008aa85eeb898$var$ZijkantRegelYStart = $e51008aa85eeb898$var$BodemPlankHoogte + $e51008aa85eeb898$var$BlokHoogte + $e51008aa85eeb898$var$TussenPlankHoogte + $e51008aa85eeb898$var$DekPlankHoogte + $e51008aa85eeb898$var$ZijkantPlankBreedte / 2;\n    $e51008aa85eeb898$var$ZijkantRegelYSpacing = ($e51008aa85eeb898$var$Hoogte - $e51008aa85eeb898$var$ZijkantPlankBreedte) / ($e51008aa85eeb898$var$AantalZijkantPlanken - 1);\n    let Zpos = 0;\n    for(let i = 0; i < $e51008aa85eeb898$var$AantalZijkantPlanken; i++)for (let richting of [\n        1,\n        -1\n    ]){\n        let ZijkantRegel = $e51008aa85eeb898$var$createBoxWithEdges(new $ilwiq.BoxGeometry($e51008aa85eeb898$var$ZijkantPlankHoogte, $e51008aa85eeb898$var$ZijkantPlankBreedte, $e51008aa85eeb898$var$Lengte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte), $e51008aa85eeb898$var$KeperColorMat);\n        ZijkantRegel.position.set(richting * Xpos, $e51008aa85eeb898$var$ZijkantRegelYStart + i * $e51008aa85eeb898$var$ZijkantRegelYSpacing, Zpos);\n        $e51008aa85eeb898$var$scene.add(ZijkantRegel);\n        $e51008aa85eeb898$var$ZijkantRegels.push(ZijkantRegel);\n    }\n}\nfunction $e51008aa85eeb898$var$KopStaanders_GEN() {\n    for(let i = 0; i < $e51008aa85eeb898$var$AantalBodemPlanken; i++){\n        let Xstart = $e51008aa85eeb898$var$Breedte / 2 - $e51008aa85eeb898$var$ZijkantPlankBreedte / 2 + $e51008aa85eeb898$var$ZijkantPlankHoogte;\n        let Ysize = $e51008aa85eeb898$var$BlokHoogte + $e51008aa85eeb898$var$TussenPlankHoogte + $e51008aa85eeb898$var$DekPlankHoogte + $e51008aa85eeb898$var$Hoogte + $e51008aa85eeb898$var$DekselPlankHoogte;\n        let Zpos = $e51008aa85eeb898$var$Lengte / 2 + $e51008aa85eeb898$var$ZijkantPlankHoogte / 2 + $e51008aa85eeb898$var$ZijkantPlankHoogte;\n        let Spacing = ($e51008aa85eeb898$var$Breedte - $e51008aa85eeb898$var$ZijkantPlankBreedte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte) / ($e51008aa85eeb898$var$AantalBodemPlanken - 1);\n        for (let richting of [\n            1,\n            -1\n        ]){\n            let ZijkantStaander = $e51008aa85eeb898$var$createBoxWithEdges(new $ilwiq.BoxGeometry($e51008aa85eeb898$var$ZijkantPlankBreedte, Ysize, $e51008aa85eeb898$var$ZijkantPlankHoogte), $e51008aa85eeb898$var$KeperColorMat);\n            ZijkantStaander.position.set(Xstart - i * Spacing, Ysize / 2 + $e51008aa85eeb898$var$BodemPlankHoogte, richting * Zpos);\n            $e51008aa85eeb898$var$scene.add(ZijkantStaander);\n            $e51008aa85eeb898$var$ZijkantStaanders.push(ZijkantStaander);\n        }\n    }\n}\nfunction $e51008aa85eeb898$var$KopRegels_GEN() {\n    let Xpos = 0;\n    $e51008aa85eeb898$var$ZijkantRegelYStart = $e51008aa85eeb898$var$BodemPlankHoogte + $e51008aa85eeb898$var$BlokHoogte + $e51008aa85eeb898$var$TussenPlankHoogte + $e51008aa85eeb898$var$DekPlankHoogte + $e51008aa85eeb898$var$ZijkantPlankBreedte / 2;\n    $e51008aa85eeb898$var$ZijkantRegelYSpacing = ($e51008aa85eeb898$var$Hoogte - $e51008aa85eeb898$var$ZijkantPlankBreedte) / ($e51008aa85eeb898$var$AantalZijkantPlanken - 1);\n    let Zpos = $e51008aa85eeb898$var$Lengte / 2 + $e51008aa85eeb898$var$ZijkantPlankHoogte / 2;\n    for(let i = 0; i < $e51008aa85eeb898$var$AantalZijkantPlanken; i++)for (let richting of [\n        1,\n        -1\n    ]){\n        let ZijkantRegel = $e51008aa85eeb898$var$createBoxWithEdges(new $ilwiq.BoxGeometry($e51008aa85eeb898$var$Breedte, $e51008aa85eeb898$var$ZijkantPlankBreedte, $e51008aa85eeb898$var$ZijkantPlankHoogte), $e51008aa85eeb898$var$KeperColorMat);\n        ZijkantRegel.position.set(Xpos, $e51008aa85eeb898$var$ZijkantRegelYStart + i * $e51008aa85eeb898$var$ZijkantRegelYSpacing, richting * Zpos);\n        $e51008aa85eeb898$var$scene.add(ZijkantRegel);\n        $e51008aa85eeb898$var$ZijkantRegels.push(ZijkantRegel);\n    }\n}\nfunction $e51008aa85eeb898$var$DekselRegels_GEN() {\n    let Xstart = $e51008aa85eeb898$var$Breedte / 2 + $e51008aa85eeb898$var$ZijkantPlankHoogte - $e51008aa85eeb898$var$DekselPlankBreedte / 2;\n    let Zpos = 0;\n    let Ypos = $e51008aa85eeb898$var$BodemPlankHoogte + $e51008aa85eeb898$var$BlokHoogte + $e51008aa85eeb898$var$TussenPlankHoogte + $e51008aa85eeb898$var$DekPlankHoogte + $e51008aa85eeb898$var$Hoogte + $e51008aa85eeb898$var$DekselPlankHoogte / 2;\n    let Spacing = ($e51008aa85eeb898$var$Breedte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte - $e51008aa85eeb898$var$ZijkantPlankBreedte) / ($e51008aa85eeb898$var$AantalDekselPlanken - 1);\n    for(let i = 0; i < $e51008aa85eeb898$var$AantalDekselPlanken; i++){\n        let DekselRegel = $e51008aa85eeb898$var$createBoxWithEdges(new $ilwiq.BoxGeometry($e51008aa85eeb898$var$DekselPlankBreedte, $e51008aa85eeb898$var$DekselPlankHoogte, $e51008aa85eeb898$var$Lengte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte), $e51008aa85eeb898$var$KeperColorMat);\n        DekselRegel.position.set(Xstart - i * Spacing, Ypos, Zpos);\n        $e51008aa85eeb898$var$scene.add(DekselRegel);\n        $e51008aa85eeb898$var$DekselRegels.push(DekselRegel);\n    }\n}\nfunction $e51008aa85eeb898$var$DekselStaanders_GEN() {\n    let Xstart = 0;\n    let ZStart = $e51008aa85eeb898$var$Lengte / 2 + $e51008aa85eeb898$var$ZijkantPlankHoogte - $e51008aa85eeb898$var$DekselPlankBreedte / 2;\n    let Spacing = ($e51008aa85eeb898$var$Lengte + 2 * $e51008aa85eeb898$var$ZijkantPlankHoogte - $e51008aa85eeb898$var$DekselPlankBreedte) / ($e51008aa85eeb898$var$AantalTussenPlanken - 1);\n    let Ypos = $e51008aa85eeb898$var$BodemPlankHoogte + $e51008aa85eeb898$var$BlokHoogte + $e51008aa85eeb898$var$TussenPlankHoogte + $e51008aa85eeb898$var$DekPlankHoogte + $e51008aa85eeb898$var$Hoogte + 3 * $e51008aa85eeb898$var$DekselPlankHoogte / 2;\n    for(let i = 0; i < $e51008aa85eeb898$var$AantalTussenPlanken; i++){\n        let DekselStaander = $e51008aa85eeb898$var$createBoxWithEdges(new $ilwiq.BoxGeometry($e51008aa85eeb898$var$Breedte + 4 * $e51008aa85eeb898$var$ZijkantPlankHoogte, $e51008aa85eeb898$var$DekselPlankHoogte, $e51008aa85eeb898$var$DekselPlankBreedte), $e51008aa85eeb898$var$KeperColorMat);\n        DekselStaander.position.set(Xstart, Ypos, ZStart - i * Spacing);\n        $e51008aa85eeb898$var$scene.add(DekselStaander);\n        $e51008aa85eeb898$var$DekselStaanders.push(DekselStaander);\n    }\n}\n//-----------------schaduwvlak toevoegen------------------------\nif ($e51008aa85eeb898$var$ground) $e51008aa85eeb898$var$scene.remove($e51008aa85eeb898$var$ground);\n$e51008aa85eeb898$var$ground = new $ilwiq.Mesh(new $ilwiq.PlaneGeometry(30, 30), new $dyjou.ShadowMaterial({\n    color: 0xD3D3D3\n}));\n$e51008aa85eeb898$var$ground.rotation.x = -Math.PI / 2;\n$e51008aa85eeb898$var$ground.receiveShadow = true;\n$e51008aa85eeb898$var$ground.position.y = -$e51008aa85eeb898$var$BodemPlankHoogte / 2;\n$e51008aa85eeb898$var$scene.add($e51008aa85eeb898$var$ground);\nfunction $e51008aa85eeb898$var$UpdateModel() {\n    $e51008aa85eeb898$var$VariabelenInLezen();\n    $e51008aa85eeb898$var$OptiePlank();\n    $e51008aa85eeb898$var$VerwijderOnderdelen();\n    $e51008aa85eeb898$var$Bodem_GEN();\n    $e51008aa85eeb898$var$Blokken_GEN();\n    $e51008aa85eeb898$var$TussenPlanken_GEN();\n    $e51008aa85eeb898$var$Dek_GEN();\n    $e51008aa85eeb898$var$ZijkantStaanders_GEN();\n    $e51008aa85eeb898$var$ZijkantRegels_Gen();\n    $e51008aa85eeb898$var$KopStaanders_GEN();\n    $e51008aa85eeb898$var$KopRegels_GEN();\n    if (document.getElementById('DekselVerbergenCheck').checked) {\n        $e51008aa85eeb898$var$DekselRegels_GEN();\n        $e51008aa85eeb898$var$DekselStaanders_GEN();\n    }\n}\n//\nfunction $e51008aa85eeb898$var$animate() {\n    requestAnimationFrame($e51008aa85eeb898$var$animate);\n    $e51008aa85eeb898$var$controls.update();\n    $e51008aa85eeb898$var$renderer.render($e51008aa85eeb898$var$scene, $e51008aa85eeb898$var$camera);\n}\n$e51008aa85eeb898$var$animate();\n//-------------kist updaten bij aanpassing-----------\nfunction $e51008aa85eeb898$var$setupEventListeners() {\n    const elements = document.querySelectorAll(\"input, select, textarea\");\n    elements.forEach((el)=>{\n        if (el.tagName === \"INPUT\") {\n            if (el.type === \"range\") // Sliders live update bij input\n            el.addEventListener(\"input\", $e51008aa85eeb898$var$UpdateModel);\n            else if (el.type === \"text\" || el.type === \"number\") {\n                // Tekst/nummer: update bij blur of Enter\n                el.addEventListener(\"blur\", $e51008aa85eeb898$var$UpdateModel);\n                el.addEventListener(\"keydown\", (e)=>{\n                    if (e.key === \"Enter\") $e51008aa85eeb898$var$UpdateModel();\n                });\n            } else if (el.type === \"checkbox\") // Checkbox update bij change\n            el.addEventListener(\"change\", $e51008aa85eeb898$var$UpdateModel);\n        } else if (el.tagName === \"SELECT\") // Select update bij change\n        el.addEventListener(\"change\", $e51008aa85eeb898$var$UpdateModel);\n    });\n}\n$e51008aa85eeb898$var$UpdateModel();\n// Start eventlisteners\n$e51008aa85eeb898$var$setupEventListeners();\n\n\n//# sourceMappingURL=Open_Krat.8ca63f04.js.map\n","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\n\r\n\r\n\r\n// De scene\r\nvar scene = new THREE.Scene();\r\nscene.background = new THREE.Color('white');\r\n\r\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\r\nconst container = document.getElementById('canvas-container');\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true, powerPreference: \"high-performance\",  canvas: container.querySelector('canvas') });\r\nrenderer.setSize(container.clientWidth, container.clientHeight);\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n// Update canvas bij resize:\r\nwindow.addEventListener('resize', () => {\r\n  const width = container.clientWidth;\r\n  const height = container.clientHeight;\r\n  renderer.setSize(width, height);\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n});\r\n\r\n\r\n// Camera die de grootte van de container gebruikt\r\nvar camera = new THREE.PerspectiveCamera(\r\n  70,\r\n  container.clientWidth / container.clientHeight,\r\n  0.1,\r\n  1000\r\n);\r\ncamera.position.set(1.5,1.5,1.5);\r\ncamera.lookAt(scene.position);\r\n\r\n\r\n\r\n\r\n// OrbitControls instellen\r\nvar controls = new OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true; // Schakel demping in voor soepelere beweging\r\ncontrols.dampingFactor = 0.25;\r\ncontrols.screenSpacePanning = false;\r\n\r\n\r\n// Verlichting toevoegen\r\nconst ambientLight = new THREE.AmbientLight(0xf6cd8b, 2.0);\r\nconst light = new THREE.DirectionalLight(0xFFFFFF, 2.0);\r\nlight.position.set(2.5, 5, 5);\r\nlight.castShadow = true;\r\nlight.shadow.mapSize.width = 2048;\r\nlight.shadow.mapSize.height = 2048;\r\nlight.shadow.camera.near = 0.5;\r\nlight.shadow.camera.far = 50;\r\nlight.shadow.camera.left = -10;\r\nlight.shadow.camera.right = 10;\r\nlight.shadow.camera.top = 10;\r\nlight.shadow.camera.bottom = -10;\r\nrenderer.shadowMap.enabled = true;\r\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\r\nscene.add(ambientLight, light);\r\n\r\n//schaduwvlak\r\nlet ground;\r\n\r\n// Voeg een axis helper toe\r\n//scene.add(new THREE.AxesHelper(2));\r\n\r\n//materialen\r\nvar PlaatMateriaal;\r\nconst OSBColorMat = new THREE.MeshStandardMaterial({ color: 0x1b7101 });\r\nconst BetonColorMat = new THREE.MeshStandardMaterial({ color: 0x1f1716 });\r\nconst MultColorMat = new THREE.MeshStandardMaterial({ color: 0xccac74 });\r\n\r\nconst KeperColorMat = new THREE.MeshStandardMaterial({ color: 0xccac74 });\r\n\r\nconst edgeMaterial = new THREE.LineBasicMaterial({ color: 0x000000 });\r\n\r\n\r\n// Functie om een object met randen te maken\r\nfunction createBoxWithEdges(geometry, material) {\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.castShadow = true;\r\n    const edges = new THREE.EdgesGeometry(geometry);\r\n    const line = new THREE.LineSegments(edges, edgeMaterial);\r\n    mesh.add(line);\r\n    return mesh;\r\n}\r\n\r\n\r\n//onderdelen aanmaken\r\nlet Blokken= [];\r\nlet BovenPlanken= [];\r\nlet TussenPlanken= [];\r\nlet DekPlanken= [];\r\nlet ZijkantStaanders =[];\r\nlet ZijkantRegels=[];\r\nlet KopStaanders = [];\r\nlet KopRegels = [];\r\nlet DekselRegels =[];\r\nlet DekselStaanders = [];\r\n\r\n// Variabelen aanmaken\r\nlet Lengte;\r\nlet Breedte;\r\nlet Hoogte;\r\nlet AantalBodemPlanken;\r\nlet AantalTussenPlanken;\r\nlet AantalBovenPlanken;\r\nlet AantalZijkantPlanken;\r\nlet AantalDekselPlanken;\r\n\r\nlet PlankDikte;\r\nlet PlankBreedte;\r\n\r\nlet DekPlankHoogte = 0.022;\r\nlet DekPlankBreedte = 0.100;\r\n\r\nlet BodemPlankHoogte = 0.022;\r\nlet BodemPlankBreedte = 0.100;\r\n\r\nlet TussenPlankHoogte = 0.022;\r\nlet TussenPlankBreedte = 0.100;\r\n\r\nlet DekselPlankHoogte = 0.022;\r\nlet DekselPlankBreedte = 0.1;\r\n\r\n\r\nlet ZijkantPlankHoogte = 0.022;\r\nlet ZijkantPlankBreedte = 0.1;\r\n\r\nlet\tBlokHoogte = 0.1;\r\nlet\tBlokBreedte = 0.08;\r\n\r\nlet BlokstartZ;\r\nlet BlokspacingZ \r\n\r\nlet ZijkantRegelYStart;\r\nlet ZijkantRegelYSpacing;\r\n\r\nfunction VariabelenInLezen(){\r\n //input gebruiker ophalen\r\n Lengte = parseFloat(document.getElementById('LengteSlider').value) / 1000;\r\n Breedte = parseFloat(document.getElementById('BreedteSlider').value) / 1000;\r\n Hoogte = parseFloat(document.getElementById('HoogteSlider').value) / 1000;\r\n\r\n AantalBodemPlanken = parseFloat(document.getElementById(\"OnderlatInput\").value);\r\n AantalTussenPlanken = parseFloat(document.getElementById(\"TussenlatInput\").value);\r\n AantalBovenPlanken = parseFloat(document.getElementById('DekPlankenInput').value);\r\n AantalZijkantPlanken = parseFloat(document.getElementById('ZijkantPlankenInput').value);\r\n AantalDekselPlanken = document.getElementById('DekselPlankenInput').value;\r\n\r\nAantalBodemPlanken = Math.max(2,Math.round(AantalBodemPlanken));\r\nAantalTussenPlanken = Math.max(2,Math.round(AantalTussenPlanken));\r\nAantalBovenPlanken = Math.max(2,Math.round(AantalBovenPlanken));\r\nAantalZijkantPlanken = Math.max(2,Math.round(AantalZijkantPlanken));\r\nAantalDekselPlanken = Math.max(2,Math.round(AantalDekselPlanken));\r\n\r\n\r\n\r\n\r\nLengte = Math.max(Lengte,AantalTussenPlanken*BlokBreedte);\r\nBreedte = Math.max(Breedte,AantalBovenPlanken*DekPlankBreedte,AantalBodemPlanken*BodemPlankBreedte,AantalDekselPlanken*DekselPlankBreedte);\r\nHoogte = Math.max(Hoogte,AantalZijkantPlanken*ZijkantPlankBreedte);\r\n\r\n\r\n\r\ndocument.getElementById(\"OnderlatInput\").value = (AantalBodemPlanken).toFixed(0);\r\ndocument.getElementById(\"TussenlatInput\").value = (AantalTussenPlanken).toFixed(0);\r\ndocument.getElementById(\"DekPlankenInput\").value = (AantalBovenPlanken).toFixed(0);\r\ndocument.getElementById(\"ZijkantPlankenInput\").value = (AantalZijkantPlanken).toFixed(0);\r\ndocument.getElementById(\"DekselPlankenInput\").value = (AantalDekselPlanken).toFixed(0);\r\n\r\ndocument.getElementById(\"BreedteInput\").value = ((Breedte)*1000).toFixed(0);\r\ndocument.getElementById(\"LengteInput\").value = ((Lengte)*1000).toFixed(0);\r\ndocument.getElementById(\"HoogteInput\").value = (Hoogte*1000).toFixed(0);\r\n}\r\n\r\n\r\n\r\nfunction VerwijderOnderdelen(){\r\n// Eerst verwijderen we de oude onderdelen\r\nBovenPlanken.forEach(plank => scene.remove(plank));\r\nTussenPlanken.forEach(plank => scene.remove(plank));\r\nDekPlanken.forEach(plank => scene.remove(plank));\r\nBlokken.forEach(blok => scene.remove(blok));\r\nZijkantStaanders.forEach(blok => scene.remove(blok));\r\nZijkantRegels.forEach(plank => scene.remove(plank));\r\nKopStaanders.forEach(blok => scene.remove(blok));\r\nKopRegels.forEach(plank => scene.remove(plank));\r\nDekselRegels.forEach(blok => scene.remove(blok));\r\nDekselStaanders.forEach(plank => scene.remove(plank));\r\n\r\n\r\n\r\n}\r\n\r\nfunction OptiePlank(){\r\n\r\n\r\n    if (document.getElementById('Uitvoering').value == 'Light'){\r\n        PlankDikte=15/1000;\r\n        PlankBreedte=75/1000;\r\n        BlokHoogte = 0.1;\r\n        BlokBreedte = 0.08;\r\n     \r\n        }\r\n    else if(document.getElementById('Uitvoering').value == 'Medium'){\r\n        PlankDikte=18/1000;\r\n        PlankBreedte=100/1000;\r\n        BlokHoogte = 0.1;\r\n        BlokBreedte = 0.1;\r\n        \r\n        }\r\n    else if(document.getElementById('Uitvoering').value == 'Heavy'){\r\n        PlankDikte=22/1000;\r\n        PlankBreedte=100/1000;\r\n        BlokHoogte = 0.1;\r\n        BlokBreedte = 0.1;\r\n        \r\n        }  \r\n\r\n        DekPlankHoogte = PlankDikte;\r\n        DekPlankBreedte = PlankBreedte;\r\n        BodemPlankHoogte = PlankDikte;\r\n        BodemPlankBreedte = PlankBreedte;\r\n        TussenPlankHoogte = PlankDikte;\r\n        TussenPlankBreedte = PlankBreedte;\r\n        DekPlankHoogte = PlankDikte;\r\n        DekselPlankBreedte = PlankBreedte;\r\n        ZijkantPlankHoogte = PlankDikte;\r\n        ZijkantPlankBreedte = PlankBreedte;\r\n\r\n}\r\n\r\nfunction Bodem_GEN(){\r\n//---------------Onderste Planken generenen---------------------------\r\nlet startX = -(Breedte - BodemPlankBreedte+2*ZijkantPlankHoogte) / 2;\r\nlet spacingX = (Breedte +2*ZijkantPlankHoogte- BodemPlankBreedte) / (AantalBodemPlanken - 1);\r\n\r\n\r\n\r\nfor (let i = 0; i < AantalBodemPlanken; i++) {\r\n    let xPos = startX + i * spacingX;\r\n    let BovenPlank = createBoxWithEdges(new THREE.BoxGeometry(BodemPlankBreedte, BodemPlankHoogte, Lengte+2*ZijkantPlankHoogte), KeperColorMat);\r\n    BovenPlank.position.set(xPos,BodemPlankHoogte/2, 0);\r\n    scene.add(BovenPlank);\r\n    BovenPlanken.push(BovenPlank);\r\n}\r\n}\r\n\r\n\r\nfunction Blokken_GEN(){\r\n\r\n//-----------------Blokken genereren op een grid---------------------\r\nlet startX = -(Breedte - BlokBreedte+2*ZijkantPlankHoogte) / 2;\r\nlet spacingX = (Breedte - BlokBreedte+2*ZijkantPlankHoogte) / (AantalBodemPlanken - 1);\r\n\r\n BlokstartZ = -(Lengte - BlokBreedte+2*ZijkantPlankHoogte) / 2;\r\n BlokspacingZ = (Lengte - BlokBreedte+2*ZijkantPlankHoogte) / (AantalTussenPlanken - 1);\r\n\r\n\r\nfor (let i = 0; i < AantalBodemPlanken; i++) {\r\n    for (let j = 0; j < AantalTussenPlanken; j++) {\r\n\r\n        let xPos = startX + i * spacingX;\r\n        let zPos = BlokstartZ + j * BlokspacingZ;\r\n\r\n        let blok = createBoxWithEdges(new THREE.BoxGeometry(BlokBreedte, BlokHoogte, BlokBreedte), KeperColorMat);\r\n        blok.position.set(xPos, BodemPlankHoogte + BlokHoogte / 2, zPos);\r\n        scene.add(blok);\r\n        Blokken.push(blok);\r\n    }\r\n}\r\n}\r\n\r\nfunction TussenPlanken_GEN(){\r\n// TussenPlanken genereren\r\n\r\nlet startZ = - ((Lengte - TussenPlankBreedte)/2+ZijkantPlankHoogte);\r\n\r\nlet spacingZ = (Lengte - TussenPlankBreedte+2*ZijkantPlankHoogte) / (AantalTussenPlanken - 1);\r\n\r\n\r\nfor (let i = 0; i < AantalTussenPlanken; i++) {\r\n    let ZPos = startZ + i * spacingZ;\r\n    let TussenPlank = createBoxWithEdges(new THREE.BoxGeometry(Breedte+2*ZijkantPlankHoogte, TussenPlankHoogte, TussenPlankBreedte), KeperColorMat);\r\n    TussenPlank.position.set(0, BlokHoogte + BodemPlankHoogte + TussenPlankHoogte/2, ZPos);\r\n    scene.add(TussenPlank);\r\n    TussenPlanken.push(TussenPlank);\r\n}\r\n}\r\n\r\nfunction Dek_GEN(){\r\n\r\n\r\n//************spreiding van aantal planken over dek************\r\n\r\n\r\n  \r\n    let startX = -((Breedte- DekPlankBreedte) / 2+ ZijkantPlankHoogte);\r\n    let endX = (Breedte- DekPlankBreedte+2*ZijkantPlankHoogte) / 2;\r\n\r\n\r\n    const beschikbareLengte = endX - startX;\r\n    const spacing = (AantalBovenPlanken > 1) ? beschikbareLengte / (AantalBovenPlanken - 1) : 0;\r\n    \r\n  \r\n    for (let i = 0; i < AantalBovenPlanken; i++) {\r\n        let XPos = startX + i * spacing;\r\n    \r\n        let DekPlank = createBoxWithEdges(new THREE.BoxGeometry(DekPlankBreedte, DekPlankHoogte, Lengte+2*ZijkantPlankHoogte), KeperColorMat);\r\n    \r\n        // Positioneren onder de kist\r\n        DekPlank.position.set(XPos,BlokHoogte + BodemPlankHoogte + TussenPlankHoogte + DekPlankHoogte/2, 0);\r\n    \r\n        // Toevoegen aan de scene en de array\r\n        scene.add(DekPlank);\r\n        DekPlanken.push(DekPlank);\r\n    }\r\n}\r\n\r\n\r\nfunction ZijkantStaanders_GEN(){\r\n\r\n    for (let i = 0; i < AantalTussenPlanken; i++) {\r\n    let ZStart = Lengte/2+ZijkantPlankHoogte-ZijkantPlankBreedte/2\r\n    let Spacing = (Lengte+2*ZijkantPlankHoogte-ZijkantPlankBreedte)/(AantalTussenPlanken-1);\r\n    let xPos = Breedte/2+ZijkantPlankHoogte/2 + ZijkantPlankHoogte;\r\n    let Ysize = BlokHoogte+TussenPlankHoogte+DekPlankHoogte+Hoogte+DekselPlankHoogte;\r\n\r\n  for (let richting of [1, -1]) { //Maakt een extra for loop, telkens eens + en eens -\r\n\r\n    let ZijkantStaander = createBoxWithEdges(new THREE.BoxGeometry(ZijkantPlankHoogte, Ysize,ZijkantPlankBreedte), KeperColorMat);\r\n\r\n    ZijkantStaander.position.set(richting*xPos,Ysize/2+BodemPlankHoogte, ZStart-i*Spacing);\r\n    scene.add(ZijkantStaander);\r\n    ZijkantStaanders.push(ZijkantStaander);\r\n  }\r\n}\r\n\r\n\r\n}\r\n\r\nfunction ZijkantRegels_Gen(){\r\n\r\n        let Xpos = Breedte/2+ZijkantPlankHoogte/2;\r\n        ZijkantRegelYStart = BodemPlankHoogte+BlokHoogte+TussenPlankHoogte+DekPlankHoogte+ZijkantPlankBreedte/2;\r\n        ZijkantRegelYSpacing = (Hoogte-ZijkantPlankBreedte)/(AantalZijkantPlanken-1);\r\n\r\n        let Zpos = 0; \r\n\r\n    for (let i = 0; i < AantalZijkantPlanken; i++) {\r\n        \r\n        \r\n  for (let richting of [1, -1]) { //Maakt een extra for loop, telkens eens + en eens -\r\n    \r\n    let ZijkantRegel = createBoxWithEdges(new THREE.BoxGeometry(ZijkantPlankHoogte, ZijkantPlankBreedte,Lengte+2*ZijkantPlankHoogte), KeperColorMat);\r\n\r\n    ZijkantRegel.position.set(richting*Xpos,ZijkantRegelYStart+i*ZijkantRegelYSpacing,Zpos);\r\n    scene.add(ZijkantRegel);\r\n    ZijkantRegels.push(ZijkantRegel);   \r\n}\r\n}\r\n\r\n}\r\n\r\nfunction KopStaanders_GEN(){\r\n\r\n    for (let i = 0; i < AantalBodemPlanken; i++) {\r\n\r\n    let Xstart = Breedte/2-ZijkantPlankBreedte/2+ZijkantPlankHoogte;\r\n    let Ysize = BlokHoogte+TussenPlankHoogte+DekPlankHoogte+Hoogte+DekselPlankHoogte;\r\n    let Zpos = Lengte/2+ZijkantPlankHoogte/2+ZijkantPlankHoogte;\r\n    let Spacing = (Breedte-ZijkantPlankBreedte+2*ZijkantPlankHoogte)/(AantalBodemPlanken-1);\r\n\r\n  for (let richting of [1, -1]) { //Maakt een extra for loop, telkens eens + en eens -\r\n\r\n    let ZijkantStaander = createBoxWithEdges(new THREE.BoxGeometry(ZijkantPlankBreedte, Ysize,ZijkantPlankHoogte), KeperColorMat);\r\n\r\n    ZijkantStaander.position.set(Xstart-i*Spacing,Ysize/2+BodemPlankHoogte, richting*Zpos);\r\n    scene.add(ZijkantStaander);\r\n    ZijkantStaanders.push(ZijkantStaander);\r\n  }\r\n}\r\n\r\n\r\n}\r\n\r\nfunction KopRegels_GEN(){\r\n    \r\n        let Xpos = 0;\r\n        ZijkantRegelYStart = BodemPlankHoogte+BlokHoogte+TussenPlankHoogte+DekPlankHoogte+ZijkantPlankBreedte/2;\r\n        ZijkantRegelYSpacing = (Hoogte-ZijkantPlankBreedte)/(AantalZijkantPlanken-1);\r\n\r\n        let Zpos = Lengte/2+ZijkantPlankHoogte/2; \r\n\r\n    for (let i = 0; i < AantalZijkantPlanken; i++) {\r\n        \r\n        \r\n  for (let richting of [1, -1]) { //Maakt een extra for loop, telkens eens + en eens -\r\n    \r\n    let ZijkantRegel = createBoxWithEdges(new THREE.BoxGeometry(Breedte, ZijkantPlankBreedte,ZijkantPlankHoogte), KeperColorMat);\r\n\r\n    ZijkantRegel.position.set(Xpos,ZijkantRegelYStart+i*ZijkantRegelYSpacing,richting*Zpos);\r\n    scene.add(ZijkantRegel);\r\n    ZijkantRegels.push(ZijkantRegel);    \r\n}\r\n\r\n}\r\n}\r\n\r\nfunction DekselRegels_GEN(){\r\n    let Xstart = Breedte/2+ZijkantPlankHoogte-DekselPlankBreedte/2;\r\n    let Zpos = 0;\r\n    let Ypos = BodemPlankHoogte+BlokHoogte+TussenPlankHoogte+DekPlankHoogte+Hoogte+DekselPlankHoogte/2\r\n    let Spacing = (Breedte+2*ZijkantPlankHoogte-ZijkantPlankBreedte)/(AantalDekselPlanken-1);\r\n\r\n for (let i = 0; i < AantalDekselPlanken; i++) {\r\n\r\n    let DekselRegel = createBoxWithEdges(new THREE.BoxGeometry(DekselPlankBreedte, DekselPlankHoogte,Lengte+2*ZijkantPlankHoogte), KeperColorMat);\r\n\r\n    DekselRegel.position.set(Xstart-i*Spacing,Ypos,Zpos);\r\n    scene.add(DekselRegel);\r\n    DekselRegels.push(DekselRegel);    \r\n}\r\n}\r\n\r\nfunction DekselStaanders_GEN(){\r\n\r\n    let Xstart = 0;\r\n    let ZStart = Lengte/2+ZijkantPlankHoogte-DekselPlankBreedte/2\r\n    let Spacing = (Lengte+2*ZijkantPlankHoogte-DekselPlankBreedte)/(AantalTussenPlanken-1);\r\n    let Ypos = BodemPlankHoogte+BlokHoogte+TussenPlankHoogte+DekPlankHoogte+Hoogte+3*DekselPlankHoogte/2\r\n\r\n for (let i = 0; i < AantalTussenPlanken; i++) {\r\n\r\n    let DekselStaander = createBoxWithEdges(new THREE.BoxGeometry(Breedte+4*ZijkantPlankHoogte, DekselPlankHoogte,DekselPlankBreedte), KeperColorMat);\r\n\r\n    DekselStaander.position.set(Xstart,Ypos,ZStart-i*Spacing);\r\n    scene.add(DekselStaander);\r\n    DekselStaanders.push(DekselStaander);    \r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n//-----------------schaduwvlak toevoegen------------------------\r\nif (ground) scene.remove(ground);\r\nground = new THREE.Mesh(new THREE.PlaneGeometry(30, 30), new THREE.ShadowMaterial({color: 0xD3D3D3}));\r\nground.rotation.x = -Math.PI / 2;\r\nground.receiveShadow = true;\r\nground.position.y = - BodemPlankHoogte/2;\r\nscene.add(ground);\r\n\r\n\r\nfunction UpdateModel(){\r\n\r\n\r\n    VariabelenInLezen();\r\n    OptiePlank();\r\n    VerwijderOnderdelen();\r\n\r\n    Bodem_GEN();\r\n    Blokken_GEN();\r\n    TussenPlanken_GEN();\r\n    Dek_GEN();\r\n    ZijkantStaanders_GEN();\r\n    ZijkantRegels_Gen();\r\n    KopStaanders_GEN();\r\n    KopRegels_GEN();\r\n\r\n    if (document.getElementById('DekselVerbergenCheck').checked){\r\n    DekselRegels_GEN();\r\n    DekselStaanders_GEN();\r\n    }\r\n\r\n}\r\n//\r\nfunction animate() {\r\n    requestAnimationFrame(animate);\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n  }\r\n  animate();\r\n  \r\n  //-------------kist updaten bij aanpassing-----------\r\nfunction setupEventListeners() {\r\n  const elements = document.querySelectorAll(\"input, select, textarea\");\r\n\r\n  elements.forEach((el) => {\r\n    if (el.tagName === \"INPUT\") {\r\n      if (el.type === \"range\") {\r\n        // Sliders live update bij input\r\n        el.addEventListener(\"input\", UpdateModel);\r\n      } else if (el.type === \"text\" || el.type === \"number\") {\r\n        // Tekst/nummer: update bij blur of Enter\r\n        el.addEventListener(\"blur\", UpdateModel);\r\n        el.addEventListener(\"keydown\", (e) => {\r\n          if (e.key === \"Enter\") UpdateModel();\r\n        });\r\n      } else if (el.type === \"checkbox\") {\r\n        // Checkbox update bij change\r\n        el.addEventListener(\"change\", UpdateModel);\r\n      }\r\n    } else if (el.tagName === \"SELECT\") {\r\n      // Select update bij change\r\n      el.addEventListener(\"change\", UpdateModel);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n  \r\n  UpdateModel();\r\n  \r\n  // Start eventlisteners\r\n  setupEventListeners();\r\n\r\n\r\n"],"names":["$e51008aa85eeb898$var$ground","$e51008aa85eeb898$var$Lengte","$e51008aa85eeb898$var$Breedte","$e51008aa85eeb898$var$Hoogte","$e51008aa85eeb898$var$AantalBodemPlanken","$e51008aa85eeb898$var$AantalTussenPlanken","$e51008aa85eeb898$var$AantalBovenPlanken","$e51008aa85eeb898$var$AantalZijkantPlanken","$e51008aa85eeb898$var$AantalDekselPlanken","$e51008aa85eeb898$var$PlankDikte","$e51008aa85eeb898$var$PlankBreedte","$e51008aa85eeb898$var$BlokstartZ","$e51008aa85eeb898$var$BlokspacingZ","$e51008aa85eeb898$var$ZijkantRegelYStart","$e51008aa85eeb898$var$ZijkantRegelYSpacing","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$dyjou","$ilwiq","$5Rd1x","$e51008aa85eeb898$var$scene","Scene","background","Color","$e51008aa85eeb898$var$container","document","getElementById","$e51008aa85eeb898$var$renderer","WebGLRenderer","antialias","alpha","powerPreference","canvas","querySelector","setSize","clientWidth","clientHeight","setPixelRatio","window","devicePixelRatio","addEventListener","width","height","$e51008aa85eeb898$var$camera","aspect","updateProjectionMatrix","PerspectiveCamera","position","set","lookAt","$e51008aa85eeb898$var$controls","OrbitControls","domElement","enableDamping","dampingFactor","screenSpacePanning","$e51008aa85eeb898$var$ambientLight","AmbientLight","$e51008aa85eeb898$var$light","DirectionalLight","castShadow","shadow","mapSize","camera","near","far","left","right","top","bottom","shadowMap","enabled","type","PCFSoftShadowMap","add","MeshStandardMaterial","color","$e51008aa85eeb898$var$KeperColorMat","$e51008aa85eeb898$var$edgeMaterial","LineBasicMaterial","$e51008aa85eeb898$var$createBoxWithEdges","geometry","material","mesh","Mesh","edges","EdgesGeometry","line","LineSegments","$e51008aa85eeb898$var$Blokken","$e51008aa85eeb898$var$BovenPlanken","$e51008aa85eeb898$var$TussenPlanken","$e51008aa85eeb898$var$DekPlanken","$e51008aa85eeb898$var$ZijkantStaanders","$e51008aa85eeb898$var$ZijkantRegels","$e51008aa85eeb898$var$KopStaanders","$e51008aa85eeb898$var$KopRegels","$e51008aa85eeb898$var$DekselRegels","$e51008aa85eeb898$var$DekselStaanders","$e51008aa85eeb898$var$DekPlankHoogte","$e51008aa85eeb898$var$DekPlankBreedte","$e51008aa85eeb898$var$BodemPlankHoogte","$e51008aa85eeb898$var$BodemPlankBreedte","$e51008aa85eeb898$var$TussenPlankHoogte","$e51008aa85eeb898$var$TussenPlankBreedte","$e51008aa85eeb898$var$DekselPlankBreedte","$e51008aa85eeb898$var$ZijkantPlankHoogte","$e51008aa85eeb898$var$ZijkantPlankBreedte","$e51008aa85eeb898$var$BlokHoogte","$e51008aa85eeb898$var$BlokBreedte","$e51008aa85eeb898$var$UpdateModel","parseFloat","value","Math","max","round","toFixed","forEach","plank","remove","blok","$e51008aa85eeb898$var$Bodem_GEN","startX","spacingX","i","xPos","BovenPlank","BoxGeometry","push","$e51008aa85eeb898$var$Blokken_GEN","j","zPos","$e51008aa85eeb898$var$TussenPlanken_GEN","startZ","spacingZ","ZPos","TussenPlank","$e51008aa85eeb898$var$Dek_GEN","endX","spacing","beschikbareLengte","XPos","DekPlank","$e51008aa85eeb898$var$ZijkantStaanders_GEN","ZStart","Spacing","Ysize","richting","ZijkantStaander","Xpos","ZijkantRegel","$e51008aa85eeb898$var$KopStaanders_GEN","Xstart","Zpos","checked","$e51008aa85eeb898$var$DekselRegels_GEN","Ypos","$e51008aa85eeb898$var$DekselPlankHoogte","DekselRegel","$e51008aa85eeb898$var$DekselStaanders_GEN","DekselStaander","PlaneGeometry","ShadowMaterial","rotation","x","PI","receiveShadow","y","$e51008aa85eeb898$var$animate","requestAnimationFrame","update","render","elements","querySelectorAll","el","tagName","e","key"],"version":3,"file":"Open_Krat.8ca63f04.js.map"}