{"mappings":"ICiEI,EAmCA,EAKA,EACA,EACA,EACA,EACA,EAUA,EACA,EAgBA,C,O,8C,C,IAjEA,EAyCA,EACA,E,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,S,E,E,S,E,E,S,E,E,SC9FJ,IAAM,EAAkB,gBAElB,EAA4B,WAE5B,EAAwB,WAExB,EAAmB,WACnB,EAAsC,MAEtC,EAAM,GAAI,CAAA,EAAA,EAAA,OAAM,AAAN,EACV,EAAM,GAAI,CAAA,EAAA,EAAA,OAAM,AAAN,EACV,EAAM,GAAI,CAAA,EAAA,EAAA,OAAM,AAAN,EAEV,EAAM,GAAI,CAAA,EAAA,EAAA,OAAM,AAAN,EACV,EAAM,GAAI,CAAA,EAAA,EAAA,OAAM,AAAN,EAEV,EAAS,GAAI,CAAA,EAAA,EAAA,KAAI,AAAJ,EAEnB,SAAS,IAER,IAAM,EAAQ,CACb,QAAS,EAAE,CACX,OAAQ,CAAC,EAET,SAAU,EAAE,CACZ,QAAS,EAAE,CACX,OAAQ,EAAE,CACV,IAAK,EAAE,CAEP,UAAW,CAAC,EACZ,kBAAmB,EAAE,CAErB,YAAa,SAAW,CAAI,CAAE,CAAe,EAI5C,GAAK,IAAI,CAAC,MAAM,EAAI,AAAgC,CAAA,IAAhC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAa,CAE3D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAG,EACnB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAK,AAAoB,CAAA,IAApB,EAChC,MAED,CAEA,IAAM,EAAqB,IAAI,CAAC,MAAM,EAAI,AAAuC,YAAvC,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAkB,IAAI,CAAC,MAAM,CAAC,eAAe,GAAK,KAAA,EA+H9H,GA7HK,IAAI,CAAC,MAAM,EAAI,AAAiC,YAAjC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAE/C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAE,CAAA,GAIxB,IAAI,CAAC,MAAM,CAAG,CACb,KAAM,GAAQ,GACd,gBAAmB,AAAoB,CAAA,IAApB,EAEnB,SAAU,CACT,SAAU,EAAE,CACZ,QAAS,EAAE,CACX,OAAQ,EAAE,CACV,IAAK,EAAE,CACP,aAAc,CAAA,CACf,EACA,UAAW,EAAE,CACb,OAAQ,CAAA,EAER,cAAe,SAAW,CAAI,CAAE,CAAS,EAExC,IAAM,EAAW,IAAI,CAAC,SAAS,CAAE,CAAA,EAI5B,CAAA,GAAc,CAAA,EAAS,SAAS,EAAI,EAAS,UAAU,EAAI,CAAA,GAE/D,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,EAAS,KAAK,CAAE,GAIxC,IAAM,EAAW,CAChB,MAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAC5B,KAAM,GAAQ,GACd,OAAU,MAAM,OAAO,CAAE,IAAe,EAAU,MAAM,CAAG,EAAI,CAAS,CAAE,EAAU,MAAM,CAAG,EAAG,CAAG,GACnG,OAAU,AAAa,KAAA,IAAb,EAAyB,EAAS,MAAM,CAAG,IAAI,CAAC,MAAM,CAChE,WAAc,AAAa,KAAA,IAAb,EAAyB,EAAS,QAAQ,CAAG,EAC3D,SAAU,GACV,WAAY,GACZ,UAAW,CAAA,EAEX,MAAO,SAAW,CAAK,EAEtB,IAAM,EAAS,CACd,MAAS,AAAiB,UAAjB,OAAO,EAAqB,EAAQ,IAAI,CAAC,KAAK,CACvD,KAAM,IAAI,CAAC,IAAI,CACf,OAAQ,IAAI,CAAC,MAAM,CACnB,OAAQ,IAAI,CAAC,MAAM,CACnB,WAAY,EACZ,SAAU,GACV,WAAY,GACZ,UAAW,CAAA,CACZ,EAEA,OADA,EAAO,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,GACzB,CAER,CACD,EAIA,OAFA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,GAEd,CAER,EAEA,gBAAiB,WAEhB,GAAK,IAAI,CAAC,SAAS,CAAC,MAAM,CAAG,EAE5B,OAAO,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAG,EAAG,AAMpD,EAEA,UAAW,SAAW,CAAG,EAExB,IAAM,EAAoB,IAAI,CAAC,eAAe,GAU9C,GATK,GAAqB,AAA+B,KAA/B,EAAkB,QAAQ,GAEnD,EAAkB,QAAQ,CAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAG,EAC7D,EAAkB,UAAU,CAAG,EAAkB,QAAQ,CAAG,EAAkB,UAAU,CACxF,EAAkB,SAAS,CAAG,CAAA,GAK1B,GAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAG,EAEnC,IAAM,IAAI,EAAK,IAAI,CAAC,SAAS,CAAC,MAAM,CAAG,EAAG,GAAM,EAAG,IAE7C,IAAI,CAAC,SAAS,CAAE,EAAI,CAAC,UAAU,EAAI,GAEvC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,EAAI,GAkB9B,OATK,GAAO,AAA0B,IAA1B,IAAI,CAAC,SAAS,CAAC,MAAM,EAEhC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,CACpB,KAAM,GACN,OAAQ,IAAI,CAAC,MAAM,AACpB,GAIM,CAER,CACD,EAQK,GAAoB,EAAiB,IAAI,EAAI,AAAkC,YAAlC,OAAO,EAAiB,KAAK,CAAkB,CAEhG,IAAM,EAAW,EAAiB,KAAK,CAAE,EACzC,CAAA,EAAS,SAAS,CAAG,CAAA,EACrB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAE,EAE7B,CAEA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAE/B,EAEA,SAAU,WAEJ,IAAI,CAAC,MAAM,EAAI,AAAiC,YAAjC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAE/C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAE,CAAA,EAIzB,EAEA,iBAAkB,SAAW,CAAK,CAAE,CAAG,EAEtC,IAAM,EAAQ,SAAU,EAAO,IAC/B,MAAO,AAAE,CAAA,GAAS,EAAI,EAAQ,EAAI,EAAQ,EAAM,CAAA,EAAM,CAEvD,EAEA,iBAAkB,SAAW,CAAK,CAAE,CAAG,EAEtC,IAAM,EAAQ,SAAU,EAAO,IAC/B,MAAO,AAAE,CAAA,GAAS,EAAI,EAAQ,EAAI,EAAQ,EAAM,CAAA,EAAM,CAEvD,EAEA,aAAc,SAAW,CAAK,CAAE,CAAG,EAElC,IAAM,EAAQ,SAAU,EAAO,IAC/B,MAAO,AAAE,CAAA,GAAS,EAAI,EAAQ,EAAI,EAAQ,EAAM,CAAA,EAAM,CAEvD,EAEA,UAAW,SAAW,CAAC,CAAE,CAAC,CAAE,CAAC,EAE5B,IAAM,EAAM,IAAI,CAAC,QAAQ,CACnB,EAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAEzC,EAAI,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,EAClD,EAAI,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,EAClD,EAAI,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAEnD,EAEA,eAAgB,SAAW,CAAC,EAE3B,IAAM,EAAM,IAAI,CAAC,QAAQ,CAGzB,AAFY,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAErC,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAEnD,EAEA,cAAe,SAAW,CAAC,EAE1B,IAAM,EAAM,IAAI,CAAC,QAAQ,CAGzB,AAFY,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAErC,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAEnD,EAEA,UAAW,SAAW,CAAC,CAAE,CAAC,CAAE,CAAC,EAE5B,IAAM,EAAM,IAAI,CAAC,OAAO,CAClB,EAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAExC,EAAI,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,EAClD,EAAI,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,EAClD,EAAI,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAEnD,EAEA,cAAe,SAAW,CAAC,CAAE,CAAC,CAAE,CAAC,EAEhC,IAAM,EAAM,IAAI,CAAC,QAAQ,CACnB,EAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAExC,EAAI,SAAS,CAAE,EAAK,GACpB,EAAI,SAAS,CAAE,EAAK,GACpB,EAAI,SAAS,CAAE,EAAK,GAEpB,EAAI,UAAU,CAAE,EAAK,GACrB,EAAI,UAAU,CAAE,EAAK,GACrB,EAAI,KAAK,CAAE,GAEX,EAAI,SAAS,GAEb,EAAI,IAAI,CAAE,EAAI,CAAC,CAAE,EAAI,CAAC,CAAE,EAAI,CAAC,EAC7B,EAAI,IAAI,CAAE,EAAI,CAAC,CAAE,EAAI,CAAC,CAAE,EAAI,CAAC,EAC7B,EAAI,IAAI,CAAE,EAAI,CAAC,CAAE,EAAI,CAAC,CAAE,EAAI,CAAC,CAE9B,EAEA,SAAU,SAAW,CAAC,CAAE,CAAC,CAAE,CAAC,EAE3B,IAAM,EAAM,IAAI,CAAC,MAAM,CACjB,EAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,AAElC,AAAa,MAAA,IAAb,CAAG,CAAE,EAAG,EAAiB,EAAI,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,EAC3E,AAAa,KAAA,IAAb,CAAG,CAAE,EAAG,EAAiB,EAAI,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,EAC3E,AAAa,KAAA,IAAb,CAAG,CAAE,EAAG,EAAiB,EAAI,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAEjF,EAEA,MAAO,SAAW,CAAC,CAAE,CAAC,CAAE,CAAC,EAExB,IAAM,EAAM,IAAI,CAAC,GAAG,CACd,EAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAEpC,EAAI,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,EACpC,EAAI,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,EACpC,EAAI,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAErC,EAEA,aAAc,WAEb,IAAM,EAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAEpC,EAAI,IAAI,CAAE,EAAG,GACb,EAAI,IAAI,CAAE,EAAG,GACb,EAAI,IAAI,CAAE,EAAG,EAEd,EAEA,UAAW,SAAW,CAAC,EAEtB,IAAM,EAAM,IAAI,CAAC,GAAG,CAGpB,AAFY,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAEhC,IAAI,CAAE,CAAG,CAAE,EAAI,EAAG,CAAE,CAAG,CAAE,EAAI,EAAG,CAErC,EAEA,QAAS,SAAW,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,EAElD,IAAM,EAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAE7B,EAAK,IAAI,CAAC,gBAAgB,CAAE,EAAG,GAC/B,EAAK,IAAI,CAAC,gBAAgB,CAAE,EAAG,GAC/B,EAAK,IAAI,CAAC,gBAAgB,CAAE,EAAG,GAOnC,GALA,IAAI,CAAC,SAAS,CAAE,EAAI,EAAI,GACxB,IAAI,CAAC,QAAQ,CAAE,EAAI,EAAI,GAIlB,AAAO,KAAA,IAAP,GAAoB,AAAO,KAAP,EAAY,CAEpC,IAAM,EAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAEhC,EAAK,IAAI,CAAC,gBAAgB,CAAE,EAAI,GAChC,EAAK,IAAI,CAAC,gBAAgB,CAAE,EAAI,GAChC,EAAK,IAAI,CAAC,gBAAgB,CAAE,EAAI,GAEhC,IAAI,CAAC,SAAS,CAAE,EAAI,EAAI,EAEzB,MAEC,IAAI,CAAC,aAAa,CAAE,EAAI,EAAI,GAM7B,GAAK,AAAO,KAAA,IAAP,GAAoB,AAAO,KAAP,EAAY,CAEpC,IAAM,EAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,CAE7B,EAAK,IAAI,CAAC,YAAY,CAAE,EAAI,GAC5B,EAAK,IAAI,CAAC,YAAY,CAAE,EAAI,GAC5B,EAAK,IAAI,CAAC,YAAY,CAAE,EAAI,GAE5B,IAAI,CAAC,KAAK,CAAE,EAAI,EAAI,GAEpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAG,CAAA,CAErC,MAIC,IAAI,CAAC,YAAY,EAInB,EAEA,iBAAkB,SAAW,CAAQ,EAEpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAG,SAE5B,IAAM,EAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAEjC,IAAM,IAAI,EAAK,EAAG,EAAI,EAAS,MAAM,CAAE,EAAK,EAAG,IAAQ,CAEtD,IAAM,EAAQ,IAAI,CAAC,gBAAgB,CAAE,CAAQ,CAAE,EAAI,CAAE,GAErD,IAAI,CAAC,cAAc,CAAE,GACrB,IAAI,CAAC,QAAQ,CAAE,EAEhB,CAED,EAEA,gBAAiB,SAAW,CAAQ,CAAE,CAAG,EAExC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAG,OAE5B,IAAM,EAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC3B,EAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,CAE7B,IAAM,IAAI,EAAK,EAAG,EAAI,EAAS,MAAM,CAAE,EAAK,EAAG,IAE9C,IAAI,CAAC,aAAa,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAQ,CAAE,EAAI,CAAE,IAI5D,IAAM,IAAI,EAAM,EAAG,EAAI,EAAI,MAAM,CAAE,EAAM,EAAG,IAE3C,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,YAAY,CAAE,CAAG,CAAE,EAAK,CAAE,GAIjD,CAED,EAIA,OAFA,EAAM,WAAW,CAAE,GAAI,CAAA,GAEhB,CAER,CAIA,MAAM,UAAkB,EAAA,MAAK,CAE5B,YAAa,CAAO,CAAG,CAEtB,KAAK,CAAE,GAEP,IAAI,CAAC,SAAS,CAAG,IAElB,CAEA,KAAM,CAAG,CAAE,CAAM,CAAE,CAAU,CAAE,CAAO,CAAG,CAExC,IAAM,EAAQ,IAAI,CAEZ,EAAS,GAAI,CAAA,EAAA,EAAA,UAAS,AAAT,EAAY,IAAI,CAAC,OAAO,EAC3C,EAAO,OAAO,CAAE,IAAI,CAAC,IAAI,EACzB,EAAO,gBAAgB,CAAE,IAAI,CAAC,aAAa,EAC3C,EAAO,kBAAkB,CAAE,IAAI,CAAC,eAAe,EAC/C,EAAO,IAAI,CAAE,EAAK,SAAW,CAAI,EAEhC,GAAI,CAEH,EAAQ,EAAM,KAAK,CAAE,GAEtB,CAAE,MAAQ,EAAI,CAER,EAEJ,EAAS,GAIT,QAAQ,KAAK,CAAE,GAIhB,EAAM,OAAO,CAAC,SAAS,CAAE,EAE1B,CAED,EAAG,EAAY,EAEhB,CAEA,aAAc,CAAS,CAAG,CAIzB,OAFA,IAAI,CAAC,SAAS,CAAG,EAEV,IAAI,AAEZ,CAEA,MAAO,CAAI,CAAG,CAEb,IAAM,EAAQ,IAAI,CAEb,AAA2B,CAAA,KAA3B,EAAK,OAAO,CAAE,SAGlB,CAAA,EAAO,EAAK,OAAO,CAAE,QAAS,KAA9B,EAII,AAA2B,KAA3B,EAAK,OAAO,CAAE,SAGlB,CAAA,EAAO,EAAK,OAAO,CAAE,QAAS,GAA9B,EAID,IAAM,EAAQ,EAAK,KAAK,CAAE,MACtB,EAAS,EAAE,CAEf,IAAM,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,EAAI,EAAG,IAAO,CAEhD,IAAM,EAAO,CAAK,CAAE,EAAG,CAAC,SAAS,GAEjC,GAAK,AAAgB,IAAhB,EAAK,MAAM,CAAS,SAEzB,IAAM,EAAgB,EAAK,MAAM,CAAE,GAGnC,GAAK,AAAkB,MAAlB,EAEL,GAAK,AAAkB,MAAlB,EAAwB,CAE5B,IAAM,EAAO,EAAK,KAAK,CAAE,GAEzB,OAAS,CAAI,CAAE,EAAG,EAEjB,IAAK,IACJ,EAAM,QAAQ,CAAC,IAAI,CAClB,WAAY,CAAI,CAAE,EAAG,EACrB,WAAY,CAAI,CAAE,EAAG,EACrB,WAAY,CAAI,CAAE,EAAG,GAEjB,EAAK,MAAM,EAAI,GAEnB,EAAO,MAAM,CACZ,WAAY,CAAI,CAAE,EAAG,EACrB,WAAY,CAAI,CAAE,EAAG,EACrB,WAAY,CAAI,CAAE,EAAG,EACrB,EAAA,cAAa,EAGd,EAAM,MAAM,CAAC,IAAI,CAAE,EAAO,CAAC,CAAE,EAAO,CAAC,CAAE,EAAO,CAAC,GAM/C,EAAM,MAAM,CAAC,IAAI,CAAE,KAAA,EAAW,KAAA,EAAW,KAAA,GAI1C,KACD,KAAK,KACJ,EAAM,OAAO,CAAC,IAAI,CACjB,WAAY,CAAI,CAAE,EAAG,EACrB,WAAY,CAAI,CAAE,EAAG,EACrB,WAAY,CAAI,CAAE,EAAG,GAEtB,KACD,KAAK,KACJ,EAAM,GAAG,CAAC,IAAI,CACb,WAAY,CAAI,CAAE,EAAG,EACrB,WAAY,CAAI,CAAE,EAAG,EAIxB,CAED,MAAO,GAAK,AAAkB,MAAlB,EAAwB,CAGnC,IAAM,EAAa,AADF,EAAK,KAAK,CAAE,GAAI,IAAI,GACT,KAAK,CAAE,GAC7B,EAAe,EAAE,CAIvB,IAAM,IAAI,EAAI,EAAG,EAAK,EAAW,MAAM,CAAE,EAAI,EAAI,IAAO,CAEvD,IAAM,EAAS,CAAU,CAAE,EAAG,CAE9B,GAAK,EAAO,MAAM,CAAG,EAAI,CAExB,IAAM,EAAc,EAAO,KAAK,CAAE,KAClC,EAAa,IAAI,CAAE,EAEpB,CAED,CAIA,IAAM,EAAK,CAAY,CAAE,EAAG,CAE5B,IAAM,IAAI,EAAI,EAAG,EAAK,EAAa,MAAM,CAAG,EAAG,EAAI,EAAI,IAAO,CAE7D,IAAM,EAAK,CAAY,CAAE,EAAG,CACtB,EAAK,CAAY,CAAE,EAAI,EAAG,CAEhC,EAAM,OAAO,CACZ,CAAE,CAAE,EAAG,CAAE,CAAE,CAAE,EAAG,CAAE,CAAE,CAAE,EAAG,CACzB,CAAE,CAAE,EAAG,CAAE,CAAE,CAAE,EAAG,CAAE,CAAE,CAAE,EAAG,CACzB,CAAE,CAAE,EAAG,CAAE,CAAE,CAAE,EAAG,CAAE,CAAE,CAAE,EAAG,CAG3B,CAED,MAAO,GAAK,AAAkB,MAAlB,EAAwB,CAEnC,IAAM,EAAY,EAAK,SAAS,CAAE,GAAI,IAAI,GAAG,KAAK,CAAE,KAChD,EAAe,EAAE,CACf,EAAU,EAAE,CAElB,GAAK,AAAwB,KAAxB,EAAK,OAAO,CAAE,KAElB,EAAe,OAIf,IAAM,IAAI,EAAK,EAAG,EAAO,EAAU,MAAM,CAAE,EAAK,EAAM,IAAQ,CAE7D,IAAM,EAAQ,CAAS,CAAE,EAAI,CAAC,KAAK,CAAE,IAEhC,AAAe,CAAA,KAAf,CAAK,CAAE,EAAG,EAAU,EAAa,IAAI,CAAE,CAAK,CAAE,EAAG,EACjD,AAAe,KAAf,CAAK,CAAE,EAAG,EAAU,EAAQ,IAAI,CAAE,CAAK,CAAE,EAAG,CAElD,CAID,EAAM,eAAe,CAAE,EAAc,EAEtC,MAAO,GAAK,AAAkB,MAAlB,EAAwB,CAGnC,IAAM,EAAY,AADD,EAAK,KAAK,CAAE,GAAI,IAAI,GACV,KAAK,CAAE,KAElC,EAAM,gBAAgB,CAAE,EAEzB,MAAO,GAAO,AAA4C,OAA5C,CAAA,EAAS,EAAgB,IAAI,CAAE,EAAA,EAAoB,CAQhE,IAAM,EAAO,AAAE,CAAA,IAAM,CAAM,CAAE,EAAG,CAAC,KAAK,CAAE,GAAI,IAAI,EAAA,EAAK,KAAK,CAAE,GAE5D,EAAM,WAAW,CAAE,EAEpB,MAAO,GAAK,EAAsB,IAAI,CAAE,GAIvC,EAAM,MAAM,CAAC,aAAa,CAAE,EAAK,SAAS,CAAE,GAAI,IAAI,GAAI,EAAM,iBAAiB,OAEzE,GAAK,EAA0B,IAAI,CAAE,GAI3C,EAAM,iBAAiB,CAAC,IAAI,CAAE,EAAK,SAAS,CAAE,GAAI,IAAI,SAEhD,GAAK,EAAiB,IAAI,CAAE,GAKlC,QAAQ,IAAI,CAAE,6GAER,GAAK,AAAkB,MAAlB,EAAwB,CAsBnC,GAAK,AApBL,CAAA,EAAS,EAAK,KAAK,CAAE,IAArB,EAoBY,MAAM,CAAG,EAAI,CAExB,IAAM,EAAQ,CAAM,CAAE,EAAG,CAAC,IAAI,GAAG,WAAW,EAC5C,CAAA,EAAM,MAAM,CAAC,MAAM,CAAK,AAAU,MAAV,GAAiB,AAAU,QAAV,CAE1C,MAGC,EAAM,MAAM,CAAC,MAAM,CAAG,CAAA,EAIvB,IAAM,EAAW,EAAM,MAAM,CAAC,eAAe,EACxC,CAAA,GAAW,CAAA,EAAS,MAAM,CAAG,EAAM,MAAM,CAAC,MAAM,AAAN,CAEhD,KAAO,CAGN,GAAK,AAAS,OAAT,EAAgB,SAErB,QAAQ,IAAI,CAAE,sCAAwC,EAAO,IAE9D,CAED,CAEA,EAAM,QAAQ,GAEd,IAAM,EAAY,GAAI,CAAA,EAAA,EAAA,KAAI,AAAJ,EAKtB,GAJA,EAAU,iBAAiB,CAAG,EAAE,CAAC,MAAM,CAAE,EAAM,iBAAiB,EAI3D,AAAkB,CAAA,GAFG,CAAA,AAAyB,IAAzB,EAAM,OAAO,CAAC,MAAM,EAAU,AAAgD,IAAhD,EAAM,OAAO,CAAE,EAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,AAAK,EAIvG,IAAM,IAAI,EAAI,EAAG,EAAI,EAAM,OAAO,CAAC,MAAM,CAAE,EAAI,EAAG,IAAO,CAExD,IAiGI,EAjGE,EAAS,EAAM,OAAO,CAAE,EAAG,CAC3B,EAAW,EAAO,QAAQ,CAC1B,EAAY,EAAO,SAAS,CAC5B,EAAW,AAAkB,SAAlB,EAAS,IAAI,CACxB,EAAa,AAAkB,WAAlB,EAAS,IAAI,CAC5B,EAAkB,CAAA,EAGtB,GAAK,AAA6B,IAA7B,EAAS,QAAQ,CAAC,MAAM,CAAS,SAEtC,IAAM,EAAiB,GAAI,CAAA,EAAA,EAAA,cAAa,AAAb,EAE3B,EAAe,YAAY,CAAE,WAAY,GAAI,CAAA,EAAA,EAAA,sBAAqB,AAArB,EAAwB,EAAS,QAAQ,CAAE,IAEnF,EAAS,OAAO,CAAC,MAAM,CAAG,GAE9B,EAAe,YAAY,CAAE,SAAU,GAAI,CAAA,EAAA,EAAA,sBAAqB,AAArB,EAAwB,EAAS,OAAO,CAAE,IAIjF,EAAS,MAAM,CAAC,MAAM,CAAG,IAE7B,EAAkB,CAAA,EAClB,EAAe,YAAY,CAAE,QAAS,GAAI,CAAA,EAAA,EAAA,sBAAqB,AAArB,EAAwB,EAAS,MAAM,CAAE,KAI/E,AAA0B,CAAA,IAA1B,EAAS,YAAY,EAEzB,EAAe,YAAY,CAAE,KAAM,GAAI,CAAA,EAAA,EAAA,sBAAqB,AAArB,EAAwB,EAAS,GAAG,CAAE,IAM9E,IAAM,EAAmB,EAAE,CAE3B,IAAM,IAAI,EAAK,EAAG,EAAQ,EAAU,MAAM,CAAE,EAAK,EAAO,IAAQ,CAE/D,IAAM,EAAiB,CAAS,CAAE,EAAI,CAChC,EAAe,EAAe,IAAI,CAAG,IAAM,EAAe,MAAM,CAAG,IAAM,EAC3E,EAAW,EAAM,SAAS,CAAE,EAAc,CAE9C,GAAK,AAAmB,OAAnB,IAAI,CAAC,SAAS,CAKlB,GAHA,EAAW,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,EAAe,IAAI,EAGhD,CAAA,IAAU,GAAgB,aAAoB,EAAA,iBAAgB,CAO5D,CAAA,GAAK,GAAY,GAAY,CAAI,CAAA,aAAoB,EAAA,cAAa,EAAM,CAE9E,IAAM,EAAiB,GAAI,CAAA,EAAA,EAAA,cAAa,AAAb,EAAgB,CAAE,KAAM,GAAI,gBAAiB,CAAA,CAAM,GAC9E,AAAA,EAAA,QAAO,CAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAE,EAAgB,GAC9C,EAAe,KAAK,CAAC,IAAI,CAAE,EAAS,KAAK,EACzC,EAAe,GAAG,CAAG,EAAS,GAAG,CACjC,EAAW,CAEZ,CAAA,KAfyE,CAExE,IAAM,EAAe,GAAI,CAAA,EAAA,EAAA,iBAAgB,AAAhB,EACzB,AAAA,EAAA,QAAO,CAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAE,EAAc,GAC5C,EAAa,KAAK,CAAC,IAAI,CAAE,EAAS,KAAK,EACvC,EAAW,CAEZ,CAYiB,KAAA,IAAb,IAgBJ,CAZC,EAFI,EAEO,GAAI,CAAA,EAAA,EAAA,iBAAgB,AAAhB,EAEJ,EAEA,GAAI,CAAA,EAAA,EAAA,cAAa,AAAb,EAAgB,CAAE,KAAM,EAAG,gBAAiB,CAAA,CAAM,GAItD,GAAI,CAAA,EAAA,EAAA,iBAAgB,AAAhB,GAIP,IAAI,CAAG,EAAe,IAAI,CACnC,EAAS,WAAW,EAAG,EAAe,MAAM,CAC5C,EAAS,YAAY,CAAG,EAExB,EAAM,SAAS,CAAE,EAAc,CAAG,GAInC,EAAiB,IAAI,CAAE,EAExB,CAMA,GAAK,EAAiB,MAAM,CAAG,EAAI,CAElC,IAAM,IAAI,EAAK,EAAG,EAAQ,EAAU,MAAM,CAAE,EAAK,EAAO,IAAQ,CAE/D,IAAM,EAAiB,CAAS,CAAE,EAAI,CACtC,EAAe,QAAQ,CAAE,EAAe,UAAU,CAAE,EAAe,UAAU,CAAE,EAEhF,CAIC,EAFI,EAEG,GAAI,CAAA,EAAA,EAAA,YAAW,AAAX,EAAc,EAAgB,GAE9B,EAEJ,GAAI,CAAA,EAAA,EAAA,MAAK,AAAL,EAAQ,EAAgB,GAI5B,GAAI,CAAA,EAAA,EAAA,IAAG,AAAH,EAAM,EAAgB,EAInC,MAIE,EAFI,EAEG,GAAI,CAAA,EAAA,EAAA,YAAW,AAAX,EAAc,EAAgB,CAAgB,CAAE,EAAG,EAEnD,EAEJ,GAAI,CAAA,EAAA,EAAA,MAAK,AAAL,EAAQ,EAAgB,CAAgB,CAAE,EAAG,EAIjD,GAAI,CAAA,EAAA,EAAA,IAAG,AAAH,EAAM,EAAgB,CAAgB,CAAE,EAAG,CAMxD,CAAA,EAAK,IAAI,CAAG,EAAO,IAAI,CAEvB,EAAU,GAAG,CAAE,EAEhB,MAMA,GAAK,EAAM,QAAQ,CAAC,MAAM,CAAG,EAAI,CAEhC,IAAM,EAAW,GAAI,CAAA,EAAA,EAAA,cAAa,AAAb,EAAgB,CAAE,KAAM,EAAG,gBAAiB,CAAA,CAAM,GAEjE,EAAiB,GAAI,CAAA,EAAA,EAAA,cAAa,AAAb,EAE3B,EAAe,YAAY,CAAE,WAAY,GAAI,CAAA,EAAA,EAAA,sBAAqB,AAArB,EAAwB,EAAM,QAAQ,CAAE,IAEhF,EAAM,MAAM,CAAC,MAAM,CAAG,GAAK,AAAsB,KAAA,IAAtB,EAAM,MAAM,CAAE,EAAG,GAEhD,EAAe,YAAY,CAAE,QAAS,GAAI,CAAA,EAAA,EAAA,sBAAqB,AAArB,EAAwB,EAAM,MAAM,CAAE,IAChF,EAAS,YAAY,CAAG,CAAA,GAIzB,IAAM,EAAS,GAAI,CAAA,EAAA,EAAA,MAAK,AAAL,EAAQ,EAAgB,GAC3C,EAAU,GAAG,CAAE,EAEhB,CAID,OAAO,CAER,CAED,C,I,E,C,ECx4BA,EAAiB,YAAwB,OAAO,CAAC,SFSjD,IAAI,EAAQ,IAAI,EAAhB,KAAA,AACA,CAAA,EAAM,UAAU,CAAG,IAAI,EAAA,KAAA,CAAY,SAGnC,IAAM,EAAY,SAAS,cAAc,CAAC,oBACpC,EAAW,IAAI,EAAA,aAAA,CAAoB,CAAE,UAAW,CAAA,EAAM,MAAO,CAAA,EAAM,gBAAiB,mBAAqB,OAAQ,EAAU,aAAa,CAAC,SAAU,GACzJ,EAAS,OAAO,CAAC,EAAU,WAAW,CAAE,EAAU,YAAY,EAC9D,EAAS,aAAa,CAAC,OAAO,gBAAgB,EAG9C,OAAO,gBAAgB,CAAC,SAAU,KAChC,IAAM,EAAQ,EAAU,WAAW,CAC7B,EAAS,EAAU,YAAY,CACrC,EAAS,OAAO,CAAC,EAAO,GACxB,EAAO,MAAM,CAAG,EAAQ,EACxB,EAAO,sBAAsB,EAC/B,GAGA,IAAI,EAAS,IAAI,EAAA,iBAAA,CACf,GACA,EAAU,WAAW,CAAG,EAAU,YAAY,CAC9C,GACA,KAEF,EAAO,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,GACxB,EAAO,MAAM,CAAC,EAAM,QAAQ,EAM5B,IAAI,EAAW,GAAI,CAAA,EAAA,EAAA,aAAY,AAAZ,EAAc,EAAQ,EAAS,UAAU,CAC5D,CAAA,EAAS,aAAa,CAAG,CAAA,EACzB,EAAS,aAAa,CAAG,IACzB,EAAS,kBAAkB,CAAG,CAAA,EAI9B,IAAM,EAAe,IAAI,EAAA,YAAA,CAAmB,SAAU,GAChD,EAAQ,IAAI,EAAA,gBAAA,CAAuB,SAAU,GACnD,EAAM,QAAQ,CAAC,GAAG,CAAC,IAAK,EAAG,GAC3B,EAAM,UAAU,CAAG,CAAA,EACnB,EAAM,MAAM,CAAC,OAAO,CAAC,KAAK,CAAG,KAC7B,EAAM,MAAM,CAAC,OAAO,CAAC,MAAM,CAAG,KAC9B,EAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAG,GAC3B,EAAM,MAAM,CAAC,MAAM,CAAC,GAAG,CAAG,GAC1B,EAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAG,IAC3B,EAAM,MAAM,CAAC,MAAM,CAAC,KAAK,CAAG,GAC5B,EAAM,MAAM,CAAC,MAAM,CAAC,GAAG,CAAG,GAC1B,EAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAG,IAC7B,EAAS,SAAS,CAAC,OAAO,CAAG,CAAA,EAC7B,EAAS,SAAS,CAAC,IAAI,CAAG,EAAA,gBAAA,CAC1B,EAAM,GAAG,CAAC,EAAc,GAMxB,EAAM,GAAG,CAAC,IAAI,EAAA,UAAA,CAAiB,IAI/B,IAAM,EAAc,IAAI,EAAA,oBAAA,CAA2B,CAAE,MAAO,OAAS,GAC/D,EAAgB,IAAI,EAAA,oBAAA,CAA2B,CAAE,MAAO,OAAS,GACjE,EAAe,IAAI,EAAA,oBAAA,CAA2B,CAAE,MAAO,QAAS,GAEhE,EAAgB,IAAI,EAAA,oBAAA,CAA2B,CAAE,MAAO,QAAS,GAEjE,EAAe,IAAI,EAAA,iBAAA,CAAwB,CAAE,MAAO,CAAS,GAInE,SAAS,EAAmB,CAAQ,CAAE,CAAQ,EAC1C,IAAM,EAAO,IAAI,EAAA,IAAA,CAAW,EAAU,EACtC,CAAA,EAAK,UAAU,CAAG,CAAA,EAClB,IAAM,EAAQ,IAAI,EAAA,aAAA,CAAoB,GAChC,EAAO,IAAI,EAAA,YAAA,CAAmB,EAAO,GAE3C,OADA,EAAK,GAAG,CAAC,GACF,CACX,CAOA,IAAI,EAAS,EAAE,CACX,EAAc,EAAE,CAChB,EAAe,EAAE,CACjB,EAAY,EAAE,CAEd,EAAc,EAAE,CAChB,EAAY,EAAE,CACd,EAAS,EAAE,CAcX,GAAa,KAKb,GAAiB,KACjB,GAAkB,GAElB,GAAmB,KACnB,GAAoB,GAEpB,GAAoB,KACpB,GAAqB,GAKrB,GAAa,GACb,GAAc,IA2RlB,SAAS,KAxQT,GAdC,EAAS,WAAW,SAAS,cAAc,CAAC,gBAAgB,KAAK,EAAI,IACrE,EAAU,WAAW,SAAS,cAAc,CAAC,iBAAiB,KAAK,EAAI,IACvE,EAAqB,WAAW,SAAS,cAAc,CAAC,iBAAiB,KAAK,EAC9E,EAAsB,WAAW,SAAS,cAAc,CAAC,kBAAkB,KAAK,EAChF,EAAqB,WAAW,SAAS,cAAc,CAAC,qBAAqB,KAAK,EAGnF,EAAa,SAAS,cAAc,CAAC,SAAS,OAAO,CACrD,EAAe,SAAS,cAAc,CAAC,gBAAgB,OAAO,CAG9D,EAAS,KAAK,GAAG,CAAC,EADA,EAAoB,IAIlC,AAAgB,CAAA,GAAhB,EACA,I,EAAI,EAAa,EAAmB,QAEpC,EAAa,EAAmB,GA8DxB,OA3DZ,EAAU,KAAK,GAAG,CAAC,EAAQ,GAI3B,SAAS,cAAc,CAAC,gBAAgB,KAAK,CAAI,AAAA,CAAA,AAAQ,IAAR,CAAQ,EAAM,OAAO,CAAC,GACvE,SAAS,cAAc,CAAC,eAAe,KAAK,CAAI,AAAA,CAAA,AAAO,IAAP,CAAO,EAAM,OAAO,CAAC,GAsB7D,AAA+C,SAA/C,SAAS,cAAc,CAAC,cAAc,KAAK,EAC3C,EAAW,KACX,EAAa,KACb,GAAa,GACb,GAAc,IACd,GAAa,MAET,AAA+C,UAA/C,SAAS,cAAc,CAAC,cAAc,KAAK,EAC/C,EAAW,KACX,EAAa,GACb,GAAa,GACb,GAAc,GACd,GAAa,MAEsC,SAA/C,SAAS,cAAc,CAAC,cAAc,KAAK,GAC/C,EAAW,KACX,EAAa,GACb,GAAa,GACb,GAAc,GACd,GAAa,MAGb,GAAiB,EACjB,GAAkB,EAClB,GAAmB,EACnB,GAAoB,EACpB,GAAoB,EACpB,GAAqB,EAET,SAAS,cAAc,CAAC,mBAAmB,KAAK,EAIlE,IAAK,MACH,GAAa,KACb,EAAiB,EACjB,KACF,KAAK,YACH,GAAa,KACb,EAAiB,EACjB,KACF,KAAK,YACH,GAAa,KACb,EAAiB,CAErB,CA3DA,EAAa,OAAO,CAAC,AAAA,GAAS,EAAM,MAAM,CAAC,IAC3C,EAAc,OAAO,CAAC,AAAA,GAAS,EAAM,MAAM,CAAC,IAC5C,EAAW,OAAO,CAAC,AAAA,GAAS,EAAM,MAAM,CAAC,IACzC,EAAQ,OAAO,CAAC,AAAA,GAAQ,EAAM,MAAM,CAAC,IACrC,EAAY,OAAO,CAAC,AAAA,GAAY,EAAM,MAAM,CAAC,IAC7C,EAAU,OAAO,CAAC,AAAA,GAAY,EAAM,MAAM,CAAC,IAC3C,EAAO,OAAO,CAAC,AAAA,GAAY,EAAM,MAAM,CAAC,IAEpC,GAAO,EAAM,MAAM,CAAC,GAoPpB,AA7LJ,WAEA,IAAI,EAAS,CAAE,CAAA,EAAU,EAAA,EAAqB,EAC1C,EAAW,AAAC,CAAA,EAAU,EAAA,EAAsB,CAAA,EAAqB,CAAA,EAIrE,IAAK,IAAI,EAAI,EAAG,EAAI,EAAoB,IAAK,CACzC,IAAI,EAAO,EAAS,EAAI,EACpB,EAAa,EAAmB,IAAI,EAAA,WAAA,CAAkB,GAAmB,GAAkB,GAAS,GACxG,EAAW,QAAQ,CAAC,GAAG,CAAC,EAAK,GAAiB,EAAG,GACjD,EAAM,GAAG,CAAC,GACV,EAAa,IAAI,CAAC,EACtB,CACA,IAgLI,AA7KJ,WAGA,IAAI,EAAS,CAAE,CAAA,EAAU,EAAA,EAAe,EACpC,EAAW,AAAC,CAAA,EAAU,EAAA,EAAgB,CAAA,EAAqB,CAAA,EAE3D,EAAS,CAAE,CAAA,EAAS,EAAA,EAAe,EACnC,EAAW,AAAC,CAAA,EAAS,EAAA,EAAgB,CAAA,EAAsB,CAAA,EAG/D,IAAK,IAAI,EAAI,EAAG,EAAI,EAAoB,IACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAqB,IAAK,CAE1C,IAAI,EAAO,EAAS,EAAI,EACpB,EAAO,EAAS,EAAI,EAEpB,EAAO,EAAmB,IAAI,EAAA,WAAA,CAAkB,GAAa,GAAY,IAAc,GAC3F,EAAK,QAAQ,CAAC,GAAG,CAAC,EAAM,GAAmB,GAAa,EAAG,GAC3D,EAAM,GAAG,CAAC,GACV,EAAQ,IAAI,CAAC,EACjB,CAEJ,IAwJI,AAtJJ,WAGA,IAAI,EAAS,CAAG,CAAA,EAAS,EAAA,EAAoB,EAEzC,EAAW,AAAC,CAAA,EAAS,EAAA,EAAuB,CAAA,EAAsB,CAAA,EAGtE,IAAK,IAAI,EAAI,EAAG,EAAI,EAAqB,IAAK,CAC1C,IAAI,EAAO,EAAS,EAAI,EACpB,EAAc,EAAmB,IAAI,EAAA,WAAA,CAAkB,EAAS,GAAmB,IAAqB,GAC5G,EAAY,QAAQ,CAAC,GAAG,CAAC,EAAG,GAAa,GAAmB,GAAkB,EAAG,GACjF,EAAM,GAAG,CAAC,GACV,EAAc,IAAI,CAAC,EACvB,CACA,IAwII,AAtIJ,WAGE,GAAG,AAAc,CAAA,GAAd,EAMC,AAHA,CAAA,EAAQ,EAAmB,IAAI,EAAA,WAAA,CAAkB,EAAQ,GAAW,GAAS,EAA7E,EAGM,QAAQ,CAAC,GAAG,CAAC,EAAG,GAAa,GAAoB,GAAmB,GAAW,EAAE,GAGvF,EAAM,GAAG,CAAC,QAKT,GAAG,AAAgB,CAAA,GAAhB,EAAqB,CAG3B,IAAI,EAAS,CAAE,CAAA,EAAS,EAAA,EAAmB,EACvC,EAAO,AAAC,CAAA,EAAS,EAAA,EAAmB,EAIlC,EAAU,EAAsB,EAAK,AADjB,CAAA,EAAO,CAAjC,EACgE,CAAA,EAAqB,CAAA,EAAK,EAG1F,IAAK,IAAI,EAAI,EAAG,EAAI,EAAoB,IAAK,CACzC,IAAI,EAAO,EAAS,EAAI,EAEpB,EAAW,EAAmB,IAAI,EAAA,WAAA,CAAkB,GAAiB,GAAgB,GAAS,GAGlG,EAAS,QAAQ,CAAC,GAAG,CAAC,EAAK,GAAa,GAAmB,GAAoB,GAAe,EAAG,GAGjG,EAAM,GAAG,CAAC,GACV,EAAW,IAAI,CAAC,EACpB,CACJ,CACA,IAKA,IAAK,IAAI,EAAE,EAAG,EAAE,EAAE,IAAI,CAEpB,IAAM,EAAS,IAAI,EAIf,EAAY,CAChB,CAAC,CAAC,EAAQ,EAJV,CAAA,EAAS,KAAT,EAIoB,IAAM,CAAC,EAAO,EAAE,EAAO,CAC3C,CAAC,CAAC,EAAQ,EAAE,EAAQ,IAAM,EAAO,EAAE,EAAO,CAC1C,CAAC,EAAQ,EAAE,EAAQ,IAAM,EAAO,EAAE,EAAO,CACzC,CAAC,EAAQ,EAAE,EAAQ,IAAM,CAAC,EAAO,EAAE,EAAO,CAE3C,CAEC,EAAO,IAAI,C,C,EAAC,I,E,U,C,E,O,C,EAAU,AAAC,IACnB,EAAO,QAAQ,CAAC,CAAC,CAAG,EAAE,KAAK,EAAE,CAAG,EAGtC,EAAO,KAAK,CAAC,SAAS,CAAC,EAAI,IAGzB,IAAM,EAAM,IAAI,EAAA,IAAA,GAAa,aAAa,CAAC,GACrC,EAAS,IAAI,EAAnB,OAAA,CACA,EAAI,SAAS,CAAC,GACd,EAAO,QAAQ,CAAC,GAAG,CAAC,GAIpB,GAAM,CAAC,EAAG,EAAG,EAAE,CAAG,CAAS,CAAC,EAAE,CAC9B,EAAO,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAA,OAAA,CAAc,EAAG,EAAG,IAG5C,EAAM,GAAG,CAAC,GACV,EAAY,IAAI,CAAC,EAEjB,EAAG,CAIF,IAAK,IAAI,IAAY,CAAC,EAAE,GAAG,CAAE,CAC9B,IAAI,EAAU,EAAmB,IAAI,EAAA,WAAA,CAxPnB,KADG,KAyPkE,EAAO,EAAE,GAAQ,GAEpG,EAAM,GAAiB,GAAW,GAAkB,GAAe,MACvE,EAAQ,QAAQ,CAAC,GAAG,CAAC,EAAU,CAAA,EAAQ,EAAE,IAAe,EAAG,EAAK,KAAM,GACtE,EAAM,GAAG,CAAC,GACV,EAAU,IAAI,CAAC,EAEd,CAMA,IAAK,IAAI,IAAY,CAAC,EAAE,GAAG,CAAE,CAC9B,IAAI,EAAM,EAAmB,IAAI,EAAA,WAAA,CAAkB,EAAQ,EAAE,EAvQxC,KACH,MAsQmF,GAEjG,EAAM,GAAiB,GAAW,GAAkB,GAAe,MACvE,EAAI,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAK,KAAM,EAAU,CAAA,EAAO,EAAE,IAAe,GAChE,EAAM,GAAG,CAAC,GACV,EAAO,IAAI,CAAC,EAEX,CAgCH,CAvBI,GAAQ,EAAM,MAAM,CAAC,GAEzB,AADA,CAAA,EAAS,IAAI,EAAA,IAAA,CAAW,IAAI,EAAA,aAAA,CAAoB,GAAI,IAAK,IAAI,EAAA,cAAA,CAAqB,CAAC,MAAO,QAAQ,GAAA,EAC3F,QAAQ,CAAC,CAAC,CAAG,CAAC,KAAK,EAAE,CAAG,EAC/B,EAAO,aAAa,CAAG,CAAA,EACvB,EAAO,QAAQ,CAAC,CAAC,CAAG,CAAE,GAAiB,EACvC,EAAM,GAAG,CAAC,IAyBR,AALF,SAAS,IACL,sBAAsB,GACtB,EAAS,MAAM,GACf,EAAS,MAAM,CAAC,EAAO,EACzB,IA+BA,KAxBA,AAFiB,SAAS,gBAAgB,CAAC,2BAElC,OAAO,CAAC,AAAC,IACZ,AAAe,UAAf,EAAG,OAAO,CACR,AAAY,UAAZ,EAAG,IAAI,CAET,EAAG,gBAAgB,CAAC,QAAS,IACpB,AAAY,SAAZ,EAAG,IAAI,EAAe,AAAY,WAAZ,EAAG,IAAI,EAEtC,EAAG,gBAAgB,CAAC,OAAQ,IAC5B,EAAG,gBAAgB,CAAC,UAAW,AAAC,IAC1B,AAAU,UAAV,EAAE,GAAG,EAAc,IACzB,IACS,AAAY,aAAZ,EAAG,IAAI,EAEhB,EAAG,gBAAgB,CAAC,SAAU,IAEvB,AAAe,WAAf,EAAG,OAAO,EAEnB,EAAG,gBAAgB,CAAC,SAAU,GAElC","sources":["<anon>","js/Opzetrand.js","node_modules/three/examples/jsm/loaders/OBJLoader.js","node_modules/@parcel/runtime-js/lib/runtime-a9048705d2044aff.js"],"sourcesContent":["import \"./Massieve_kist.626d928d.js\";\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $dyjou = parcelRequire(\"dyjou\");\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $5Rd1x = parcelRequire(\"5Rd1x\");\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nvar $dyjou = parcelRequire(\"dyjou\");\n// o object_name | g group_name\nconst $688db8e5a5d67801$var$_object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst $688db8e5a5d67801$var$_material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst $688db8e5a5d67801$var$_material_use_pattern = /^usemtl /;\n// usemap map_name\nconst $688db8e5a5d67801$var$_map_use_pattern = /^usemap /;\nconst $688db8e5a5d67801$var$_face_vertex_data_separator_pattern = /\\s+/;\nconst $688db8e5a5d67801$var$_vA = new (0, $ilwiq.Vector3)();\nconst $688db8e5a5d67801$var$_vB = new (0, $ilwiq.Vector3)();\nconst $688db8e5a5d67801$var$_vC = new (0, $ilwiq.Vector3)();\nconst $688db8e5a5d67801$var$_ab = new (0, $ilwiq.Vector3)();\nconst $688db8e5a5d67801$var$_cb = new (0, $ilwiq.Vector3)();\nconst $688db8e5a5d67801$var$_color = new (0, $ilwiq.Color)();\nfunction $688db8e5a5d67801$var$ParserState() {\n    const state = {\n        objects: [],\n        object: {},\n        vertices: [],\n        normals: [],\n        colors: [],\n        uvs: [],\n        materials: {},\n        materialLibraries: [],\n        startObject: function(name, fromDeclaration) {\n            // If the current object (initial from reset) is not from a g/o declaration in the parsed\n            // file. We need to use it for the first parsed g/o to keep things in sync.\n            if (this.object && this.object.fromDeclaration === false) {\n                this.object.name = name;\n                this.object.fromDeclaration = fromDeclaration !== false;\n                return;\n            }\n            const previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n            if (this.object && typeof this.object._finalize === 'function') this.object._finalize(true);\n            this.object = {\n                name: name || '',\n                fromDeclaration: fromDeclaration !== false,\n                geometry: {\n                    vertices: [],\n                    normals: [],\n                    colors: [],\n                    uvs: [],\n                    hasUVIndices: false\n                },\n                materials: [],\n                smooth: true,\n                startMaterial: function(name, libraries) {\n                    const previous = this._finalize(false);\n                    // New usemtl declaration overwrites an inherited material, except if faces were declared\n                    // after the material, then it must be preserved for proper MultiMaterial continuation.\n                    if (previous && (previous.inherited || previous.groupCount <= 0)) this.materials.splice(previous.index, 1);\n                    const material = {\n                        index: this.materials.length,\n                        name: name || '',\n                        mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n                        smooth: previous !== undefined ? previous.smooth : this.smooth,\n                        groupStart: previous !== undefined ? previous.groupEnd : 0,\n                        groupEnd: -1,\n                        groupCount: -1,\n                        inherited: false,\n                        clone: function(index) {\n                            const cloned = {\n                                index: typeof index === 'number' ? index : this.index,\n                                name: this.name,\n                                mtllib: this.mtllib,\n                                smooth: this.smooth,\n                                groupStart: 0,\n                                groupEnd: -1,\n                                groupCount: -1,\n                                inherited: false\n                            };\n                            cloned.clone = this.clone.bind(cloned);\n                            return cloned;\n                        }\n                    };\n                    this.materials.push(material);\n                    return material;\n                },\n                currentMaterial: function() {\n                    if (this.materials.length > 0) return this.materials[this.materials.length - 1];\n                    return undefined;\n                },\n                _finalize: function(end) {\n                    const lastMultiMaterial = this.currentMaterial();\n                    if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n                        lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n                        lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n                        lastMultiMaterial.inherited = false;\n                    }\n                    // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n                    if (end && this.materials.length > 1) {\n                        for(let mi = this.materials.length - 1; mi >= 0; mi--)if (this.materials[mi].groupCount <= 0) this.materials.splice(mi, 1);\n                    }\n                    // Guarantee at least one empty material, this makes the creation later more straight forward.\n                    if (end && this.materials.length === 0) this.materials.push({\n                        name: '',\n                        smooth: this.smooth\n                    });\n                    return lastMultiMaterial;\n                }\n            };\n            // Inherit previous objects material.\n            // Spec tells us that a declared material must be set to all objects until a new material is declared.\n            // If a usemtl declaration is encountered while this new object is being parsed, it will\n            // overwrite the inherited material. Exception being that there was already face declarations\n            // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n            if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n                const declared = previousMaterial.clone(0);\n                declared.inherited = true;\n                this.object.materials.push(declared);\n            }\n            this.objects.push(this.object);\n        },\n        finalize: function() {\n            if (this.object && typeof this.object._finalize === 'function') this.object._finalize(true);\n        },\n        parseVertexIndex: function(value, len) {\n            const index = parseInt(value, 10);\n            return (index >= 0 ? index - 1 : index + len / 3) * 3;\n        },\n        parseNormalIndex: function(value, len) {\n            const index = parseInt(value, 10);\n            return (index >= 0 ? index - 1 : index + len / 3) * 3;\n        },\n        parseUVIndex: function(value, len) {\n            const index = parseInt(value, 10);\n            return (index >= 0 ? index - 1 : index + len / 2) * 2;\n        },\n        addVertex: function(a, b, c) {\n            const src = this.vertices;\n            const dst = this.object.geometry.vertices;\n            dst.push(src[a + 0], src[a + 1], src[a + 2]);\n            dst.push(src[b + 0], src[b + 1], src[b + 2]);\n            dst.push(src[c + 0], src[c + 1], src[c + 2]);\n        },\n        addVertexPoint: function(a) {\n            const src = this.vertices;\n            const dst = this.object.geometry.vertices;\n            dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        },\n        addVertexLine: function(a) {\n            const src = this.vertices;\n            const dst = this.object.geometry.vertices;\n            dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        },\n        addNormal: function(a, b, c) {\n            const src = this.normals;\n            const dst = this.object.geometry.normals;\n            dst.push(src[a + 0], src[a + 1], src[a + 2]);\n            dst.push(src[b + 0], src[b + 1], src[b + 2]);\n            dst.push(src[c + 0], src[c + 1], src[c + 2]);\n        },\n        addFaceNormal: function(a, b, c) {\n            const src = this.vertices;\n            const dst = this.object.geometry.normals;\n            $688db8e5a5d67801$var$_vA.fromArray(src, a);\n            $688db8e5a5d67801$var$_vB.fromArray(src, b);\n            $688db8e5a5d67801$var$_vC.fromArray(src, c);\n            $688db8e5a5d67801$var$_cb.subVectors($688db8e5a5d67801$var$_vC, $688db8e5a5d67801$var$_vB);\n            $688db8e5a5d67801$var$_ab.subVectors($688db8e5a5d67801$var$_vA, $688db8e5a5d67801$var$_vB);\n            $688db8e5a5d67801$var$_cb.cross($688db8e5a5d67801$var$_ab);\n            $688db8e5a5d67801$var$_cb.normalize();\n            dst.push($688db8e5a5d67801$var$_cb.x, $688db8e5a5d67801$var$_cb.y, $688db8e5a5d67801$var$_cb.z);\n            dst.push($688db8e5a5d67801$var$_cb.x, $688db8e5a5d67801$var$_cb.y, $688db8e5a5d67801$var$_cb.z);\n            dst.push($688db8e5a5d67801$var$_cb.x, $688db8e5a5d67801$var$_cb.y, $688db8e5a5d67801$var$_cb.z);\n        },\n        addColor: function(a, b, c) {\n            const src = this.colors;\n            const dst = this.object.geometry.colors;\n            if (src[a] !== undefined) dst.push(src[a + 0], src[a + 1], src[a + 2]);\n            if (src[b] !== undefined) dst.push(src[b + 0], src[b + 1], src[b + 2]);\n            if (src[c] !== undefined) dst.push(src[c + 0], src[c + 1], src[c + 2]);\n        },\n        addUV: function(a, b, c) {\n            const src = this.uvs;\n            const dst = this.object.geometry.uvs;\n            dst.push(src[a + 0], src[a + 1]);\n            dst.push(src[b + 0], src[b + 1]);\n            dst.push(src[c + 0], src[c + 1]);\n        },\n        addDefaultUV: function() {\n            const dst = this.object.geometry.uvs;\n            dst.push(0, 0);\n            dst.push(0, 0);\n            dst.push(0, 0);\n        },\n        addUVLine: function(a) {\n            const src = this.uvs;\n            const dst = this.object.geometry.uvs;\n            dst.push(src[a + 0], src[a + 1]);\n        },\n        addFace: function(a, b, c, ua, ub, uc, na, nb, nc) {\n            const vLen = this.vertices.length;\n            let ia = this.parseVertexIndex(a, vLen);\n            let ib = this.parseVertexIndex(b, vLen);\n            let ic = this.parseVertexIndex(c, vLen);\n            this.addVertex(ia, ib, ic);\n            this.addColor(ia, ib, ic);\n            // normals\n            if (na !== undefined && na !== '') {\n                const nLen = this.normals.length;\n                ia = this.parseNormalIndex(na, nLen);\n                ib = this.parseNormalIndex(nb, nLen);\n                ic = this.parseNormalIndex(nc, nLen);\n                this.addNormal(ia, ib, ic);\n            } else this.addFaceNormal(ia, ib, ic);\n            // uvs\n            if (ua !== undefined && ua !== '') {\n                const uvLen = this.uvs.length;\n                ia = this.parseUVIndex(ua, uvLen);\n                ib = this.parseUVIndex(ub, uvLen);\n                ic = this.parseUVIndex(uc, uvLen);\n                this.addUV(ia, ib, ic);\n                this.object.geometry.hasUVIndices = true;\n            } else // add placeholder values (for inconsistent face definitions)\n            this.addDefaultUV();\n        },\n        addPointGeometry: function(vertices) {\n            this.object.geometry.type = 'Points';\n            const vLen = this.vertices.length;\n            for(let vi = 0, l = vertices.length; vi < l; vi++){\n                const index = this.parseVertexIndex(vertices[vi], vLen);\n                this.addVertexPoint(index);\n                this.addColor(index);\n            }\n        },\n        addLineGeometry: function(vertices, uvs) {\n            this.object.geometry.type = 'Line';\n            const vLen = this.vertices.length;\n            const uvLen = this.uvs.length;\n            for(let vi = 0, l = vertices.length; vi < l; vi++)this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n            for(let uvi = 0, l = uvs.length; uvi < l; uvi++)this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n        }\n    };\n    state.startObject('', false);\n    return state;\n}\n//\nclass $688db8e5a5d67801$export$7ae31604ad04b4a7 extends (0, $dyjou.Loader) {\n    constructor(manager){\n        super(manager);\n        this.materials = null;\n    }\n    load(url, onLoad, onProgress, onError) {\n        const scope = this;\n        const loader = new (0, $dyjou.FileLoader)(this.manager);\n        loader.setPath(this.path);\n        loader.setRequestHeader(this.requestHeader);\n        loader.setWithCredentials(this.withCredentials);\n        loader.load(url, function(text) {\n            try {\n                onLoad(scope.parse(text));\n            } catch (e) {\n                if (onError) onError(e);\n                else console.error(e);\n                scope.manager.itemError(url);\n            }\n        }, onProgress, onError);\n    }\n    setMaterials(materials) {\n        this.materials = materials;\n        return this;\n    }\n    parse(text) {\n        const state = new $688db8e5a5d67801$var$ParserState();\n        if (text.indexOf('\\r\\n') !== -1) // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n        if (text.indexOf('\\\\\\n') !== -1) // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n        const lines = text.split('\\n');\n        let result = [];\n        for(let i = 0, l = lines.length; i < l; i++){\n            const line = lines[i].trimStart();\n            if (line.length === 0) continue;\n            const lineFirstChar = line.charAt(0);\n            // @todo invoke passed in handler if any\n            if (lineFirstChar === '#') continue; // skip comments\n            if (lineFirstChar === 'v') {\n                const data = line.split($688db8e5a5d67801$var$_face_vertex_data_separator_pattern);\n                switch(data[0]){\n                    case 'v':\n                        state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n                        if (data.length >= 7) {\n                            $688db8e5a5d67801$var$_color.setRGB(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]), (0, $ilwiq.SRGBColorSpace));\n                            state.colors.push($688db8e5a5d67801$var$_color.r, $688db8e5a5d67801$var$_color.g, $688db8e5a5d67801$var$_color.b);\n                        } else // if no colors are defined, add placeholders so color and vertex indices match\n                        state.colors.push(undefined, undefined, undefined);\n                        break;\n                    case 'vn':\n                        state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n                        break;\n                    case 'vt':\n                        state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n                        break;\n                }\n            } else if (lineFirstChar === 'f') {\n                const lineData = line.slice(1).trim();\n                const vertexData = lineData.split($688db8e5a5d67801$var$_face_vertex_data_separator_pattern);\n                const faceVertices = [];\n                // Parse the face vertex data into an easy to work with format\n                for(let j = 0, jl = vertexData.length; j < jl; j++){\n                    const vertex = vertexData[j];\n                    if (vertex.length > 0) {\n                        const vertexParts = vertex.split('/');\n                        faceVertices.push(vertexParts);\n                    }\n                }\n                // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n                const v1 = faceVertices[0];\n                for(let j = 1, jl = faceVertices.length - 1; j < jl; j++){\n                    const v2 = faceVertices[j];\n                    const v3 = faceVertices[j + 1];\n                    state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n                }\n            } else if (lineFirstChar === 'l') {\n                const lineParts = line.substring(1).trim().split(' ');\n                let lineVertices = [];\n                const lineUVs = [];\n                if (line.indexOf('/') === -1) lineVertices = lineParts;\n                else for(let li = 0, llen = lineParts.length; li < llen; li++){\n                    const parts = lineParts[li].split('/');\n                    if (parts[0] !== '') lineVertices.push(parts[0]);\n                    if (parts[1] !== '') lineUVs.push(parts[1]);\n                }\n                state.addLineGeometry(lineVertices, lineUVs);\n            } else if (lineFirstChar === 'p') {\n                const lineData = line.slice(1).trim();\n                const pointData = lineData.split(' ');\n                state.addPointGeometry(pointData);\n            } else if ((result = $688db8e5a5d67801$var$_object_pattern.exec(line)) !== null) {\n                // o object_name\n                // or\n                // g group_name\n                // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                // let name = result[ 0 ].slice( 1 ).trim();\n                const name = (' ' + result[0].slice(1).trim()).slice(1);\n                state.startObject(name);\n            } else if ($688db8e5a5d67801$var$_material_use_pattern.test(line)) // material\n            state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n            else if ($688db8e5a5d67801$var$_material_library_pattern.test(line)) // mtl file\n            state.materialLibraries.push(line.substring(7).trim());\n            else if ($688db8e5a5d67801$var$_map_use_pattern.test(line)) // the line is parsed but ignored since the loader assumes textures are defined MTL files\n            // (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n            console.warn('THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.');\n            else if (lineFirstChar === 's') {\n                result = line.split(' ');\n                // smooth shading\n                // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n                // but does not define a usemtl for each face set.\n                // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n                // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n                // where explicit usemtl defines geometry groups.\n                // Example asset: examples/models/obj/cerberus/Cerberus.obj\n                /*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */ if (result.length > 1) {\n                    const value = result[1].trim().toLowerCase();\n                    state.object.smooth = value !== '0' && value !== 'off';\n                } else // ZBrush can produce \"s\" lines #11707\n                state.object.smooth = true;\n                const material = state.object.currentMaterial();\n                if (material) material.smooth = state.object.smooth;\n            } else {\n                // Handle null terminated files without exception\n                if (line === '\\0') continue;\n                console.warn('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n            }\n        }\n        state.finalize();\n        const container = new (0, $dyjou.Group)();\n        container.materialLibraries = [].concat(state.materialLibraries);\n        const hasPrimitives = !(state.objects.length === 1 && state.objects[0].geometry.vertices.length === 0);\n        if (hasPrimitives === true) for(let i = 0, l = state.objects.length; i < l; i++){\n            const object = state.objects[i];\n            const geometry = object.geometry;\n            const materials = object.materials;\n            const isLine = geometry.type === 'Line';\n            const isPoints = geometry.type === 'Points';\n            let hasVertexColors = false;\n            // Skip o/g line declarations that did not follow with any faces\n            if (geometry.vertices.length === 0) continue;\n            const buffergeometry = new (0, $ilwiq.BufferGeometry)();\n            buffergeometry.setAttribute('position', new (0, $dyjou.Float32BufferAttribute)(geometry.vertices, 3));\n            if (geometry.normals.length > 0) buffergeometry.setAttribute('normal', new (0, $dyjou.Float32BufferAttribute)(geometry.normals, 3));\n            if (geometry.colors.length > 0) {\n                hasVertexColors = true;\n                buffergeometry.setAttribute('color', new (0, $dyjou.Float32BufferAttribute)(geometry.colors, 3));\n            }\n            if (geometry.hasUVIndices === true) buffergeometry.setAttribute('uv', new (0, $dyjou.Float32BufferAttribute)(geometry.uvs, 2));\n            // Create materials\n            const createdMaterials = [];\n            for(let mi = 0, miLen = materials.length; mi < miLen; mi++){\n                const sourceMaterial = materials[mi];\n                const materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n                let material = state.materials[materialHash];\n                if (this.materials !== null) {\n                    material = this.materials.create(sourceMaterial.name);\n                    // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n                    if (isLine && material && !(material instanceof (0, $dyjou.LineBasicMaterial))) {\n                        const materialLine = new (0, $dyjou.LineBasicMaterial)();\n                        (0, $dyjou.Material).prototype.copy.call(materialLine, material);\n                        materialLine.color.copy(material.color);\n                        material = materialLine;\n                    } else if (isPoints && material && !(material instanceof (0, $dyjou.PointsMaterial))) {\n                        const materialPoints = new (0, $dyjou.PointsMaterial)({\n                            size: 10,\n                            sizeAttenuation: false\n                        });\n                        (0, $dyjou.Material).prototype.copy.call(materialPoints, material);\n                        materialPoints.color.copy(material.color);\n                        materialPoints.map = material.map;\n                        material = materialPoints;\n                    }\n                }\n                if (material === undefined) {\n                    if (isLine) material = new (0, $dyjou.LineBasicMaterial)();\n                    else if (isPoints) material = new (0, $dyjou.PointsMaterial)({\n                        size: 1,\n                        sizeAttenuation: false\n                    });\n                    else material = new (0, $dyjou.MeshPhongMaterial)();\n                    material.name = sourceMaterial.name;\n                    material.flatShading = sourceMaterial.smooth ? false : true;\n                    material.vertexColors = hasVertexColors;\n                    state.materials[materialHash] = material;\n                }\n                createdMaterials.push(material);\n            }\n            // Create mesh\n            let mesh;\n            if (createdMaterials.length > 1) {\n                for(let mi = 0, miLen = materials.length; mi < miLen; mi++){\n                    const sourceMaterial = materials[mi];\n                    buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n                }\n                if (isLine) mesh = new (0, $dyjou.LineSegments)(buffergeometry, createdMaterials);\n                else if (isPoints) mesh = new (0, $dyjou.Points)(buffergeometry, createdMaterials);\n                else mesh = new (0, $ilwiq.Mesh)(buffergeometry, createdMaterials);\n            } else {\n                if (isLine) mesh = new (0, $dyjou.LineSegments)(buffergeometry, createdMaterials[0]);\n                else if (isPoints) mesh = new (0, $dyjou.Points)(buffergeometry, createdMaterials[0]);\n                else mesh = new (0, $ilwiq.Mesh)(buffergeometry, createdMaterials[0]);\n            }\n            mesh.name = object.name;\n            container.add(mesh);\n        }\n        else // if there is only the default parser state object with no geometry data, interpret data as point cloud\n        if (state.vertices.length > 0) {\n            const material = new (0, $dyjou.PointsMaterial)({\n                size: 1,\n                sizeAttenuation: false\n            });\n            const buffergeometry = new (0, $ilwiq.BufferGeometry)();\n            buffergeometry.setAttribute('position', new (0, $dyjou.Float32BufferAttribute)(state.vertices, 3));\n            if (state.colors.length > 0 && state.colors[0] !== undefined) {\n                buffergeometry.setAttribute('color', new (0, $dyjou.Float32BufferAttribute)(state.colors, 3));\n                material.vertexColors = true;\n            }\n            const points = new (0, $dyjou.Points)(buffergeometry, material);\n            container.add(points);\n        }\n        return container;\n    }\n}\n\n\nvar $df5cba5a1c4aad04$exports = {};\n$df5cba5a1c4aad04$exports = import.meta.resolve(\"jW7sf\");\n\n\n// De scene\nvar $ce889048c92e1840$var$scene = new $dyjou.Scene();\n$ce889048c92e1840$var$scene.background = new $ilwiq.Color('white');\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\nconst $ce889048c92e1840$var$container = document.getElementById('canvas-container');\nconst $ce889048c92e1840$var$renderer = new $ilwiq.WebGLRenderer({\n    antialias: true,\n    alpha: true,\n    powerPreference: \"high-performance\",\n    canvas: $ce889048c92e1840$var$container.querySelector('canvas')\n});\n$ce889048c92e1840$var$renderer.setSize($ce889048c92e1840$var$container.clientWidth, $ce889048c92e1840$var$container.clientHeight);\n$ce889048c92e1840$var$renderer.setPixelRatio(window.devicePixelRatio);\n// Update canvas bij resize:\nwindow.addEventListener('resize', ()=>{\n    const width = $ce889048c92e1840$var$container.clientWidth;\n    const height = $ce889048c92e1840$var$container.clientHeight;\n    $ce889048c92e1840$var$renderer.setSize(width, height);\n    $ce889048c92e1840$var$camera.aspect = width / height;\n    $ce889048c92e1840$var$camera.updateProjectionMatrix();\n});\n// Camera die de grootte van de container gebruikt\nvar $ce889048c92e1840$var$camera = new $ilwiq.PerspectiveCamera(70, $ce889048c92e1840$var$container.clientWidth / $ce889048c92e1840$var$container.clientHeight, 0.1, 1000);\n$ce889048c92e1840$var$camera.position.set(1, 1, 1);\n$ce889048c92e1840$var$camera.lookAt($ce889048c92e1840$var$scene.position);\n// OrbitControls instellen\nvar $ce889048c92e1840$var$controls = new (0, $5Rd1x.OrbitControls)($ce889048c92e1840$var$camera, $ce889048c92e1840$var$renderer.domElement);\n$ce889048c92e1840$var$controls.enableDamping = true; // Schakel demping in voor soepelere beweging\n$ce889048c92e1840$var$controls.dampingFactor = 0.25;\n$ce889048c92e1840$var$controls.screenSpacePanning = false;\n// Verlichting toevoegen\nconst $ce889048c92e1840$var$ambientLight = new $dyjou.AmbientLight(0xf6cd8b, 2.0);\nconst $ce889048c92e1840$var$light = new $dyjou.DirectionalLight(0xFFFFFF, 2.0);\n$ce889048c92e1840$var$light.position.set(2.5, 5, 5);\n$ce889048c92e1840$var$light.castShadow = true;\n$ce889048c92e1840$var$light.shadow.mapSize.width = 2048;\n$ce889048c92e1840$var$light.shadow.mapSize.height = 2048;\n$ce889048c92e1840$var$light.shadow.camera.near = 0.5;\n$ce889048c92e1840$var$light.shadow.camera.far = 50;\n$ce889048c92e1840$var$light.shadow.camera.left = -10;\n$ce889048c92e1840$var$light.shadow.camera.right = 10;\n$ce889048c92e1840$var$light.shadow.camera.top = 10;\n$ce889048c92e1840$var$light.shadow.camera.bottom = -10;\n$ce889048c92e1840$var$renderer.shadowMap.enabled = true;\n$ce889048c92e1840$var$renderer.shadowMap.type = $ilwiq.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\n$ce889048c92e1840$var$scene.add($ce889048c92e1840$var$ambientLight, $ce889048c92e1840$var$light);\n//schaduwvlak\nlet $ce889048c92e1840$var$ground;\n// Voeg een axis helper toe\n$ce889048c92e1840$var$scene.add(new $dyjou.AxesHelper(2));\n//materialen\nvar $ce889048c92e1840$var$PlaatMateriaal;\nconst $ce889048c92e1840$var$OSBColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0x1b7101\n});\nconst $ce889048c92e1840$var$BetonColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0x1f1716\n});\nconst $ce889048c92e1840$var$MultColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xccac74\n});\nconst $ce889048c92e1840$var$KeperColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xccac74\n});\nconst $ce889048c92e1840$var$edgeMaterial = new $dyjou.LineBasicMaterial({\n    color: 0x000000\n});\n// Functie om een object met randen te maken\nfunction $ce889048c92e1840$var$createBoxWithEdges(geometry, material) {\n    const mesh = new $ilwiq.Mesh(geometry, material);\n    mesh.castShadow = true;\n    const edges = new $dyjou.EdgesGeometry(geometry);\n    const line = new $dyjou.LineSegments(edges, $ce889048c92e1840$var$edgeMaterial);\n    mesh.add(line);\n    return mesh;\n}\n//onderdelen\nlet $ce889048c92e1840$var$Blokken = [];\nlet $ce889048c92e1840$var$BovenPlanken = [];\nlet $ce889048c92e1840$var$TussenPlanken = [];\nlet $ce889048c92e1840$var$DekPlanken = [];\nlet $ce889048c92e1840$var$Plaat;\nlet $ce889048c92e1840$var$Scharnieren = [];\nlet $ce889048c92e1840$var$Zijkanten = [];\nlet $ce889048c92e1840$var$Koppen = [];\nlet $ce889048c92e1840$var$Lengte;\nlet $ce889048c92e1840$var$Breedte;\nlet $ce889048c92e1840$var$AantalBodemPlanken;\nlet $ce889048c92e1840$var$AantalTussenPlanken;\nlet $ce889048c92e1840$var$AantalBovenPlanken;\nvar $ce889048c92e1840$var$OptiePlaat;\nvar $ce889048c92e1840$var$OptiePlanken;\nvar $ce889048c92e1840$var$Uitvoering;\nlet $ce889048c92e1840$var$PlaatDikte = 0.022;\nlet $ce889048c92e1840$var$PlankDikte;\nlet $ce889048c92e1840$var$PlankBreedte;\nlet $ce889048c92e1840$var$DekPlankHoogte = 0.022;\nlet $ce889048c92e1840$var$DekPlankBreedte = 0.100;\nlet $ce889048c92e1840$var$BodemPlankHoogte = 0.022;\nlet $ce889048c92e1840$var$BodemPlankBreedte = 0.100;\nlet $ce889048c92e1840$var$TussenPlankHoogte = 0.022;\nlet $ce889048c92e1840$var$TussenPlankBreedte = 0.100;\nlet $ce889048c92e1840$var$OpzetrandBreedte = 0.225;\nlet $ce889048c92e1840$var$OpzetrandDikte = 0.022;\nlet $ce889048c92e1840$var$BlokHoogte = 0.1;\nlet $ce889048c92e1840$var$BlokBreedte = 0.08;\nlet $ce889048c92e1840$var$offset;\nfunction $ce889048c92e1840$var$VariabelenInLezen() {\n    //input gebruiker ophalen\n    $ce889048c92e1840$var$Lengte = parseFloat(document.getElementById('LengteSlider').value) / 1000;\n    $ce889048c92e1840$var$Breedte = parseFloat(document.getElementById('BreedteSlider').value) / 1000;\n    $ce889048c92e1840$var$AantalBodemPlanken = parseFloat(document.getElementById(\"OnderlatInput\").value);\n    $ce889048c92e1840$var$AantalTussenPlanken = parseFloat(document.getElementById(\"TussenlatInput\").value);\n    $ce889048c92e1840$var$AantalBovenPlanken = parseFloat(document.getElementById('BovenPlankenInput').value);\n    $ce889048c92e1840$var$OptiePlaat = document.getElementById('Plaat').checked;\n    $ce889048c92e1840$var$OptiePlanken = document.getElementById('OptiePlanken').checked;\n    var MaxLengte = $ce889048c92e1840$var$AantalTussenPlanken * $ce889048c92e1840$var$BlokBreedte;\n    $ce889048c92e1840$var$Lengte = Math.max($ce889048c92e1840$var$Lengte, MaxLengte);\n    if ($ce889048c92e1840$var$OptiePlanken == true) var MaxBreedte = $ce889048c92e1840$var$AantalBovenPlanken * $ce889048c92e1840$var$DekPlankBreedte;\n    else MaxBreedte = $ce889048c92e1840$var$AantalBodemPlanken * $ce889048c92e1840$var$BodemPlankBreedte;\n    $ce889048c92e1840$var$Breedte = Math.max($ce889048c92e1840$var$Breedte, MaxBreedte);\n    document.getElementById(\"BreedteInput\").value = ($ce889048c92e1840$var$Breedte * 1000).toFixed(0);\n    document.getElementById(\"LengteInput\").value = ($ce889048c92e1840$var$Lengte * 1000).toFixed(0);\n}\nfunction $ce889048c92e1840$var$VerwijderOnderdelen() {\n    // Eerst verwijderen we de oude onderdelen\n    $ce889048c92e1840$var$BovenPlanken.forEach((plank)=>$ce889048c92e1840$var$scene.remove(plank));\n    $ce889048c92e1840$var$TussenPlanken.forEach((plank)=>$ce889048c92e1840$var$scene.remove(plank));\n    $ce889048c92e1840$var$DekPlanken.forEach((plank)=>$ce889048c92e1840$var$scene.remove(plank));\n    $ce889048c92e1840$var$Blokken.forEach((blok)=>$ce889048c92e1840$var$scene.remove(blok));\n    $ce889048c92e1840$var$Scharnieren.forEach((scharnier)=>$ce889048c92e1840$var$scene.remove(scharnier));\n    $ce889048c92e1840$var$Zijkanten.forEach((scharnier)=>$ce889048c92e1840$var$scene.remove(scharnier));\n    $ce889048c92e1840$var$Koppen.forEach((scharnier)=>$ce889048c92e1840$var$scene.remove(scharnier));\n    if ($ce889048c92e1840$var$Plaat) $ce889048c92e1840$var$scene.remove($ce889048c92e1840$var$Plaat);\n}\nfunction $ce889048c92e1840$var$OptiePlank() {\n    if (document.getElementById('Uitvoering').value == 'Light') {\n        $ce889048c92e1840$var$PlankDikte = 0.015;\n        $ce889048c92e1840$var$PlankBreedte = 0.075;\n        $ce889048c92e1840$var$BlokHoogte = 0.1;\n        $ce889048c92e1840$var$BlokBreedte = 0.08;\n        $ce889048c92e1840$var$PlaatDikte = 0.015;\n    } else if (document.getElementById('Uitvoering').value == 'Medium') {\n        $ce889048c92e1840$var$PlankDikte = 0.018;\n        $ce889048c92e1840$var$PlankBreedte = 0.1;\n        $ce889048c92e1840$var$BlokHoogte = 0.1;\n        $ce889048c92e1840$var$BlokBreedte = 0.1;\n        $ce889048c92e1840$var$PlaatDikte = 0.018;\n    } else if (document.getElementById('Uitvoering').value == 'Heavy') {\n        $ce889048c92e1840$var$PlankDikte = 0.022;\n        $ce889048c92e1840$var$PlankBreedte = 0.1;\n        $ce889048c92e1840$var$BlokHoogte = 0.1;\n        $ce889048c92e1840$var$BlokBreedte = 0.1;\n        $ce889048c92e1840$var$PlaatDikte = 0.021;\n    }\n    $ce889048c92e1840$var$DekPlankHoogte = $ce889048c92e1840$var$PlankDikte;\n    $ce889048c92e1840$var$DekPlankBreedte = $ce889048c92e1840$var$PlankBreedte;\n    $ce889048c92e1840$var$BodemPlankHoogte = $ce889048c92e1840$var$PlankDikte;\n    $ce889048c92e1840$var$BodemPlankBreedte = $ce889048c92e1840$var$PlankBreedte;\n    $ce889048c92e1840$var$TussenPlankHoogte = $ce889048c92e1840$var$PlankDikte;\n    $ce889048c92e1840$var$TussenPlankBreedte = $ce889048c92e1840$var$PlankBreedte;\n    let PlaatType = document.getElementById(\"PlaatTypeSelect\").value;\n    switch(PlaatType){\n        case \"osb\":\n            $ce889048c92e1840$var$PlaatDikte = 0.015;\n            $ce889048c92e1840$var$PlaatMateriaal = $ce889048c92e1840$var$OSBColorMat;\n            break;\n        case \"multiplex\":\n            $ce889048c92e1840$var$PlaatDikte = 0.018;\n            $ce889048c92e1840$var$PlaatMateriaal = $ce889048c92e1840$var$MultColorMat;\n            break;\n        case \"betonplex\":\n            $ce889048c92e1840$var$PlaatDikte = 0.018;\n            $ce889048c92e1840$var$PlaatMateriaal = $ce889048c92e1840$var$BetonColorMat;\n            break;\n    }\n}\nfunction $ce889048c92e1840$var$Bodem_GEN() {\n    //---------------Onderste Planken generenen---------------------------\n    let startX = -($ce889048c92e1840$var$Breedte - $ce889048c92e1840$var$BodemPlankBreedte) / 2;\n    let spacingX = ($ce889048c92e1840$var$Breedte - $ce889048c92e1840$var$BodemPlankBreedte) / ($ce889048c92e1840$var$AantalBodemPlanken - 1);\n    for(let i = 0; i < $ce889048c92e1840$var$AantalBodemPlanken; i++){\n        let xPos = startX + i * spacingX;\n        let BovenPlank = $ce889048c92e1840$var$createBoxWithEdges(new $ilwiq.BoxGeometry($ce889048c92e1840$var$BodemPlankBreedte, $ce889048c92e1840$var$BodemPlankHoogte, $ce889048c92e1840$var$Lengte), $ce889048c92e1840$var$KeperColorMat);\n        BovenPlank.position.set(xPos, $ce889048c92e1840$var$BodemPlankHoogte / 2, 0);\n        $ce889048c92e1840$var$scene.add(BovenPlank);\n        $ce889048c92e1840$var$BovenPlanken.push(BovenPlank);\n    }\n}\nfunction $ce889048c92e1840$var$Blokken_GEN() {\n    //-----------------Blokken genereren op een grid---------------------\n    let startX = -($ce889048c92e1840$var$Breedte - $ce889048c92e1840$var$BlokBreedte) / 2;\n    let spacingX = ($ce889048c92e1840$var$Breedte - $ce889048c92e1840$var$BlokBreedte) / ($ce889048c92e1840$var$AantalBodemPlanken - 1);\n    let startZ = -($ce889048c92e1840$var$Lengte - $ce889048c92e1840$var$BlokBreedte) / 2;\n    let spacingZ = ($ce889048c92e1840$var$Lengte - $ce889048c92e1840$var$BlokBreedte) / ($ce889048c92e1840$var$AantalTussenPlanken - 1);\n    for(let i = 0; i < $ce889048c92e1840$var$AantalBodemPlanken; i++)for(let j = 0; j < $ce889048c92e1840$var$AantalTussenPlanken; j++){\n        let xPos = startX + i * spacingX;\n        let zPos = startZ + j * spacingZ;\n        let blok = $ce889048c92e1840$var$createBoxWithEdges(new $ilwiq.BoxGeometry($ce889048c92e1840$var$BlokBreedte, $ce889048c92e1840$var$BlokHoogte, $ce889048c92e1840$var$BlokBreedte), $ce889048c92e1840$var$KeperColorMat);\n        blok.position.set(xPos, $ce889048c92e1840$var$BodemPlankHoogte + $ce889048c92e1840$var$BlokHoogte / 2, zPos);\n        $ce889048c92e1840$var$scene.add(blok);\n        $ce889048c92e1840$var$Blokken.push(blok);\n    }\n}\nfunction $ce889048c92e1840$var$TussenPlanken_GEN() {\n    // TussenPlanken genereren\n    let startZ = -($ce889048c92e1840$var$Lengte - $ce889048c92e1840$var$TussenPlankBreedte) / 2;\n    let spacingZ = ($ce889048c92e1840$var$Lengte - $ce889048c92e1840$var$TussenPlankBreedte) / ($ce889048c92e1840$var$AantalTussenPlanken - 1);\n    for(let i = 0; i < $ce889048c92e1840$var$AantalTussenPlanken; i++){\n        let ZPos = startZ + i * spacingZ;\n        let TussenPlank = $ce889048c92e1840$var$createBoxWithEdges(new $ilwiq.BoxGeometry($ce889048c92e1840$var$Breedte, $ce889048c92e1840$var$TussenPlankHoogte, $ce889048c92e1840$var$TussenPlankBreedte), $ce889048c92e1840$var$KeperColorMat);\n        TussenPlank.position.set(0, $ce889048c92e1840$var$BlokHoogte + $ce889048c92e1840$var$BodemPlankHoogte + $ce889048c92e1840$var$TussenPlankHoogte / 2, ZPos);\n        $ce889048c92e1840$var$scene.add(TussenPlank);\n        $ce889048c92e1840$var$TussenPlanken.push(TussenPlank);\n    }\n}\nfunction $ce889048c92e1840$var$Dek_GEN() {\n    //*****************plaat als dek***********************\n    if ($ce889048c92e1840$var$OptiePlaat == true) {\n        $ce889048c92e1840$var$Plaat = $ce889048c92e1840$var$createBoxWithEdges(new $ilwiq.BoxGeometry($ce889048c92e1840$var$Breedte, $ce889048c92e1840$var$PlaatDikte, $ce889048c92e1840$var$Lengte), $ce889048c92e1840$var$PlaatMateriaal);\n        // Positioneren onder de kist\n        $ce889048c92e1840$var$Plaat.position.set(0, $ce889048c92e1840$var$BlokHoogte + $ce889048c92e1840$var$TussenPlankHoogte + $ce889048c92e1840$var$BodemPlankHoogte + $ce889048c92e1840$var$PlaatDikte / 2, 0);\n        // Toevoegen aan de scene en de array\n        $ce889048c92e1840$var$scene.add($ce889048c92e1840$var$Plaat);\n    //************spreiding van aantal planken over dek************\n    } else if ($ce889048c92e1840$var$OptiePlanken == true) {\n        let startZ = -($ce889048c92e1840$var$Breedte - $ce889048c92e1840$var$DekPlankBreedte) / 2;\n        let endZ = ($ce889048c92e1840$var$Breedte - $ce889048c92e1840$var$DekPlankBreedte) / 2;\n        const beschikbareLengte = endZ - startZ;\n        const spacing = $ce889048c92e1840$var$AantalBovenPlanken > 1 ? beschikbareLengte / ($ce889048c92e1840$var$AantalBovenPlanken - 1) : 0;\n        for(let i = 0; i < $ce889048c92e1840$var$AantalBovenPlanken; i++){\n            let zPos = startZ + i * spacing;\n            let DekPlank = $ce889048c92e1840$var$createBoxWithEdges(new $ilwiq.BoxGeometry($ce889048c92e1840$var$DekPlankBreedte, $ce889048c92e1840$var$DekPlankHoogte, $ce889048c92e1840$var$Lengte), $ce889048c92e1840$var$KeperColorMat);\n            // Positioneren onder de kist\n            DekPlank.position.set(zPos, $ce889048c92e1840$var$BlokHoogte + $ce889048c92e1840$var$BodemPlankHoogte + $ce889048c92e1840$var$TussenPlankHoogte + $ce889048c92e1840$var$DekPlankHoogte / 2, 0);\n            // Toevoegen aan de scene en de array\n            $ce889048c92e1840$var$scene.add(DekPlank);\n            $ce889048c92e1840$var$DekPlanken.push(DekPlank);\n        }\n    }\n}\nfunction $ce889048c92e1840$var$ImportScharnier() {\n    for(let i = 0; i < 4; i++){\n        const loader = new (0, $688db8e5a5d67801$export$7ae31604ad04b4a7)();\n        $ce889048c92e1840$var$offset = 0.0325;\n        const positions = [\n            [\n                -$ce889048c92e1840$var$Breedte / 2 + $ce889048c92e1840$var$offset,\n                0.25,\n                -$ce889048c92e1840$var$Lengte / 2 + $ce889048c92e1840$var$offset\n            ],\n            [\n                -$ce889048c92e1840$var$Breedte / 2 + $ce889048c92e1840$var$offset,\n                0.25,\n                $ce889048c92e1840$var$Lengte / 2 - $ce889048c92e1840$var$offset\n            ],\n            [\n                $ce889048c92e1840$var$Breedte / 2 - $ce889048c92e1840$var$offset,\n                0.25,\n                $ce889048c92e1840$var$Lengte / 2 - $ce889048c92e1840$var$offset\n            ],\n            [\n                $ce889048c92e1840$var$Breedte / 2 - $ce889048c92e1840$var$offset,\n                0.25,\n                -$ce889048c92e1840$var$Lengte / 2 + $ce889048c92e1840$var$offset\n            ]\n        ];\n        loader.load((0, (/*@__PURE__*/$parcel$interopDefault($df5cba5a1c4aad04$exports))), (object)=>{\n            object.rotation.y = i * Math.PI / 2;\n            object.scale.setScalar(1 / 80);\n            // 2. Bereken bounding box en centreer\n            const box = new $dyjou.Box3().setFromObject(object);\n            const center = new $ilwiq.Vector3();\n            box.getCenter(center);\n            object.position.sub(center); // verplaats model zodat center op (0,0,0) zit\n            // 4. Verplaats naar gewenste locatie\n            const [x, y, z] = positions[i];\n            object.position.add(new $ilwiq.Vector3(x, y, z));\n            // 5. Voeg toe aan scene\n            $ce889048c92e1840$var$scene.add(object);\n            $ce889048c92e1840$var$Scharnieren.push(object);\n        });\n    }\n}\nfunction $ce889048c92e1840$var$Zijkanten_GEN() {\n    for (let richting of [\n        1,\n        -1\n    ]){\n        let Zijkant = $ce889048c92e1840$var$createBoxWithEdges(new $ilwiq.BoxGeometry($ce889048c92e1840$var$OpzetrandDikte, $ce889048c92e1840$var$OpzetrandBreedte, $ce889048c92e1840$var$Lengte - 2 * $ce889048c92e1840$var$offset), $ce889048c92e1840$var$KeperColorMat);\n        let Ypos = $ce889048c92e1840$var$BodemPlankHoogte + $ce889048c92e1840$var$BlokHoogte + $ce889048c92e1840$var$TussenPlankHoogte + $ce889048c92e1840$var$DekPlankHoogte + $ce889048c92e1840$var$OpzetrandBreedte / 2;\n        Zijkant.position.set(richting * ($ce889048c92e1840$var$Breedte / 2 - $ce889048c92e1840$var$OpzetrandDikte / 2), Ypos + 0.001, 0);\n        $ce889048c92e1840$var$scene.add(Zijkant);\n        $ce889048c92e1840$var$Zijkanten.push(Zijkant);\n    }\n}\nfunction $ce889048c92e1840$var$Koppen_GEN() {\n    for (let richting of [\n        1,\n        -1\n    ]){\n        let Kop = $ce889048c92e1840$var$createBoxWithEdges(new $ilwiq.BoxGeometry($ce889048c92e1840$var$Breedte - 2 * $ce889048c92e1840$var$offset, $ce889048c92e1840$var$OpzetrandBreedte, $ce889048c92e1840$var$OpzetrandDikte), $ce889048c92e1840$var$KeperColorMat);\n        let Ypos = $ce889048c92e1840$var$BodemPlankHoogte + $ce889048c92e1840$var$BlokHoogte + $ce889048c92e1840$var$TussenPlankHoogte + $ce889048c92e1840$var$DekPlankHoogte + $ce889048c92e1840$var$OpzetrandBreedte / 2;\n        Kop.position.set(0, Ypos + 0.001, richting * ($ce889048c92e1840$var$Lengte / 2 - $ce889048c92e1840$var$OpzetrandDikte / 2));\n        $ce889048c92e1840$var$scene.add(Kop);\n        $ce889048c92e1840$var$Koppen.push(Kop);\n    }\n}\n//-----------------schaduwvlak toevoegen------------------------\nif ($ce889048c92e1840$var$ground) $ce889048c92e1840$var$scene.remove($ce889048c92e1840$var$ground);\n$ce889048c92e1840$var$ground = new $ilwiq.Mesh(new $ilwiq.PlaneGeometry(30, 30), new $dyjou.ShadowMaterial({\n    color: 0xD3D3D3\n}));\n$ce889048c92e1840$var$ground.rotation.x = -Math.PI / 2;\n$ce889048c92e1840$var$ground.receiveShadow = true;\n$ce889048c92e1840$var$ground.position.y = -$ce889048c92e1840$var$BodemPlankHoogte / 2;\n$ce889048c92e1840$var$scene.add($ce889048c92e1840$var$ground);\nfunction $ce889048c92e1840$var$UpdateModel() {\n    $ce889048c92e1840$var$VariabelenInLezen();\n    $ce889048c92e1840$var$OptiePlank();\n    $ce889048c92e1840$var$VerwijderOnderdelen();\n    $ce889048c92e1840$var$Bodem_GEN();\n    $ce889048c92e1840$var$Blokken_GEN();\n    $ce889048c92e1840$var$TussenPlanken_GEN();\n    $ce889048c92e1840$var$Dek_GEN();\n    $ce889048c92e1840$var$ImportScharnier();\n    $ce889048c92e1840$var$Zijkanten_GEN();\n    $ce889048c92e1840$var$Koppen_GEN();\n}\n//\nfunction $ce889048c92e1840$var$animate() {\n    requestAnimationFrame($ce889048c92e1840$var$animate);\n    $ce889048c92e1840$var$controls.update();\n    $ce889048c92e1840$var$renderer.render($ce889048c92e1840$var$scene, $ce889048c92e1840$var$camera);\n}\n$ce889048c92e1840$var$animate();\n//-------------kist updaten bij aanpassing-----------\nfunction $ce889048c92e1840$var$setupEventListeners() {\n    const elements = document.querySelectorAll(\"input, select, textarea\");\n    elements.forEach((el)=>{\n        if (el.tagName === \"INPUT\") {\n            if (el.type === \"range\") // Sliders live update bij input\n            el.addEventListener(\"input\", $ce889048c92e1840$var$UpdateModel);\n            else if (el.type === \"text\" || el.type === \"number\") {\n                // Tekst/nummer: update bij blur of Enter\n                el.addEventListener(\"blur\", $ce889048c92e1840$var$UpdateModel);\n                el.addEventListener(\"keydown\", (e)=>{\n                    if (e.key === \"Enter\") $ce889048c92e1840$var$UpdateModel();\n                });\n            } else if (el.type === \"checkbox\") // Checkbox update bij change\n            el.addEventListener(\"change\", $ce889048c92e1840$var$UpdateModel);\n        } else if (el.tagName === \"SELECT\") // Select update bij change\n        el.addEventListener(\"change\", $ce889048c92e1840$var$UpdateModel);\n    });\n}\n$ce889048c92e1840$var$UpdateModel();\n// Start eventlisteners\n$ce889048c92e1840$var$setupEventListeners();\n\n\n//# sourceMappingURL=OpzetRand.93639d92.js.map\n","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\r\nimport OpzetOBJ from '../assets/Opzet.obj'; // ✅ dit vertelt Parcel om het bestand te bundelen\r\n\r\n\r\n\r\n\r\n// De scene\r\nvar scene = new THREE.Scene();\r\nscene.background = new THREE.Color('white');\r\n\r\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\r\nconst container = document.getElementById('canvas-container');\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true, powerPreference: \"high-performance\",  canvas: container.querySelector('canvas') });\r\nrenderer.setSize(container.clientWidth, container.clientHeight);\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n// Update canvas bij resize:\r\nwindow.addEventListener('resize', () => {\r\n  const width = container.clientWidth;\r\n  const height = container.clientHeight;\r\n  renderer.setSize(width, height);\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n});\r\n\r\n// Camera die de grootte van de container gebruikt\r\nvar camera = new THREE.PerspectiveCamera(\r\n  70,\r\n  container.clientWidth / container.clientHeight,\r\n  0.1,\r\n  1000\r\n);\r\ncamera.position.set(1,1,1);\r\ncamera.lookAt(scene.position);\r\n\r\n\r\n\r\n\r\n// OrbitControls instellen\r\nvar controls = new OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true; // Schakel demping in voor soepelere beweging\r\ncontrols.dampingFactor = 0.25;\r\ncontrols.screenSpacePanning = false;\r\n\r\n\r\n// Verlichting toevoegen\r\nconst ambientLight = new THREE.AmbientLight(0xf6cd8b, 2.0);\r\nconst light = new THREE.DirectionalLight(0xFFFFFF, 2.0);\r\nlight.position.set(2.5, 5, 5);\r\nlight.castShadow = true;\r\nlight.shadow.mapSize.width = 2048;\r\nlight.shadow.mapSize.height = 2048;\r\nlight.shadow.camera.near = 0.5;\r\nlight.shadow.camera.far = 50;\r\nlight.shadow.camera.left = -10;\r\nlight.shadow.camera.right = 10;\r\nlight.shadow.camera.top = 10;\r\nlight.shadow.camera.bottom = -10;\r\nrenderer.shadowMap.enabled = true;\r\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\r\nscene.add(ambientLight, light);\r\n\r\n//schaduwvlak\r\nlet ground;\r\n\r\n// Voeg een axis helper toe\r\nscene.add(new THREE.AxesHelper(2));\r\n\r\n//materialen\r\nvar PlaatMateriaal;\r\nconst OSBColorMat = new THREE.MeshStandardMaterial({ color: 0x1b7101 });\r\nconst BetonColorMat = new THREE.MeshStandardMaterial({ color: 0x1f1716 });\r\nconst MultColorMat = new THREE.MeshStandardMaterial({ color: 0xccac74 });\r\n\r\nconst KeperColorMat = new THREE.MeshStandardMaterial({ color: 0xccac74 });\r\n\r\nconst edgeMaterial = new THREE.LineBasicMaterial({ color: 0x000000 });\r\n\r\n\r\n// Functie om een object met randen te maken\r\nfunction createBoxWithEdges(geometry, material) {\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.castShadow = true;\r\n    const edges = new THREE.EdgesGeometry(geometry);\r\n    const line = new THREE.LineSegments(edges, edgeMaterial);\r\n    mesh.add(line);\r\n    return mesh;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//onderdelen\r\nlet Blokken= [];\r\nlet BovenPlanken= [];\r\nlet TussenPlanken= [];\r\nlet DekPlanken= [];\r\nlet Plaat;\r\nlet Scharnieren = [];\r\nlet Zijkanten = [];\r\nlet Koppen = [];\r\n\r\nlet Lengte;\r\nlet Breedte;\r\nlet AantalBodemPlanken;\r\nlet AantalTussenPlanken;\r\nlet AantalBovenPlanken;\r\n\r\n\r\nvar OptiePlaat;\r\nvar OptiePlanken;\r\n\r\nvar Uitvoering;\r\n\r\nlet PlaatDikte = 0.022;\r\n\r\nlet PlankDikte;\r\nlet PlankBreedte;\r\n\r\nlet DekPlankHoogte = 0.022;\r\nlet DekPlankBreedte = 0.100;\r\n\r\nlet BodemPlankHoogte = 0.022;\r\nlet BodemPlankBreedte = 0.100;\r\n\r\nlet TussenPlankHoogte = 0.022;\r\nlet TussenPlankBreedte = 0.100;\r\n\r\nlet OpzetrandBreedte = 0.225;\r\nlet OpzetrandDikte =0.022;\r\n\r\nlet\tBlokHoogte = 0.1;\r\nlet\tBlokBreedte = 0.08;\r\nlet offset;\r\n\r\nfunction VariabelenInLezen(){\r\n //input gebruiker ophalen\r\n Lengte = parseFloat(document.getElementById('LengteSlider').value) / 1000;\r\n Breedte = parseFloat(document.getElementById('BreedteSlider').value) / 1000;\r\n AantalBodemPlanken = parseFloat(document.getElementById(\"OnderlatInput\").value);\r\n AantalTussenPlanken = parseFloat(document.getElementById(\"TussenlatInput\").value);\r\n AantalBovenPlanken = parseFloat(document.getElementById('BovenPlankenInput').value);\r\n\r\n\r\nOptiePlaat = document.getElementById('Plaat').checked;\r\nOptiePlanken = document.getElementById('OptiePlanken').checked;\r\n\r\n var MaxLengte = (AantalTussenPlanken*BlokBreedte);\r\nLengte = Math.max(Lengte,MaxLengte);\r\n\r\n\r\nif (OptiePlanken == true){\r\n    var MaxBreedte = AantalBovenPlanken*DekPlankBreedte;\r\n}else {\r\n    MaxBreedte = AantalBodemPlanken*BodemPlankBreedte\r\n}\r\n\r\nBreedte = Math.max(Breedte,MaxBreedte);\r\n\r\n        \r\n\r\ndocument.getElementById(\"BreedteInput\").value = (Breedte*1000).toFixed(0);;\r\ndocument.getElementById(\"LengteInput\").value = (Lengte*1000).toFixed(0);;\r\n\r\n}\r\n\r\n\r\n\r\nfunction VerwijderOnderdelen(){\r\n// Eerst verwijderen we de oude onderdelen\r\nBovenPlanken.forEach(plank => scene.remove(plank));\r\nTussenPlanken.forEach(plank => scene.remove(plank));\r\nDekPlanken.forEach(plank => scene.remove(plank));\r\nBlokken.forEach(blok => scene.remove(blok));\r\nScharnieren.forEach(scharnier =>scene.remove(scharnier));\r\nZijkanten.forEach(scharnier =>scene.remove(scharnier));\r\nKoppen.forEach(scharnier =>scene.remove(scharnier));\r\n\r\nif (Plaat) scene.remove(Plaat);\r\n}\r\n\r\nfunction OptiePlank(){\r\n\r\n\r\n    if (document.getElementById('Uitvoering').value == 'Light'){\r\n        PlankDikte=15/1000;\r\n        PlankBreedte=75/1000;\r\n        BlokHoogte = 0.1;\r\n        BlokBreedte = 0.08;\r\n        PlaatDikte = 0.015;\r\n        }\r\n    else if(document.getElementById('Uitvoering').value == 'Medium'){\r\n        PlankDikte=18/1000;\r\n        PlankBreedte=100/1000;\r\n        BlokHoogte = 0.1;\r\n        BlokBreedte = 0.1;\r\n        PlaatDikte = 0.018;\r\n        }\r\n    else if(document.getElementById('Uitvoering').value == 'Heavy'){\r\n        PlankDikte=22/1000;\r\n        PlankBreedte=100/1000;\r\n        BlokHoogte = 0.1;\r\n        BlokBreedte = 0.1;\r\n        PlaatDikte = 0.021\r\n        }  \r\n\r\n        DekPlankHoogte = PlankDikte;\r\n        DekPlankBreedte = PlankBreedte;\r\n        BodemPlankHoogte = PlankDikte;\r\n        BodemPlankBreedte = PlankBreedte;\r\n        TussenPlankHoogte = PlankDikte;\r\n        TussenPlankBreedte = PlankBreedte;\r\n\r\n    let PlaatType = document.getElementById(\"PlaatTypeSelect\").value;\r\n\r\n\r\n            switch (PlaatType) {\r\n  case \"osb\":\r\n    PlaatDikte = 0.015;\r\n    PlaatMateriaal = OSBColorMat;\r\n    break;\r\n  case \"multiplex\":\r\n    PlaatDikte = 0.018;\r\n    PlaatMateriaal = MultColorMat;\r\n    break;\r\n  case \"betonplex\":\r\n    PlaatDikte = 0.018;\r\n    PlaatMateriaal = BetonColorMat;\r\n    break;\r\n}\r\n\r\n}\r\n\r\nfunction Bodem_GEN(){\r\n//---------------Onderste Planken generenen---------------------------\r\nlet startX = -(Breedte - BodemPlankBreedte) / 2;\r\nlet spacingX = (Breedte - BodemPlankBreedte) / (AantalBodemPlanken - 1);\r\n\r\n\r\n\r\nfor (let i = 0; i < AantalBodemPlanken; i++) {\r\n    let xPos = startX + i * spacingX;\r\n    let BovenPlank = createBoxWithEdges(new THREE.BoxGeometry(BodemPlankBreedte, BodemPlankHoogte, Lengte), KeperColorMat);\r\n    BovenPlank.position.set(xPos,BodemPlankHoogte/2, 0);\r\n    scene.add(BovenPlank);\r\n    BovenPlanken.push(BovenPlank);\r\n}\r\n}\r\n\r\n\r\nfunction Blokken_GEN(){\r\n\r\n//-----------------Blokken genereren op een grid---------------------\r\nlet startX = -(Breedte - BlokBreedte) / 2;\r\nlet spacingX = (Breedte - BlokBreedte) / (AantalBodemPlanken - 1);\r\n\r\nlet startZ = -(Lengte - BlokBreedte) / 2;\r\nlet spacingZ = (Lengte - BlokBreedte) / (AantalTussenPlanken - 1);\r\n\r\n\r\nfor (let i = 0; i < AantalBodemPlanken; i++) {\r\n    for (let j = 0; j < AantalTussenPlanken; j++) {\r\n\r\n        let xPos = startX + i * spacingX;\r\n        let zPos = startZ + j * spacingZ;\r\n\r\n        let blok = createBoxWithEdges(new THREE.BoxGeometry(BlokBreedte, BlokHoogte, BlokBreedte), KeperColorMat);\r\n        blok.position.set(xPos, BodemPlankHoogte + BlokHoogte / 2, zPos);\r\n        scene.add(blok);\r\n        Blokken.push(blok);\r\n    }\r\n}\r\n}\r\n\r\nfunction TussenPlanken_GEN(){\r\n// TussenPlanken genereren\r\n\r\nlet startZ = - (Lengte - TussenPlankBreedte)/2\r\n\r\nlet spacingZ = (Lengte - TussenPlankBreedte) / (AantalTussenPlanken - 1);\r\n\r\n\r\nfor (let i = 0; i < AantalTussenPlanken; i++) {\r\n    let ZPos = startZ + i * spacingZ;\r\n    let TussenPlank = createBoxWithEdges(new THREE.BoxGeometry(Breedte, TussenPlankHoogte, TussenPlankBreedte), KeperColorMat);\r\n    TussenPlank.position.set(0, BlokHoogte + BodemPlankHoogte + TussenPlankHoogte/2, ZPos);\r\n    scene.add(TussenPlank);\r\n    TussenPlanken.push(TussenPlank);\r\n}\r\n}\r\n\r\nfunction Dek_GEN(){\r\n\r\n//*****************plaat als dek***********************\r\n  if(OptiePlaat == true){\r\n\r\n\r\n      Plaat = createBoxWithEdges(new THREE.BoxGeometry(Breedte,PlaatDikte,Lengte), PlaatMateriaal);\r\n  \r\n      // Positioneren onder de kist\r\n      Plaat.position.set(0, BlokHoogte + TussenPlankHoogte + BodemPlankHoogte + PlaatDikte/2,0);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(Plaat);\r\n   \r\n  \r\n\r\n//************spreiding van aantal planken over dek************\r\n} else if(OptiePlanken == true){\r\n\r\n  \r\n    let startZ = -(Breedte- DekPlankBreedte) / 2;\r\n    let endZ = (Breedte- DekPlankBreedte) / 2;\r\n\r\n\r\n    const beschikbareLengte = endZ - startZ;\r\n    const spacing = (AantalBovenPlanken > 1) ? beschikbareLengte / (AantalBovenPlanken - 1) : 0;\r\n    \r\n  \r\n    for (let i = 0; i < AantalBovenPlanken; i++) {\r\n        let zPos = startZ + i * spacing;\r\n    \r\n        let DekPlank = createBoxWithEdges(new THREE.BoxGeometry(DekPlankBreedte, DekPlankHoogte, Lengte), KeperColorMat);\r\n    \r\n        // Positioneren onder de kist\r\n        DekPlank.position.set(zPos,BlokHoogte + BodemPlankHoogte + TussenPlankHoogte + DekPlankHoogte/2, 0);\r\n    \r\n        // Toevoegen aan de scene en de array\r\n        scene.add(DekPlank);\r\n        DekPlanken.push(DekPlank);\r\n    }\r\n}\r\n}\r\n\r\n\r\nfunction ImportScharnier(){\r\n\r\nfor (let i=0; i<4;i++){\r\n\r\n  const loader = new OBJLoader();\r\n  offset = 32.5/1000;\r\n \r\n\r\nconst positions = [\r\n  [-Breedte/2+offset, 0.25, -Lengte/2+offset],\r\n  [-Breedte/2+offset, 0.25, Lengte/2-offset],\r\n  [Breedte/2-offset, 0.25, Lengte/2-offset],\r\n  [Breedte/2-offset, 0.25, -Lengte/2+offset],\r\n\r\n];\r\n\r\n  loader.load(OpzetOBJ, (object) => {\r\n      object.rotation.y = i*Math.PI / 2;\r\n\r\n\r\nobject.scale.setScalar(1 / 80);\r\n\r\n  // 2. Bereken bounding box en centreer\r\n  const box = new THREE.Box3().setFromObject(object);\r\n  const center = new THREE.Vector3();\r\n  box.getCenter(center);\r\n  object.position.sub(center); // verplaats model zodat center op (0,0,0) zit\r\n\r\n\r\n  // 4. Verplaats naar gewenste locatie\r\n  const [x, y, z] = positions[i];\r\n  object.position.add(new THREE.Vector3(x, y, z));\r\n\r\n  // 5. Voeg toe aan scene\r\n  scene.add(object);\r\n  Scharnieren.push(object);\r\n\r\n  });}\r\n}\r\n\r\nfunction Zijkanten_GEN(){\r\n   for (let richting of [1,-1]) { \r\n  let Zijkant = createBoxWithEdges(new THREE.BoxGeometry(OpzetrandDikte,OpzetrandBreedte,Lengte-2*offset),KeperColorMat);\r\n  \r\n  let Ypos= BodemPlankHoogte+BlokHoogte+TussenPlankHoogte+DekPlankHoogte+OpzetrandBreedte/2;\r\n  Zijkant.position.set(richting*(Breedte/2-OpzetrandDikte/2),Ypos+0.001,0);\r\n  scene.add(Zijkant);\r\n  Zijkanten.push(Zijkant);\r\n\r\n   }\r\n\r\n}\r\n\r\n\r\nfunction Koppen_GEN(){\r\n   for (let richting of [1,-1]) {\r\n  let Kop = createBoxWithEdges(new THREE.BoxGeometry(Breedte-2*offset,OpzetrandBreedte,OpzetrandDikte),KeperColorMat);\r\n  \r\n  let Ypos= BodemPlankHoogte+BlokHoogte+TussenPlankHoogte+DekPlankHoogte+OpzetrandBreedte/2;\r\n  Kop.position.set(0,Ypos+0.001,richting*(Lengte/2-OpzetrandDikte/2));\r\n  scene.add(Kop);\r\n  Koppen.push(Kop);\r\n\r\n   }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//-----------------schaduwvlak toevoegen------------------------\r\nif (ground) scene.remove(ground);\r\nground = new THREE.Mesh(new THREE.PlaneGeometry(30, 30), new THREE.ShadowMaterial({color: 0xD3D3D3}));\r\nground.rotation.x = -Math.PI / 2;\r\nground.receiveShadow = true;\r\nground.position.y = - BodemPlankHoogte/2;\r\nscene.add(ground);\r\n\r\n\r\nfunction UpdateModel(){\r\n\r\n\r\n    VariabelenInLezen();\r\n    OptiePlank();\r\n    VerwijderOnderdelen();\r\n\r\n    Bodem_GEN();\r\n    Blokken_GEN();\r\n    TussenPlanken_GEN();\r\n    Dek_GEN();\r\n    ImportScharnier();\r\n    Zijkanten_GEN();\r\n    Koppen_GEN();\r\n\r\n}\r\n//\r\nfunction animate() {\r\n    requestAnimationFrame(animate);\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n  }\r\n  animate();\r\n  \r\n  //-------------kist updaten bij aanpassing-----------\r\nfunction setupEventListeners() {\r\n  const elements = document.querySelectorAll(\"input, select, textarea\");\r\n\r\n  elements.forEach((el) => {\r\n    if (el.tagName === \"INPUT\") {\r\n      if (el.type === \"range\") {\r\n        // Sliders live update bij input\r\n        el.addEventListener(\"input\", UpdateModel);\r\n      } else if (el.type === \"text\" || el.type === \"number\") {\r\n        // Tekst/nummer: update bij blur of Enter\r\n        el.addEventListener(\"blur\", UpdateModel);\r\n        el.addEventListener(\"keydown\", (e) => {\r\n          if (e.key === \"Enter\") UpdateModel();\r\n        });\r\n      } else if (el.type === \"checkbox\") {\r\n        // Checkbox update bij change\r\n        el.addEventListener(\"change\", UpdateModel);\r\n      }\r\n    } else if (el.tagName === \"SELECT\") {\r\n      // Select update bij change\r\n      el.addEventListener(\"change\", UpdateModel);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n  \r\n  UpdateModel();\r\n  \r\n  // Start eventlisteners\r\n  setupEventListeners();\r\n\r\n\r\n","import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3,\n\tColor,\n\tSRGBColorSpace\n} from 'three';\n\n// o object_name | g group_name\nconst _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst _material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst _material_use_pattern = /^usemtl /;\n// usemap map_name\nconst _map_use_pattern = /^usemap /;\nconst _face_vertex_data_separator_pattern = /\\s+/;\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\nconst _cb = new Vector3();\n\nconst _color = new Color();\n\nfunction ParserState() {\n\n\tconst state = {\n\t\tobjects: [],\n\t\tobject: {},\n\n\t\tvertices: [],\n\t\tnormals: [],\n\t\tcolors: [],\n\t\tuvs: [],\n\n\t\tmaterials: {},\n\t\tmaterialLibraries: [],\n\n\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\tthis.object.name = name;\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t\tthis.object = {\n\t\t\t\tname: name || '',\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\tgeometry: {\n\t\t\t\t\tvertices: [],\n\t\t\t\t\tnormals: [],\n\t\t\t\t\tcolors: [],\n\t\t\t\t\tuvs: [],\n\t\t\t\t\thasUVIndices: false\n\t\t\t\t},\n\t\t\t\tmaterials: [],\n\t\t\t\tsmooth: true,\n\n\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\tconst previous = this._finalize( false );\n\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst material = {\n\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\tconst cloned = {\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t},\n\n\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t},\n\n\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Inherit previous objects material.\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\n\t\t\t\tdeclared.inherited = true;\n\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t}\n\n\t\t\tthis.objects.push( this.object );\n\n\t\t},\n\n\t\tfinalize: function () {\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t},\n\n\t\taddVertex: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddVertexPoint: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddVertexLine: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.normals;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\t_vA.fromArray( src, a );\n\t\t\t_vB.fromArray( src, b );\n\t\t\t_vC.fromArray( src, c );\n\n\t\t\t_cb.subVectors( _vC, _vB );\n\t\t\t_ab.subVectors( _vA, _vB );\n\t\t\t_cb.cross( _ab );\n\n\t\t\t_cb.normalize();\n\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\n\t\t},\n\n\t\taddColor: function ( a, b, c ) {\n\n\t\t\tconst src = this.colors;\n\t\t\tconst dst = this.object.geometry.colors;\n\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddUV: function ( a, b, c ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t},\n\n\t\taddDefaultUV: function () {\n\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\n\t\t},\n\n\t\taddUVLine: function ( a ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t},\n\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\n\n\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t// normals\n\n\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\tconst nLen = this.normals.length;\n\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t} else {\n\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t} else {\n\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\tthis.addDefaultUV();\n\n\t\t\t}\n\n\t\t},\n\n\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\tthis.addColor( index );\n\n\t\t\t}\n\n\t\t},\n\n\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\tconst vLen = this.vertices.length;\n\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t}\n\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tstate.startObject( '', false );\n\n\treturn state;\n\n}\n\n//\n\nclass OBJLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterials( materials ) {\n\n\t\tthis.materials = materials;\n\n\t\treturn this;\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst state = new ParserState();\n\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t}\n\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t}\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet result = [];\n\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\tconst line = lines[ i ].trimStart();\n\n\t\t\tif ( line.length === 0 ) continue;\n\n\t\t\tconst lineFirstChar = line.charAt( 0 );\n\n\t\t\t// @todo invoke passed in handler if any\n\t\t\tif ( lineFirstChar === '#' ) continue; // skip comments\n\n\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\tconst data = line.split( _face_vertex_data_separator_pattern );\n\n\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t_color.setRGB(\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] ),\n\t\t\t\t\t\t\t\tSRGBColorSpace\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tstate.colors.push( _color.r, _color.g, _color.b );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst vertexData = lineData.split( _face_vertex_data_separator_pattern );\n\t\t\t\tconst faceVertices = [];\n\n\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertex = vertexData[ j ];\n\n\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\tconst v1 = faceVertices[ 0 ];\n\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\tconst v2 = faceVertices[ j ];\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\tlet lineVertices = [];\n\t\t\t\tconst lineUVs = [];\n\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst pointData = lineData.split( ' ' );\n\n\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// o object_name\n\t\t\t\t// or\n\t\t\t\t// g group_name\n\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t// let name = result[ 0 ].slice( 1 ).trim();\n\t\t\t\tconst name = ( ' ' + result[ 0 ].slice( 1 ).trim() ).slice( 1 );\n\n\t\t\t\tstate.startObject( name );\n\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\n\n\t\t\t\t// material\n\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\n\n\t\t\t\t// mtl file\n\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\n\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t// smooth shading\n\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = state.object.currentMaterial();\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t} else {\n\n\t\t\t\t// Handle null terminated files without exception\n\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.finalize();\n\n\t\tconst container = new Group();\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\tif ( hasPrimitives === true ) {\n\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tconst object = state.objects[ i ];\n\t\t\t\tconst geometry = object.geometry;\n\t\t\t\tconst materials = object.materials;\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\n\t\t\t\tlet hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tconst createdMaterials = [];\n\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\tlet material = state.materials[ materialHash ];\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst points = new Points( buffergeometry, material );\n\t\t\t\tcontainer.add( points );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn container;\n\n\t}\n\n}\n\nexport { OBJLoader };\n","module.exports = __parcel__import__.meta.resolve(\"jW7sf\");"],"names":["$ce889048c92e1840$var$ground","$ce889048c92e1840$var$Plaat","$ce889048c92e1840$var$Lengte","$ce889048c92e1840$var$Breedte","$ce889048c92e1840$var$AantalBodemPlanken","$ce889048c92e1840$var$AantalTussenPlanken","$ce889048c92e1840$var$AantalBovenPlanken","$ce889048c92e1840$var$PlankDikte","$ce889048c92e1840$var$PlankBreedte","$ce889048c92e1840$var$offset","$ce889048c92e1840$var$PlaatMateriaal","$ce889048c92e1840$var$OptiePlaat","$ce889048c92e1840$var$OptiePlanken","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$dyjou","$ilwiq","$5Rd1x","$688db8e5a5d67801$var$_object_pattern","$688db8e5a5d67801$var$_material_library_pattern","$688db8e5a5d67801$var$_material_use_pattern","$688db8e5a5d67801$var$_map_use_pattern","$688db8e5a5d67801$var$_face_vertex_data_separator_pattern","$688db8e5a5d67801$var$_vA","Vector3","$688db8e5a5d67801$var$_vB","$688db8e5a5d67801$var$_vC","$688db8e5a5d67801$var$_ab","$688db8e5a5d67801$var$_cb","$688db8e5a5d67801$var$_color","Color","$688db8e5a5d67801$var$ParserState","state","objects","object","vertices","normals","colors","uvs","materials","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","undefined","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","fromArray","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","$688db8e5a5d67801$export$7ae31604ad04b4a7","Loader","constructor","manager","load","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setMaterials","indexOf","replace","lines","split","result","i","line","trimStart","lineFirstChar","charAt","data","parseFloat","setRGB","SRGBColorSpace","r","g","vertexData","lineData","slice","trim","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","Group","concat","hasPrimitives","mesh","isLine","isPoints","hasVertexColors","buffergeometry","BufferGeometry","setAttribute","Float32BufferAttribute","createdMaterials","miLen","sourceMaterial","materialHash","create","LineBasicMaterial","PointsMaterial","materialPoints","size","sizeAttenuation","Material","prototype","copy","color","map","materialLine","MeshPhongMaterial","flatShading","vertexColors","addGroup","LineSegments","Points","Mesh","add","points","$df5cba5a1c4aad04$exports","resolve","$ce889048c92e1840$var$scene","Scene","background","$ce889048c92e1840$var$container","document","getElementById","$ce889048c92e1840$var$renderer","WebGLRenderer","antialias","alpha","powerPreference","canvas","querySelector","setSize","clientWidth","clientHeight","setPixelRatio","window","devicePixelRatio","addEventListener","width","height","$ce889048c92e1840$var$camera","aspect","updateProjectionMatrix","PerspectiveCamera","position","set","lookAt","$ce889048c92e1840$var$controls","OrbitControls","domElement","enableDamping","dampingFactor","screenSpacePanning","$ce889048c92e1840$var$ambientLight","AmbientLight","$ce889048c92e1840$var$light","DirectionalLight","castShadow","shadow","mapSize","camera","near","far","left","right","top","bottom","shadowMap","enabled","PCFSoftShadowMap","AxesHelper","$ce889048c92e1840$var$OSBColorMat","MeshStandardMaterial","$ce889048c92e1840$var$BetonColorMat","$ce889048c92e1840$var$MultColorMat","$ce889048c92e1840$var$KeperColorMat","$ce889048c92e1840$var$edgeMaterial","$ce889048c92e1840$var$createBoxWithEdges","edges","EdgesGeometry","$ce889048c92e1840$var$Blokken","$ce889048c92e1840$var$BovenPlanken","$ce889048c92e1840$var$TussenPlanken","$ce889048c92e1840$var$DekPlanken","$ce889048c92e1840$var$Scharnieren","$ce889048c92e1840$var$Zijkanten","$ce889048c92e1840$var$Koppen","$ce889048c92e1840$var$PlaatDikte","$ce889048c92e1840$var$DekPlankHoogte","$ce889048c92e1840$var$DekPlankBreedte","$ce889048c92e1840$var$BodemPlankHoogte","$ce889048c92e1840$var$BodemPlankBreedte","$ce889048c92e1840$var$TussenPlankHoogte","$ce889048c92e1840$var$TussenPlankBreedte","$ce889048c92e1840$var$BlokHoogte","$ce889048c92e1840$var$BlokBreedte","$ce889048c92e1840$var$UpdateModel","checked","Math","max","MaxBreedte","toFixed","forEach","plank","remove","blok","scharnier","$ce889048c92e1840$var$Bodem_GEN","startX","spacingX","xPos","BovenPlank","BoxGeometry","$ce889048c92e1840$var$Blokken_GEN","startZ","spacingZ","zPos","$ce889048c92e1840$var$TussenPlanken_GEN","ZPos","TussenPlank","$ce889048c92e1840$var$Dek_GEN","endZ","spacing","beschikbareLengte","DekPlank","positions","__esModule","default","rotation","PI","scale","setScalar","box","Box3","setFromObject","center","getCenter","sub","richting","Zijkant","Ypos","$ce889048c92e1840$var$OpzetrandBreedte","$ce889048c92e1840$var$OpzetrandDikte","Kop","PlaneGeometry","ShadowMaterial","receiveShadow","$ce889048c92e1840$var$animate","requestAnimationFrame","update","render","elements","querySelectorAll","el","tagName","key"],"version":3,"file":"OpzetRand.93639d92.js.map"}