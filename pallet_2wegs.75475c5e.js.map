{"mappings":"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","sources":["<anon>","js/Pallet_2wegs.js"],"sourcesContent":["import \"./Massieve_kist.626d928d.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $dyjou = parcelRequire(\"dyjou\");\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $5Rd1x = parcelRequire(\"5Rd1x\");\n\n\n// De scene\nvar $7f19dac9f6690e80$var$scene = new $dyjou.Scene();\n$7f19dac9f6690e80$var$scene.background = new $ilwiq.Color('white');\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\nconst $7f19dac9f6690e80$var$container = document.getElementById('canvas-container');\nconst $7f19dac9f6690e80$var$renderer = new $ilwiq.WebGLRenderer({\n    antialias: true,\n    alpha: true,\n    powerPreference: \"high-performance\",\n    canvas: $7f19dac9f6690e80$var$container.querySelector('canvas')\n});\n$7f19dac9f6690e80$var$renderer.setSize($7f19dac9f6690e80$var$container.clientWidth, $7f19dac9f6690e80$var$container.clientHeight);\n$7f19dac9f6690e80$var$renderer.setPixelRatio(window.devicePixelRatio);\n// Update canvas bij resize:\nwindow.addEventListener('resize', ()=>{\n    const width = $7f19dac9f6690e80$var$container.clientWidth;\n    const height = $7f19dac9f6690e80$var$container.clientHeight;\n    $7f19dac9f6690e80$var$renderer.setSize(width, height);\n    $7f19dac9f6690e80$var$camera.aspect = width / height;\n    $7f19dac9f6690e80$var$camera.updateProjectionMatrix();\n});\n// Camera die de grootte van de container gebruikt\nvar $7f19dac9f6690e80$var$camera = new $ilwiq.PerspectiveCamera(70, $7f19dac9f6690e80$var$container.clientWidth / $7f19dac9f6690e80$var$container.clientHeight, 0.1, 1000);\n$7f19dac9f6690e80$var$camera.position.set(1.2, 1.2, 1.2);\n$7f19dac9f6690e80$var$camera.lookAt($7f19dac9f6690e80$var$scene.position);\n// OrbitControls instellen\nvar $7f19dac9f6690e80$var$controls = new (0, $5Rd1x.OrbitControls)($7f19dac9f6690e80$var$camera, $7f19dac9f6690e80$var$renderer.domElement);\n$7f19dac9f6690e80$var$controls.enableDamping = true; // Schakel demping in voor soepelere beweging\n$7f19dac9f6690e80$var$controls.dampingFactor = 0.25;\n$7f19dac9f6690e80$var$controls.screenSpacePanning = false;\n// Verlichting toevoegen\nconst $7f19dac9f6690e80$var$ambientLight = new $dyjou.AmbientLight(0xf6cd8b, 2.0);\nconst $7f19dac9f6690e80$var$light = new $dyjou.DirectionalLight(0xFFFFFF, 2.0);\n$7f19dac9f6690e80$var$light.position.set(2.5, 5, 5);\n$7f19dac9f6690e80$var$light.castShadow = true;\n$7f19dac9f6690e80$var$light.shadow.mapSize.width = 2048;\n$7f19dac9f6690e80$var$light.shadow.mapSize.height = 2048;\n$7f19dac9f6690e80$var$light.shadow.camera.near = 0.5;\n$7f19dac9f6690e80$var$light.shadow.camera.far = 50;\n$7f19dac9f6690e80$var$light.shadow.camera.left = -10;\n$7f19dac9f6690e80$var$light.shadow.camera.right = 10;\n$7f19dac9f6690e80$var$light.shadow.camera.top = 10;\n$7f19dac9f6690e80$var$light.shadow.camera.bottom = -10;\n$7f19dac9f6690e80$var$renderer.shadowMap.enabled = true;\n$7f19dac9f6690e80$var$renderer.shadowMap.type = $ilwiq.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\n$7f19dac9f6690e80$var$scene.add($7f19dac9f6690e80$var$ambientLight, $7f19dac9f6690e80$var$light);\n//schaduwvlak\nlet $7f19dac9f6690e80$var$ground;\n// Voeg een axis helper toe\n//scene.add(new THREE.AxesHelper(2));\n// Materialen\nvar $7f19dac9f6690e80$var$PlaatMateriaal;\nconst $7f19dac9f6690e80$var$OSBColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0x1b7101\n});\nconst $7f19dac9f6690e80$var$BetonColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0x1f1716\n});\nconst $7f19dac9f6690e80$var$MultColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xccac74\n});\nconst $7f19dac9f6690e80$var$KeperColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xccac74\n});\nconst $7f19dac9f6690e80$var$LatColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0x6d4c08\n});\nconst $7f19dac9f6690e80$var$edgeMaterial = new $dyjou.LineBasicMaterial({\n    color: 0x000000\n});\n// Functie om een object met randen te maken\nfunction $7f19dac9f6690e80$var$createBoxWithEdges(geometry, material) {\n    const mesh = new $ilwiq.Mesh(geometry, material);\n    mesh.castShadow = true;\n    const edges = new $dyjou.EdgesGeometry(geometry);\n    const line = new $dyjou.LineSegments(edges, $7f19dac9f6690e80$var$edgeMaterial);\n    mesh.add(line);\n    return mesh;\n}\n//onderdelen\nlet $7f19dac9f6690e80$var$Kepers = [];\nlet $7f19dac9f6690e80$var$DekPlanken = [];\nlet $7f19dac9f6690e80$var$BodemPlanken = [];\nlet $7f19dac9f6690e80$var$Platen = [];\nlet $7f19dac9f6690e80$var$Lengte;\nlet $7f19dac9f6690e80$var$Breedte;\nlet $7f19dac9f6690e80$var$AantalKepers;\nlet $7f19dac9f6690e80$var$AantalBodemPlanken;\nlet $7f19dac9f6690e80$var$AantalDekPlanken;\nvar $7f19dac9f6690e80$var$OptieDekPlaat;\nvar $7f19dac9f6690e80$var$OptieDekPlanken;\nvar $7f19dac9f6690e80$var$BodemOptiePlaat;\nvar $7f19dac9f6690e80$var$BodemOptiePlanken;\nlet $7f19dac9f6690e80$var$PlaatDikte = 0.022;\nlet $7f19dac9f6690e80$var$PlankDikte;\nlet $7f19dac9f6690e80$var$PlankBreedte;\nlet $7f19dac9f6690e80$var$DekPlankHoogte = 0.022;\nlet $7f19dac9f6690e80$var$DekPlankBreedte = 0.100;\nlet $7f19dac9f6690e80$var$BodemPlankHoogte = 0.022;\nlet $7f19dac9f6690e80$var$BodemPlankBreedte = 0.100;\nlet $7f19dac9f6690e80$var$KeperHoogte = 0.08;\nlet $7f19dac9f6690e80$var$KeperBreedte = 0.08;\nfunction $7f19dac9f6690e80$var$VariabelenInLezen() {\n    //input gebruiker ophalen\n    $7f19dac9f6690e80$var$Lengte = parseFloat(document.getElementById('LengteSlider').value) / 1000;\n    $7f19dac9f6690e80$var$Breedte = parseFloat(document.getElementById('BreedteSlider').value) / 1000;\n    $7f19dac9f6690e80$var$AantalKepers = parseFloat(document.getElementById(\"KeperAantalInput\").value);\n    $7f19dac9f6690e80$var$AantalBodemPlanken = parseFloat(document.getElementById(\"BodemPlankenInput\").value);\n    $7f19dac9f6690e80$var$AantalDekPlanken = parseFloat(document.getElementById(\"DekPlankenInput\").value);\n    $7f19dac9f6690e80$var$OptieDekPlaat = document.getElementById(\"OptieDekPlaat\").checked;\n    $7f19dac9f6690e80$var$OptieDekPlanken = document.getElementById(\"OptieDekPlanken\").checked;\n    $7f19dac9f6690e80$var$BodemOptiePlaat = document.getElementById(\"OptieBodemPlaat\").checked;\n    $7f19dac9f6690e80$var$BodemOptiePlanken = document.getElementById(\"OptieBodemPlanken\").checked;\n    var MaxBreedte = $7f19dac9f6690e80$var$AantalBodemPlanken * $7f19dac9f6690e80$var$BodemPlankBreedte;\n    var MaxBreedte2 = $7f19dac9f6690e80$var$AantalDekPlanken * $7f19dac9f6690e80$var$DekPlankBreedte;\n    if ($7f19dac9f6690e80$var$OptieDekPlanken || $7f19dac9f6690e80$var$BodemOptiePlanken == true) $7f19dac9f6690e80$var$Breedte = Math.max($7f19dac9f6690e80$var$Breedte, MaxBreedte, MaxBreedte2);\n    var MaxLengte = $7f19dac9f6690e80$var$KeperBreedte * $7f19dac9f6690e80$var$AantalKepers;\n    $7f19dac9f6690e80$var$Lengte = Math.max($7f19dac9f6690e80$var$Lengte, MaxLengte);\n    document.getElementById(\"BreedteInput\").value = ($7f19dac9f6690e80$var$Breedte * 1000).toFixed(0);\n    document.getElementById(\"LengteInput\").value = ($7f19dac9f6690e80$var$Lengte * 1000).toFixed(0);\n}\nfunction $7f19dac9f6690e80$var$OptiePlank() {\n    if (document.getElementById('Uitvoering').value == 'Light') {\n        $7f19dac9f6690e80$var$PlankDikte = 0.015;\n        $7f19dac9f6690e80$var$PlankBreedte = 0.075;\n        $7f19dac9f6690e80$var$KeperHoogte = 0.1;\n        $7f19dac9f6690e80$var$KeperBreedte = 0.08;\n        $7f19dac9f6690e80$var$PlaatDikte = 0.015;\n    } else if (document.getElementById('Uitvoering').value == 'Medium') {\n        $7f19dac9f6690e80$var$PlankDikte = 0.018;\n        $7f19dac9f6690e80$var$PlankBreedte = 0.1;\n        $7f19dac9f6690e80$var$KeperHoogte = 0.1;\n        $7f19dac9f6690e80$var$KeperBreedte = 0.1;\n        $7f19dac9f6690e80$var$PlaatDikte = 0.018;\n    } else if (document.getElementById('Uitvoering').value == 'Heavy') {\n        $7f19dac9f6690e80$var$PlankDikte = 0.022;\n        $7f19dac9f6690e80$var$PlankBreedte = 0.1;\n        $7f19dac9f6690e80$var$KeperHoogte = 0.1;\n        $7f19dac9f6690e80$var$KeperBreedte = 0.1;\n        $7f19dac9f6690e80$var$PlaatDikte = 0.021;\n    }\n    $7f19dac9f6690e80$var$DekPlankHoogte = $7f19dac9f6690e80$var$PlankDikte;\n    $7f19dac9f6690e80$var$DekPlankBreedte = $7f19dac9f6690e80$var$PlankBreedte;\n    $7f19dac9f6690e80$var$BodemPlankHoogte = $7f19dac9f6690e80$var$PlankDikte;\n    $7f19dac9f6690e80$var$BodemPlankBreedte = $7f19dac9f6690e80$var$PlankBreedte;\n    $7f19dac9f6690e80$var$KeperBreedte;\n    $7f19dac9f6690e80$var$KeperHoogte;\n    let PlaatType = document.getElementById(\"PlaatTypeSelect\").value;\n    switch(PlaatType){\n        case \"osb\":\n            $7f19dac9f6690e80$var$PlaatDikte = 0.015;\n            $7f19dac9f6690e80$var$PlaatMateriaal = $7f19dac9f6690e80$var$OSBColorMat;\n            break;\n        case \"multiplex\":\n            $7f19dac9f6690e80$var$PlaatDikte = 0.018;\n            $7f19dac9f6690e80$var$PlaatMateriaal = $7f19dac9f6690e80$var$MultColorMat;\n            break;\n        case \"betonplex\":\n            $7f19dac9f6690e80$var$PlaatDikte = 0.018;\n            $7f19dac9f6690e80$var$PlaatMateriaal = $7f19dac9f6690e80$var$BetonColorMat;\n            break;\n    }\n}\nfunction $7f19dac9f6690e80$var$VerwijderOnderdelen() {\n    // Eerst verwijderen we de oude onderdelen\n    $7f19dac9f6690e80$var$DekPlanken.forEach((plank)=>$7f19dac9f6690e80$var$scene.remove(plank));\n    $7f19dac9f6690e80$var$BodemPlanken.forEach((plank)=>$7f19dac9f6690e80$var$scene.remove(plank));\n    $7f19dac9f6690e80$var$Kepers.forEach((keper)=>$7f19dac9f6690e80$var$scene.remove(keper));\n    $7f19dac9f6690e80$var$Platen.forEach((Plaat)=>$7f19dac9f6690e80$var$scene.remove(Plaat));\n}\nfunction $7f19dac9f6690e80$var$Keper_GEN() {\n    //---------------Onderste Planken generenen---------------------------\n    let startZ = -($7f19dac9f6690e80$var$Lengte - $7f19dac9f6690e80$var$KeperBreedte) / 2;\n    let spacingZ = ($7f19dac9f6690e80$var$Lengte - $7f19dac9f6690e80$var$KeperBreedte) / ($7f19dac9f6690e80$var$AantalKepers - 1);\n    for(let i = 0; i < $7f19dac9f6690e80$var$AantalKepers; i++){\n        let zPos = startZ + i * spacingZ;\n        let Keper = $7f19dac9f6690e80$var$createBoxWithEdges(new $ilwiq.BoxGeometry($7f19dac9f6690e80$var$Breedte, $7f19dac9f6690e80$var$KeperHoogte, $7f19dac9f6690e80$var$KeperBreedte), $7f19dac9f6690e80$var$KeperColorMat);\n        Keper.position.set(0, $7f19dac9f6690e80$var$BodemPlankHoogte + $7f19dac9f6690e80$var$KeperHoogte / 2, zPos);\n        $7f19dac9f6690e80$var$scene.add(Keper);\n        $7f19dac9f6690e80$var$Kepers.push(Keper);\n    }\n}\nfunction $7f19dac9f6690e80$var$Bodem_GEN() {\n    //*****************plaat als dek***********************\n    if ($7f19dac9f6690e80$var$BodemOptiePlaat == true) {\n        let Plaat = $7f19dac9f6690e80$var$createBoxWithEdges(new $ilwiq.BoxGeometry($7f19dac9f6690e80$var$Breedte, $7f19dac9f6690e80$var$PlaatDikte, $7f19dac9f6690e80$var$Lengte), $7f19dac9f6690e80$var$PlaatMateriaal);\n        // Positioneren onder de kist\n        Plaat.position.set(0, $7f19dac9f6690e80$var$BodemPlankHoogte / 2, 0);\n        // Toevoegen aan de scene en de array\n        $7f19dac9f6690e80$var$Platen.push(Plaat);\n        $7f19dac9f6690e80$var$scene.add(Plaat);\n    //************spreiding van aantal planken over dek************\n    } else if ($7f19dac9f6690e80$var$BodemOptiePlanken == true) {\n        let startZ = -($7f19dac9f6690e80$var$Breedte - $7f19dac9f6690e80$var$DekPlankBreedte) / 2;\n        let endZ = ($7f19dac9f6690e80$var$Breedte - $7f19dac9f6690e80$var$DekPlankBreedte) / 2;\n        const beschikbareLengte = endZ - startZ;\n        const spacing = $7f19dac9f6690e80$var$AantalBodemPlanken > 1 ? beschikbareLengte / ($7f19dac9f6690e80$var$AantalBodemPlanken - 1) : 0;\n        for(let i = 0; i < $7f19dac9f6690e80$var$AantalBodemPlanken; i++){\n            let zPos = startZ + i * spacing;\n            let Plank = $7f19dac9f6690e80$var$createBoxWithEdges(new $ilwiq.BoxGeometry($7f19dac9f6690e80$var$DekPlankBreedte, $7f19dac9f6690e80$var$DekPlankHoogte, $7f19dac9f6690e80$var$Lengte), $7f19dac9f6690e80$var$KeperColorMat);\n            // Positioneren onder de kist\n            Plank.position.set(zPos, $7f19dac9f6690e80$var$BodemPlankHoogte / 2, 0);\n            // Toevoegen aan de scene en de array\n            $7f19dac9f6690e80$var$scene.add(Plank);\n            $7f19dac9f6690e80$var$BodemPlanken.push(Plank);\n        }\n    }\n}\nfunction $7f19dac9f6690e80$var$Dek_GEN() {\n    //*****************plaat als dek***********************\n    if ($7f19dac9f6690e80$var$OptieDekPlaat == true) {\n        let Plaat = $7f19dac9f6690e80$var$createBoxWithEdges(new $ilwiq.BoxGeometry($7f19dac9f6690e80$var$Breedte, $7f19dac9f6690e80$var$PlaatDikte, $7f19dac9f6690e80$var$Lengte), $7f19dac9f6690e80$var$PlaatMateriaal);\n        // Positioneren onder de kist\n        Plaat.position.set(0, $7f19dac9f6690e80$var$KeperHoogte + $7f19dac9f6690e80$var$BodemPlankHoogte + $7f19dac9f6690e80$var$PlaatDikte / 2, 0);\n        // Toevoegen aan de scene en de array\n        $7f19dac9f6690e80$var$Platen.push(Plaat);\n        $7f19dac9f6690e80$var$scene.add(Plaat);\n    //************spreiding van aantal planken over dek************\n    } else if ($7f19dac9f6690e80$var$OptieDekPlanken == true) {\n        let startZ = -($7f19dac9f6690e80$var$Breedte - $7f19dac9f6690e80$var$DekPlankBreedte) / 2;\n        let endZ = ($7f19dac9f6690e80$var$Breedte - $7f19dac9f6690e80$var$DekPlankBreedte) / 2;\n        const beschikbareLengte = endZ - startZ;\n        const spacing = $7f19dac9f6690e80$var$AantalDekPlanken > 1 ? beschikbareLengte / ($7f19dac9f6690e80$var$AantalDekPlanken - 1) : 0;\n        for(let i = 0; i < $7f19dac9f6690e80$var$AantalDekPlanken; i++){\n            let zPos = startZ + i * spacing;\n            let DekPlank = $7f19dac9f6690e80$var$createBoxWithEdges(new $ilwiq.BoxGeometry($7f19dac9f6690e80$var$DekPlankBreedte, $7f19dac9f6690e80$var$DekPlankHoogte, $7f19dac9f6690e80$var$Lengte), $7f19dac9f6690e80$var$KeperColorMat);\n            // Positioneren onder de kist\n            DekPlank.position.set(zPos, $7f19dac9f6690e80$var$KeperHoogte + $7f19dac9f6690e80$var$BodemPlankHoogte + $7f19dac9f6690e80$var$DekPlankHoogte / 2, 0);\n            // Toevoegen aan de scene en de array\n            $7f19dac9f6690e80$var$scene.add(DekPlank);\n            $7f19dac9f6690e80$var$DekPlanken.push(DekPlank);\n        }\n    }\n}\n// Animatielus voor continue updates\nfunction $7f19dac9f6690e80$var$animate() {\n    requestAnimationFrame($7f19dac9f6690e80$var$animate);\n    // Update de controls om de camera te bewegen\n    $7f19dac9f6690e80$var$controls.update(); // Alleen nodig als enableDamping is ingesteld\n    UpdatePallet();\n    // Render de scene\n    $7f19dac9f6690e80$var$renderer.render($7f19dac9f6690e80$var$scene, $7f19dac9f6690e80$var$camera);\n}\n// Start de animatielus\n$7f19dac9f6690e80$var$animate();\nfunction $7f19dac9f6690e80$var$UpdateModel() {\n    $7f19dac9f6690e80$var$VariabelenInLezen();\n    $7f19dac9f6690e80$var$OptiePlank();\n    $7f19dac9f6690e80$var$VerwijderOnderdelen();\n    if (document.getElementById(\"BodemCheck\").checked) $7f19dac9f6690e80$var$Bodem_GEN();\n    $7f19dac9f6690e80$var$Keper_GEN();\n    $7f19dac9f6690e80$var$Dek_GEN();\n}\n//\nfunction $7f19dac9f6690e80$var$animate() {\n    requestAnimationFrame($7f19dac9f6690e80$var$animate);\n    $7f19dac9f6690e80$var$controls.update();\n    $7f19dac9f6690e80$var$renderer.render($7f19dac9f6690e80$var$scene, $7f19dac9f6690e80$var$camera);\n}\n$7f19dac9f6690e80$var$animate();\n//-------------kist updaten bij aanpassing-----------\nfunction $7f19dac9f6690e80$var$setupEventListeners() {\n    const elements = document.querySelectorAll(\"input, select, textarea\");\n    elements.forEach((el)=>{\n        if (el.tagName === \"INPUT\") {\n            if (el.type === \"range\") // Sliders live update bij input\n            el.addEventListener(\"input\", $7f19dac9f6690e80$var$UpdateModel);\n            else if (el.type === \"text\" || el.type === \"number\") {\n                // Tekst/nummer: update bij blur of Enter\n                el.addEventListener(\"blur\", $7f19dac9f6690e80$var$UpdateModel);\n                el.addEventListener(\"keydown\", (e)=>{\n                    if (e.key === \"Enter\") $7f19dac9f6690e80$var$UpdateModel();\n                });\n            } else if (el.type === \"checkbox\") // Checkbox update bij change\n            el.addEventListener(\"change\", $7f19dac9f6690e80$var$UpdateModel);\n            else if (el.type === \"radio\") // Checkbox update bij change\n            el.addEventListener(\"change\", $7f19dac9f6690e80$var$UpdateModel);\n        } else if (el.tagName === \"SELECT\") // Select update bij change\n        el.addEventListener(\"change\", $7f19dac9f6690e80$var$UpdateModel);\n    });\n}\n$7f19dac9f6690e80$var$UpdateModel();\n// Start eventlisteners\n$7f19dac9f6690e80$var$setupEventListeners();\n\n\n//# sourceMappingURL=pallet_2wegs.75475c5e.js.map\n","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport osbImage from '../img/OSB.jpg';\r\nimport KEPERImage from '../img/KEPER.jpg';\r\n\r\n\r\n// De scene\r\nvar scene = new THREE.Scene();\r\nscene.background = new THREE.Color('white');\r\n\r\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\r\nconst container = document.getElementById('canvas-container');\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true, powerPreference: \"high-performance\",  canvas: container.querySelector('canvas') });\r\nrenderer.setSize(container.clientWidth, container.clientHeight);\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n// Update canvas bij resize:\r\nwindow.addEventListener('resize', () => {\r\n  const width = container.clientWidth;\r\n  const height = container.clientHeight;\r\n  renderer.setSize(width, height);\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n});\r\n\r\n// Camera die de grootte van de container gebruikt\r\nvar camera = new THREE.PerspectiveCamera(\r\n  70,\r\n  container.clientWidth / container.clientHeight,\r\n  0.1,\r\n  1000\r\n);\r\ncamera.position.set(1.2, 1.2, 1.2);\r\ncamera.lookAt(scene.position);\r\n\r\n\r\n// OrbitControls instellen\r\nvar controls = new OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true; // Schakel demping in voor soepelere beweging\r\ncontrols.dampingFactor = 0.25;\r\ncontrols.screenSpacePanning = false;\r\n\r\n\r\n// Verlichting toevoegen\r\nconst ambientLight = new THREE.AmbientLight(0xf6cd8b, 2.0);\r\nconst light = new THREE.DirectionalLight(0xFFFFFF, 2.0);\r\nlight.position.set(2.5, 5, 5);\r\nlight.castShadow = true;\r\nlight.shadow.mapSize.width = 2048;\r\nlight.shadow.mapSize.height = 2048;\r\nlight.shadow.camera.near = 0.5;\r\nlight.shadow.camera.far = 50;\r\nlight.shadow.camera.left = -10;\r\nlight.shadow.camera.right = 10;\r\nlight.shadow.camera.top = 10;\r\nlight.shadow.camera.bottom = -10;\r\nrenderer.shadowMap.enabled = true;\r\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\r\nscene.add(ambientLight, light);\r\n\r\n//schaduwvlak\r\nlet ground;\r\n\r\n// Voeg een axis helper toe\r\n//scene.add(new THREE.AxesHelper(2));\r\n\r\n\r\n// Materialen\r\nvar PlaatMateriaal;\r\nconst OSBColorMat = new THREE.MeshStandardMaterial({ color: 0x1b7101 });\r\nconst BetonColorMat = new THREE.MeshStandardMaterial({ color: 0x1f1716 });\r\nconst MultColorMat = new THREE.MeshStandardMaterial({ color: 0xccac74 });\r\n\r\nconst KeperColorMat = new THREE.MeshStandardMaterial({ color: 0xccac74 });\r\nconst LatColorMat = new THREE.MeshStandardMaterial({ color: 0x6d4c08 });\r\n\r\n\r\nconst edgeMaterial = new THREE.LineBasicMaterial({ color: 0x000000 });\r\n\r\n\r\n// Functie om een object met randen te maken\r\nfunction createBoxWithEdges(geometry, material) {\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.castShadow = true;\r\n    const edges = new THREE.EdgesGeometry(geometry);\r\n    const line = new THREE.LineSegments(edges, edgeMaterial);\r\n    mesh.add(line);\r\n    return mesh;\r\n}\r\n\r\n//onderdelen\r\nlet Kepers = [];\r\nlet DekPlanken = [];\r\nlet BodemPlanken = [];\r\nlet Platen = [];\r\n\r\nlet Lengte;\r\nlet Breedte;\r\n\r\nlet AantalKepers;\r\nlet AantalBodemPlanken;\r\nlet AantalDekPlanken;\r\n\r\n\r\nvar OptieDekPlaat;\r\nvar OptieDekPlanken;\r\n\r\nvar BodemOptiePlaat;\r\nvar BodemOptiePlanken;\r\n\r\n\r\nlet PlaatDikte = 0.022;\r\n\r\nlet PlankDikte;\r\nlet PlankBreedte;\r\n\r\nlet DekPlankHoogte = 0.022;\r\nlet DekPlankBreedte = 0.100;\r\n\r\nlet BodemPlankHoogte = 0.022;\r\nlet BodemPlankBreedte = 0.100;\r\n\r\nlet\tKeperHoogte = 0.08;\r\nlet\tKeperBreedte = 0.08;\r\n\r\n\r\n\r\n\r\n\r\nfunction VariabelenInLezen(){\r\n //input gebruiker ophalen\r\n Lengte = parseFloat(document.getElementById('LengteSlider').value) / 1000;\r\n Breedte = parseFloat(document.getElementById('BreedteSlider').value) / 1000;\r\n AantalKepers = parseFloat(document.getElementById(\"KeperAantalInput\").value);\r\n AantalBodemPlanken = parseFloat(document.getElementById(\"BodemPlankenInput\").value);\r\n AantalDekPlanken = parseFloat(document.getElementById(\"DekPlankenInput\").value);\r\n\r\n OptieDekPlaat = document.getElementById(\"OptieDekPlaat\").checked;\r\n OptieDekPlanken = document.getElementById(\"OptieDekPlanken\").checked;\r\n\r\n BodemOptiePlaat = document.getElementById(\"OptieBodemPlaat\").checked;\r\n BodemOptiePlanken = document.getElementById(\"OptieBodemPlanken\").checked;\r\n\r\n var MaxBreedte = (AantalBodemPlanken*BodemPlankBreedte);\r\n var MaxBreedte2 = (AantalDekPlanken*DekPlankBreedte);\r\n\r\nif (OptieDekPlanken|| BodemOptiePlanken == true){\r\n\r\n    Breedte = Math.max( Breedte,MaxBreedte,MaxBreedte2);\r\n\r\n}\r\n\r\n\r\nvar MaxLengte = (KeperBreedte*AantalKepers)\r\n\r\nLengte = Math.max(Lengte,MaxLengte);\r\n\r\n\r\n\r\ndocument.getElementById(\"BreedteInput\").value = (Breedte*1000).toFixed(0);;\r\ndocument.getElementById(\"LengteInput\").value = (Lengte*1000).toFixed(0);;\r\n\r\n}\r\n\r\nfunction OptiePlank(){\r\n\r\n\r\n    if (document.getElementById('Uitvoering').value == 'Light'){\r\n        PlankDikte=15/1000;\r\n        PlankBreedte=75/1000;\r\n        KeperHoogte = 0.1;\r\n        KeperBreedte = 0.08;\r\n        PlaatDikte = 0.015;\r\n        }\r\n    else if(document.getElementById('Uitvoering').value == 'Medium'){\r\n        PlankDikte=18/1000;\r\n        PlankBreedte=100/1000;\r\n        KeperHoogte = 0.1;\r\n        KeperBreedte = 0.1;\r\n        PlaatDikte = 0.018;\r\n        }\r\n    else if(document.getElementById('Uitvoering').value == 'Heavy'){\r\n        PlankDikte=22/1000;\r\n        PlankBreedte=100/1000;\r\n        KeperHoogte = 0.1;\r\n        KeperBreedte = 0.1;\r\n        PlaatDikte = 0.021\r\n        }  \r\n\r\n        DekPlankHoogte = PlankDikte;\r\n        DekPlankBreedte = PlankBreedte;\r\n        BodemPlankHoogte = PlankDikte;\r\n        BodemPlankBreedte = PlankBreedte;\r\n        KeperBreedte = KeperBreedte;\r\n        KeperHoogte = KeperHoogte;\r\n\r\n\r\n    let PlaatType = document.getElementById(\"PlaatTypeSelect\").value;\r\n\r\n    switch (PlaatType) {\r\n  case \"osb\":\r\n    PlaatDikte = 0.015;\r\n    PlaatMateriaal = OSBColorMat;\r\n    break;\r\n  case \"multiplex\":\r\n    PlaatDikte = 0.018;\r\n    PlaatMateriaal = MultColorMat;\r\n    break;\r\n  case \"betonplex\":\r\n    PlaatDikte = 0.018;\r\n    PlaatMateriaal = BetonColorMat;\r\n    break;\r\n}\r\n\r\n}\r\n\r\nfunction VerwijderOnderdelen(){\r\n// Eerst verwijderen we de oude onderdelen\r\nDekPlanken.forEach(plank => scene.remove(plank));\r\nBodemPlanken.forEach(plank => scene.remove(plank));\r\nKepers.forEach(keper => scene.remove(keper));\r\nPlaten.forEach(Plaat => scene.remove(Plaat));\r\n}\r\n\r\nfunction Keper_GEN(){\r\n//---------------Onderste Planken generenen---------------------------\r\nlet startZ = -(Lengte - KeperBreedte) / 2;\r\nlet spacingZ = (Lengte - KeperBreedte) / (AantalKepers - 1);\r\n\r\nfor (let i = 0; i < AantalKepers; i++) {\r\n    let zPos = startZ + i * spacingZ;\r\n    let Keper = createBoxWithEdges(new THREE.BoxGeometry(Breedte, KeperHoogte, KeperBreedte), KeperColorMat);\r\n    Keper.position.set(0,BodemPlankHoogte + KeperHoogte/2, zPos);\r\n    scene.add(Keper);\r\n    Kepers.push(Keper);\r\n}\r\n}\r\n\r\n\r\nfunction Bodem_GEN(){\r\n\r\n\r\n\r\n//*****************plaat als dek***********************\r\n  if(BodemOptiePlaat == true){\r\n\r\n\r\n      let Plaat = createBoxWithEdges(new THREE.BoxGeometry(Breedte,PlaatDikte,Lengte), PlaatMateriaal);\r\n  \r\n      // Positioneren onder de kist\r\n      Plaat.position.set(0,BodemPlankHoogte/2,0);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      Platen.push(Plaat)\r\n      scene.add(Plaat);\r\n   \r\n  \r\n\r\n//************spreiding van aantal planken over dek************\r\n} else if(BodemOptiePlanken == true){\r\n\r\n  \r\n    let startZ = -(Breedte- DekPlankBreedte) / 2;\r\n    let endZ = (Breedte- DekPlankBreedte) / 2;\r\n\r\n\r\n    const beschikbareLengte = endZ - startZ;\r\n    const spacing = (AantalBodemPlanken > 1) ? beschikbareLengte / (AantalBodemPlanken - 1) : 0;\r\n    \r\n  \r\n    for (let i = 0; i < AantalBodemPlanken; i++) {\r\n        let zPos = startZ + i * spacing;\r\n    \r\n        let Plank = createBoxWithEdges(new THREE.BoxGeometry(DekPlankBreedte, DekPlankHoogte, Lengte), KeperColorMat);\r\n    \r\n        // Positioneren onder de kist\r\n        Plank.position.set(zPos,BodemPlankHoogte/2, 0);\r\n    \r\n        // Toevoegen aan de scene en de array\r\n        scene.add(Plank);\r\n        BodemPlanken.push(Plank);\r\n    }\r\n}\r\n}\r\n\r\n\r\nfunction Dek_GEN(){\r\n\r\n//*****************plaat als dek***********************\r\n  if(OptieDekPlaat == true){\r\n\r\n\r\n      let Plaat = createBoxWithEdges(new THREE.BoxGeometry(Breedte,PlaatDikte,Lengte), PlaatMateriaal);\r\n  \r\n      // Positioneren onder de kist\r\n      Plaat.position.set(0, KeperHoogte + BodemPlankHoogte + PlaatDikte/2,0);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      Platen.push(Plaat)\r\n      scene.add(Plaat);\r\n   \r\n  \r\n\r\n//************spreiding van aantal planken over dek************\r\n} else if(OptieDekPlanken == true){\r\n\r\n  \r\n    let startZ = -(Breedte- DekPlankBreedte) / 2;\r\n    let endZ = (Breedte- DekPlankBreedte) / 2;\r\n\r\n\r\n    const beschikbareLengte = endZ - startZ;\r\n    const spacing = (AantalDekPlanken > 1) ? beschikbareLengte / (AantalDekPlanken - 1) : 0;\r\n    \r\n  \r\n    for (let i = 0; i < AantalDekPlanken; i++) {\r\n        let zPos = startZ + i * spacing;\r\n    \r\n        let DekPlank = createBoxWithEdges(new THREE.BoxGeometry(DekPlankBreedte, DekPlankHoogte, Lengte), KeperColorMat);\r\n    \r\n        // Positioneren onder de kist\r\n        DekPlank.position.set(zPos,KeperHoogte + BodemPlankHoogte + DekPlankHoogte/2, 0);\r\n    \r\n        // Toevoegen aan de scene en de array\r\n        scene.add(DekPlank);\r\n        DekPlanken.push(DekPlank);\r\n    }\r\n}\r\n\r\n}\r\n\r\n// Animatielus voor continue updates\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  \r\n  // Update de controls om de camera te bewegen\r\n  controls.update(); // Alleen nodig als enableDamping is ingesteld\r\n\r\n  UpdatePallet();\r\n  \r\n  // Render de scene\r\n  renderer.render(scene, camera);\r\n}\r\n\r\n// Start de animatielus\r\nanimate();\r\n\r\n\r\nfunction UpdateModel(){\r\n\r\n\r\n    VariabelenInLezen();\r\n    OptiePlank();\r\n    VerwijderOnderdelen();\r\n\r\n    if (document.getElementById(\"BodemCheck\").checked){\r\n        Bodem_GEN();\r\n    }\r\n\r\n\r\n    Keper_GEN();\r\n    Dek_GEN();\r\n    \r\n \r\n\r\n}\r\n//\r\nfunction animate() {\r\n    requestAnimationFrame(animate);\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n  }\r\n  animate();\r\n  \r\n  //-------------kist updaten bij aanpassing-----------\r\nfunction setupEventListeners() {\r\n  const elements = document.querySelectorAll(\"input, select, textarea\");\r\n\r\n  elements.forEach((el) => {\r\n    if (el.tagName === \"INPUT\") {\r\n      if (el.type === \"range\") {\r\n        // Sliders live update bij input\r\n        el.addEventListener(\"input\", UpdateModel);\r\n      } else if (el.type === \"text\" || el.type === \"number\") {\r\n        // Tekst/nummer: update bij blur of Enter\r\n        el.addEventListener(\"blur\", UpdateModel);\r\n        el.addEventListener(\"keydown\", (e) => {\r\n          if (e.key === \"Enter\") UpdateModel();\r\n        });\r\n      } else if (el.type === \"checkbox\") {\r\n        // Checkbox update bij change\r\n        el.addEventListener(\"change\", UpdateModel);\r\n      } \r\n      else if (el.type === \"radio\") {\r\n        // Checkbox update bij change\r\n        el.addEventListener(\"change\", UpdateModel);\r\n      }\r\n    } else if (el.tagName === \"SELECT\") {\r\n      // Select update bij change\r\n      el.addEventListener(\"change\", UpdateModel);\r\n    }\r\n  });\r\n}\r\n\r\n  \r\n  UpdateModel();\r\n  \r\n  // Start eventlisteners\r\n  setupEventListeners();\r\n  \r\n\r\n"],"names":["$7f19dac9f6690e80$var$Lengte","$7f19dac9f6690e80$var$Breedte","$7f19dac9f6690e80$var$AantalKepers","$7f19dac9f6690e80$var$AantalBodemPlanken","$7f19dac9f6690e80$var$AantalDekPlanken","$7f19dac9f6690e80$var$PlankDikte","$7f19dac9f6690e80$var$PlankBreedte","$7f19dac9f6690e80$var$PlaatMateriaal","$7f19dac9f6690e80$var$OptieDekPlaat","$7f19dac9f6690e80$var$OptieDekPlanken","$7f19dac9f6690e80$var$BodemOptiePlaat","$7f19dac9f6690e80$var$BodemOptiePlanken","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$dyjou","$ilwiq","$5Rd1x","$7f19dac9f6690e80$var$scene","Scene","background","Color","$7f19dac9f6690e80$var$container","document","getElementById","$7f19dac9f6690e80$var$renderer","WebGLRenderer","antialias","alpha","powerPreference","canvas","querySelector","setSize","clientWidth","clientHeight","setPixelRatio","window","devicePixelRatio","addEventListener","width","height","$7f19dac9f6690e80$var$camera","aspect","updateProjectionMatrix","PerspectiveCamera","position","set","lookAt","$7f19dac9f6690e80$var$controls","OrbitControls","domElement","enableDamping","dampingFactor","screenSpacePanning","$7f19dac9f6690e80$var$ambientLight","AmbientLight","$7f19dac9f6690e80$var$light","DirectionalLight","castShadow","shadow","mapSize","camera","near","far","left","right","top","bottom","shadowMap","enabled","type","PCFSoftShadowMap","add","$7f19dac9f6690e80$var$OSBColorMat","MeshStandardMaterial","color","$7f19dac9f6690e80$var$BetonColorMat","$7f19dac9f6690e80$var$MultColorMat","$7f19dac9f6690e80$var$KeperColorMat","$7f19dac9f6690e80$var$edgeMaterial","LineBasicMaterial","$7f19dac9f6690e80$var$createBoxWithEdges","geometry","material","mesh","Mesh","edges","EdgesGeometry","line","LineSegments","$7f19dac9f6690e80$var$Kepers","$7f19dac9f6690e80$var$DekPlanken","$7f19dac9f6690e80$var$BodemPlanken","$7f19dac9f6690e80$var$Platen","$7f19dac9f6690e80$var$PlaatDikte","$7f19dac9f6690e80$var$DekPlankHoogte","$7f19dac9f6690e80$var$DekPlankBreedte","$7f19dac9f6690e80$var$BodemPlankHoogte","$7f19dac9f6690e80$var$BodemPlankBreedte","$7f19dac9f6690e80$var$KeperHoogte","$7f19dac9f6690e80$var$KeperBreedte","$7f19dac9f6690e80$var$animate","requestAnimationFrame","update","UpdatePallet","render","$7f19dac9f6690e80$var$UpdateModel","MaxBreedte","MaxBreedte2","parseFloat","value","checked","Math","max","toFixed","forEach","plank","remove","keper","Plaat","$7f19dac9f6690e80$var$Bodem_GEN","BoxGeometry","push","startZ","endZ","spacing","beschikbareLengte","i","zPos","Plank","$7f19dac9f6690e80$var$Keper_GEN","spacingZ","Keper","$7f19dac9f6690e80$var$Dek_GEN","DekPlank","elements","querySelectorAll","el","tagName","e","key"],"version":3,"file":"pallet_2wegs.75475c5e.js.map"}