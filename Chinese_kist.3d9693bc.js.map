{"mappings":"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","sources":["<anon>","js/Chinese_Kist_copy.js"],"sourcesContent":["import \"./Massieve_kist.626d928d.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $dyjou = parcelRequire(\"dyjou\");\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $5Rd1x = parcelRequire(\"5Rd1x\");\n\n// De scene\nvar $45957cac9e9dfe0a$var$scene = new $dyjou.Scene();\n$45957cac9e9dfe0a$var$scene.background = new $ilwiq.Color('white');\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\nconst $45957cac9e9dfe0a$var$container = document.getElementById('canvas-container');\nconst $45957cac9e9dfe0a$var$renderer = new $ilwiq.WebGLRenderer({\n    antialias: true,\n    alpha: true,\n    powerPreference: \"high-performance\",\n    canvas: $45957cac9e9dfe0a$var$container.querySelector('canvas')\n});\n$45957cac9e9dfe0a$var$renderer.setSize($45957cac9e9dfe0a$var$container.clientWidth, $45957cac9e9dfe0a$var$container.clientHeight);\n$45957cac9e9dfe0a$var$renderer.setPixelRatio(window.devicePixelRatio);\n// Update canvas bij resize:\nwindow.addEventListener('resize', ()=>{\n    const width = $45957cac9e9dfe0a$var$container.clientWidth;\n    const height = $45957cac9e9dfe0a$var$container.clientHeight;\n    $45957cac9e9dfe0a$var$renderer.setSize(width, height);\n    $45957cac9e9dfe0a$var$camera.aspect = width / height;\n    $45957cac9e9dfe0a$var$camera.updateProjectionMatrix();\n});\n// Camera die de grootte van de container gebruikt\nvar $45957cac9e9dfe0a$var$camera = new $ilwiq.PerspectiveCamera(70, $45957cac9e9dfe0a$var$container.clientWidth / $45957cac9e9dfe0a$var$container.clientHeight, 0.1, 1000);\n$45957cac9e9dfe0a$var$camera.position.set(1.2, 1.2, 1.2);\n$45957cac9e9dfe0a$var$camera.lookAt($45957cac9e9dfe0a$var$scene.position);\n// OrbitControls instellen\nvar $45957cac9e9dfe0a$var$controls = new (0, $5Rd1x.OrbitControls)($45957cac9e9dfe0a$var$camera, $45957cac9e9dfe0a$var$renderer.domElement);\n$45957cac9e9dfe0a$var$controls.enableDamping = true; // Schakel demping in voor soepelere beweging\n$45957cac9e9dfe0a$var$controls.dampingFactor = 0.25;\n$45957cac9e9dfe0a$var$controls.screenSpacePanning = false;\n// Verlichting toevoegen\nconst $45957cac9e9dfe0a$var$ambientLight = new $dyjou.AmbientLight(0xf6cd8b, 2.0);\nconst $45957cac9e9dfe0a$var$light = new $dyjou.DirectionalLight(0xFFFFFF, 2.0);\n$45957cac9e9dfe0a$var$light.position.set(2.5, 5, 5);\n$45957cac9e9dfe0a$var$light.castShadow = true;\n$45957cac9e9dfe0a$var$light.shadow.mapSize.width = 2048;\n$45957cac9e9dfe0a$var$light.shadow.mapSize.height = 2048;\n$45957cac9e9dfe0a$var$light.shadow.camera.near = 0.5;\n$45957cac9e9dfe0a$var$light.shadow.camera.far = 50;\n$45957cac9e9dfe0a$var$light.shadow.camera.left = -10;\n$45957cac9e9dfe0a$var$light.shadow.camera.right = 10;\n$45957cac9e9dfe0a$var$light.shadow.camera.top = 10;\n$45957cac9e9dfe0a$var$light.shadow.camera.bottom = -10;\n$45957cac9e9dfe0a$var$renderer.shadowMap.enabled = true;\n$45957cac9e9dfe0a$var$renderer.shadowMap.type = $ilwiq.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\n$45957cac9e9dfe0a$var$scene.add($45957cac9e9dfe0a$var$ambientLight, $45957cac9e9dfe0a$var$light);\n//schaduwvlak\nlet $45957cac9e9dfe0a$var$ground;\n// Voeg een axis helper toe\n//scene.add(new THREE.AxesHelper(2));\n// Materialen\nconst $45957cac9e9dfe0a$var$OSBColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0x1b7101\n});\nconst $45957cac9e9dfe0a$var$KeperColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0x8e6103\n});\nconst $45957cac9e9dfe0a$var$LatColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0x6d4c08\n});\nconst $45957cac9e9dfe0a$var$edgeMaterial = new $dyjou.LineBasicMaterial({\n    color: 0x000000\n});\n// Functie om een object met randen te maken\nfunction $45957cac9e9dfe0a$var$createBoxWithEdges(geometry, material) {\n    const mesh = new $ilwiq.Mesh(geometry, material);\n    mesh.castShadow = true;\n    const edges = new $dyjou.EdgesGeometry(geometry);\n    const line = new $dyjou.LineSegments(edges, $45957cac9e9dfe0a$var$edgeMaterial);\n    mesh.add(line);\n    return mesh;\n}\n//onderdelen\n//bodem\nlet $45957cac9e9dfe0a$var$Blokken = [];\nlet $45957cac9e9dfe0a$var$BodemPlanken = [];\nlet $45957cac9e9dfe0a$var$Plaat;\n//omranding\nlet $45957cac9e9dfe0a$var$Zijkanten = [];\nlet $45957cac9e9dfe0a$var$ZijRegels = [];\nlet $45957cac9e9dfe0a$var$ZijStaanders = [];\nlet $45957cac9e9dfe0a$var$Koppen = [];\nlet $45957cac9e9dfe0a$var$KopRegels = [];\nlet $45957cac9e9dfe0a$var$KopStaanders = [];\n//deksel\nlet $45957cac9e9dfe0a$var$DeksepPlaat;\nlet $45957cac9e9dfe0a$var$Lengte;\nlet $45957cac9e9dfe0a$var$Breedte;\nlet $45957cac9e9dfe0a$var$Hoogte;\nlet $45957cac9e9dfe0a$var$AantalOnderLatten = 3;\nlet $45957cac9e9dfe0a$var$AantalTussenLatten = 3;\nlet $45957cac9e9dfe0a$var$AantalBovenlatten = 3;\nlet $45957cac9e9dfe0a$var$ExplodeFactor = 0;\nfunction $45957cac9e9dfe0a$var$UpdateModel() {\n    //input gebruiker ophalen\n    $45957cac9e9dfe0a$var$Lengte = parseFloat(document.getElementById('LengteSlider').value) / 1000;\n    $45957cac9e9dfe0a$var$Breedte = parseFloat(document.getElementById('BreedteSlider').value) / 1000;\n    $45957cac9e9dfe0a$var$Hoogte = parseFloat(document.getElementById('HoogteSlider').value) / 1000;\n    let dekselcheck = document.getElementById('DekselVerbergenCheck');\n    //Afmetingen in Meten\n    let PlaatDikte = 0.010;\n    let DekPlank_H = 0.022;\n    let DekPlank_B = 0.100;\n    let BovenPlank_H = 0.022;\n    let BovenPlank_B = 0.100;\n    let TussenPlank_H = 0.022;\n    let TussenPlank_B = 0.100;\n    let Blok_H = 0.100;\n    let Blok_B = 0.080;\n    let Blok_L = 0.080;\n    let Keper_H = 0.100;\n    let Keper_B = 0.08;\n    let Regel_B = 0.100;\n    // Eerst verwijderen we de oude onderdelen\n    $45957cac9e9dfe0a$var$Zijkanten.forEach((Zijkant)=>$45957cac9e9dfe0a$var$scene.remove(Zijkant));\n    $45957cac9e9dfe0a$var$BodemPlanken.forEach((plank)=>$45957cac9e9dfe0a$var$scene.remove(plank));\n    $45957cac9e9dfe0a$var$Blokken.forEach((blok)=>$45957cac9e9dfe0a$var$scene.remove(blok));\n    $45957cac9e9dfe0a$var$Koppen.forEach((Kop)=>$45957cac9e9dfe0a$var$scene.remove(Kop));\n    $45957cac9e9dfe0a$var$ZijStaanders.forEach((ZijStaander)=>$45957cac9e9dfe0a$var$scene.remove(ZijStaander));\n    $45957cac9e9dfe0a$var$ZijRegels.forEach((ZijRegel)=>$45957cac9e9dfe0a$var$scene.remove(ZijRegel));\n    $45957cac9e9dfe0a$var$KopRegels.forEach((KopRegel)=>$45957cac9e9dfe0a$var$scene.remove(KopRegel));\n    $45957cac9e9dfe0a$var$KopStaanders.forEach((KopStaander)=>$45957cac9e9dfe0a$var$scene.remove(KopStaander));\n    if ($45957cac9e9dfe0a$var$Plaat) $45957cac9e9dfe0a$var$scene.remove($45957cac9e9dfe0a$var$Plaat);\n    if ($45957cac9e9dfe0a$var$DeksepPlaat) $45957cac9e9dfe0a$var$scene.remove($45957cac9e9dfe0a$var$DeksepPlaat);\n    //---------------Onderste Planken generenen---------------------------\n    let startZ = -($45957cac9e9dfe0a$var$Lengte - BovenPlank_B) / 2;\n    let spacingZ = ($45957cac9e9dfe0a$var$Lengte - BovenPlank_B) / ($45957cac9e9dfe0a$var$AantalOnderLatten - 1);\n    for(let i = 0; i < $45957cac9e9dfe0a$var$AantalOnderLatten; i++){\n        let zPos = startZ + i * spacingZ;\n        let BodemPlank = $45957cac9e9dfe0a$var$createBoxWithEdges(new $ilwiq.BoxGeometry($45957cac9e9dfe0a$var$Breedte, BovenPlank_H, BovenPlank_B), $45957cac9e9dfe0a$var$KeperColorMat);\n        BodemPlank.position.set(0, -Keper_H - PlaatDikte / 2 - BovenPlank_H / 2 - 1.2 * $45957cac9e9dfe0a$var$ExplodeFactor, zPos);\n        $45957cac9e9dfe0a$var$scene.add(BodemPlank);\n        $45957cac9e9dfe0a$var$BodemPlanken.push(BodemPlank);\n    }\n    //-----------------Blokken genereren op een grid---------------------\n    let startX = -($45957cac9e9dfe0a$var$Breedte - Blok_B) / 2;\n    let spacingX = ($45957cac9e9dfe0a$var$Breedte - Blok_B) / ($45957cac9e9dfe0a$var$AantalTussenLatten - 1);\n    startZ = -($45957cac9e9dfe0a$var$Lengte - Blok_B) / 2;\n    spacingZ = ($45957cac9e9dfe0a$var$Lengte - Blok_B) / ($45957cac9e9dfe0a$var$AantalOnderLatten - 1);\n    for(let i = 0; i < $45957cac9e9dfe0a$var$AantalTussenLatten; i++)for(let j = 0; j < $45957cac9e9dfe0a$var$AantalOnderLatten; j++){\n        let xPos = startX + i * spacingX;\n        let zPos = startZ + j * spacingZ;\n        let blok = $45957cac9e9dfe0a$var$createBoxWithEdges(new $ilwiq.BoxGeometry(Blok_L, Blok_H, Blok_B), $45957cac9e9dfe0a$var$KeperColorMat);\n        blok.position.set(xPos, -Blok_H / 2 - PlaatDikte / 2 - 1 * $45957cac9e9dfe0a$var$ExplodeFactor, zPos);\n        $45957cac9e9dfe0a$var$scene.add(blok);\n        $45957cac9e9dfe0a$var$Blokken.push(blok);\n    }\n    //*****************BodemPlaat***********************\n    $45957cac9e9dfe0a$var$Plaat = $45957cac9e9dfe0a$var$createBoxWithEdges(new $ilwiq.BoxGeometry($45957cac9e9dfe0a$var$Breedte, PlaatDikte, $45957cac9e9dfe0a$var$Lengte), $45957cac9e9dfe0a$var$KeperColorMat);\n    // Positioneren onder de kist\n    $45957cac9e9dfe0a$var$Plaat.position.set(0, 1.2 * $45957cac9e9dfe0a$var$ExplodeFactor, 0);\n    // Toevoegen aan de scene en de array\n    $45957cac9e9dfe0a$var$scene.add($45957cac9e9dfe0a$var$Plaat);\n    //-----------------------koppen-----------------------------\n    for(let i = 0; i < 2; i++){\n        let kop = $45957cac9e9dfe0a$var$createBoxWithEdges(new $ilwiq.BoxGeometry($45957cac9e9dfe0a$var$Breedte - 2 * PlaatDikte, $45957cac9e9dfe0a$var$Hoogte, PlaatDikte), $45957cac9e9dfe0a$var$KeperColorMat);\n        // Positie van de plaat instellen\n        let zPositie = $45957cac9e9dfe0a$var$Lengte / 2 - PlaatDikte / 2 + $45957cac9e9dfe0a$var$ExplodeFactor;\n        if (i === 1) zPositie = -($45957cac9e9dfe0a$var$Lengte / 2 - PlaatDikte / 2 + $45957cac9e9dfe0a$var$ExplodeFactor); // Maak de z-positie negatief voor de tweede plaat\n        kop.position.set(0, $45957cac9e9dfe0a$var$Hoogte / 2 + PlaatDikte / 2, zPositie);\n        // Toevoegen aan de scene en de array\n        $45957cac9e9dfe0a$var$scene.add(kop);\n        $45957cac9e9dfe0a$var$Koppen.push(kop);\n    }\n    //------------- Koppen versteviging -------------\n    startX = -($45957cac9e9dfe0a$var$Breedte - Regel_B + 2 * PlaatDikte) / 2;\n    spacingX = ($45957cac9e9dfe0a$var$Breedte - Regel_B + 2 * PlaatDikte) / ($45957cac9e9dfe0a$var$AantalTussenLatten - 1);\n    let staanderY = $45957cac9e9dfe0a$var$Hoogte / 2 - Regel_B + PlaatDikte / 2;\n    const zOffset = $45957cac9e9dfe0a$var$Lengte / 2 + PlaatDikte / 2;\n    for(let i = 0; i < $45957cac9e9dfe0a$var$AantalTussenLatten; i++){\n        const xPos = startX + i * spacingX;\n        for (let richting of [\n            1,\n            -1\n        ]){\n            const zPos = richting * zOffset;\n            const KopStaander = $45957cac9e9dfe0a$var$createBoxWithEdges(new $ilwiq.BoxGeometry(Regel_B, $45957cac9e9dfe0a$var$Hoogte, PlaatDikte), $45957cac9e9dfe0a$var$LatColorMat);\n            KopStaander.position.set(xPos, staanderY, zPos);\n            $45957cac9e9dfe0a$var$scene.add(KopStaander);\n            $45957cac9e9dfe0a$var$KopStaanders.push(KopStaander);\n        }\n    }\n    //---------------KopRegels------------------------\n    for(let i = 0; i < 2; i++){\n        let KopRegel = $45957cac9e9dfe0a$var$createBoxWithEdges(new $ilwiq.BoxGeometry(PlaatDikte, Regel_B, $45957cac9e9dfe0a$var$Lengte), $45957cac9e9dfe0a$var$KeperColorMat);\n        // Positie van de plaat instellen\n        let xPositie = ($45957cac9e9dfe0a$var$Breedte + PlaatDikte) / 2 + $45957cac9e9dfe0a$var$ExplodeFactor;\n        if (i === 1) xPositie = -(($45957cac9e9dfe0a$var$Breedte + PlaatDikte) / 2 + $45957cac9e9dfe0a$var$ExplodeFactor); // Maak de z-positie negatief voor de tweede plaat\n        KopRegel.position.set(xPositie, $45957cac9e9dfe0a$var$Hoogte + PlaatDikte / 2 - Regel_B / 2, 0);\n        // Toevoegen aan de scene en de array\n        $45957cac9e9dfe0a$var$scene.add(KopRegel);\n        $45957cac9e9dfe0a$var$KopRegels.push(KopRegel);\n    }\n    //---------------- Zijkanten ----------------\n    for (let richting of [\n        1,\n        -1\n    ]){\n        const xPositie = richting * (($45957cac9e9dfe0a$var$Breedte - PlaatDikte) / 2 + $45957cac9e9dfe0a$var$ExplodeFactor);\n        const zijkant = $45957cac9e9dfe0a$var$createBoxWithEdges(new $ilwiq.BoxGeometry(PlaatDikte, $45957cac9e9dfe0a$var$Hoogte, $45957cac9e9dfe0a$var$Lengte), $45957cac9e9dfe0a$var$KeperColorMat);\n        zijkant.position.set(xPositie, $45957cac9e9dfe0a$var$Hoogte / 2 + PlaatDikte / 2, 0);\n        $45957cac9e9dfe0a$var$scene.add(zijkant);\n        $45957cac9e9dfe0a$var$Zijkanten.push(zijkant);\n    }\n    //------------- Zijkanten versteviging -------------\n    //---------------ZijStaanders-------------------------\n    startZ = -($45957cac9e9dfe0a$var$Lengte - Regel_B) / 2;\n    spacingZ = ($45957cac9e9dfe0a$var$Lengte - Regel_B) / ($45957cac9e9dfe0a$var$AantalOnderLatten - 1);\n    staanderY = $45957cac9e9dfe0a$var$Hoogte / 2 - Regel_B + PlaatDikte / 2;\n    let staanderX = $45957cac9e9dfe0a$var$Breedte / 2 + PlaatDikte / 2 + 1.2 * $45957cac9e9dfe0a$var$ExplodeFactor;\n    for(let i = 0; i < $45957cac9e9dfe0a$var$AantalOnderLatten; i++){\n        const zPos = startZ + i * spacingZ;\n        for (let richting of [\n            1,\n            -1\n        ]){\n            const ZijStaander = $45957cac9e9dfe0a$var$createBoxWithEdges(new $ilwiq.BoxGeometry(PlaatDikte, $45957cac9e9dfe0a$var$Hoogte, Regel_B), $45957cac9e9dfe0a$var$LatColorMat);\n            ZijStaander.position.set(richting * staanderX, staanderY, zPos);\n            $45957cac9e9dfe0a$var$scene.add(ZijStaander);\n            $45957cac9e9dfe0a$var$ZijStaanders.push(ZijStaander);\n        }\n    }\n    //---------------- Zijregels ----------------\n    const regelBreedte = $45957cac9e9dfe0a$var$Breedte + 2 * PlaatDikte;\n    const regelHoogte = Regel_B;\n    const regelDiepte = PlaatDikte;\n    const regelY = $45957cac9e9dfe0a$var$Hoogte - regelHoogte / 2 + PlaatDikte / 2;\n    const regelZOffset = ($45957cac9e9dfe0a$var$Lengte + PlaatDikte) / 2 + $45957cac9e9dfe0a$var$ExplodeFactor;\n    for (let richting of [\n        1,\n        -1\n    ]){\n        const zPos = richting * regelZOffset;\n        const ZijRegel = $45957cac9e9dfe0a$var$createBoxWithEdges(new $ilwiq.BoxGeometry(regelBreedte, regelHoogte, regelDiepte), $45957cac9e9dfe0a$var$KeperColorMat);\n        ZijRegel.position.set(0, regelY, zPos);\n        $45957cac9e9dfe0a$var$scene.add(ZijRegel);\n        $45957cac9e9dfe0a$var$ZijRegels.push(ZijRegel);\n    }\n    //----------------------Deksel-------------------------------\n    //*****************Deksel***********************\n    if (document.getElementById('DekselVerbergenCheck').checked === false) {\n        // Positioneren onder de kist\n        $45957cac9e9dfe0a$var$DeksepPlaat = $45957cac9e9dfe0a$var$createBoxWithEdges(new $ilwiq.BoxGeometry($45957cac9e9dfe0a$var$Breedte + 2 * PlaatDikte, PlaatDikte, $45957cac9e9dfe0a$var$Lengte + 2 * PlaatDikte), $45957cac9e9dfe0a$var$KeperColorMat);\n        $45957cac9e9dfe0a$var$DeksepPlaat.position.set(0, $45957cac9e9dfe0a$var$Hoogte + PlaatDikte + 1.2 * $45957cac9e9dfe0a$var$ExplodeFactor, 0);\n        // Toevoegen aan de scene en de array\n        $45957cac9e9dfe0a$var$scene.add($45957cac9e9dfe0a$var$DeksepPlaat);\n    }\n    //-----------------schaduwvlak toevoegen------------------------\n    if ($45957cac9e9dfe0a$var$ground) $45957cac9e9dfe0a$var$scene.remove($45957cac9e9dfe0a$var$ground);\n    $45957cac9e9dfe0a$var$ground = new $ilwiq.Mesh(new $ilwiq.PlaneGeometry(30, 30), new $dyjou.ShadowMaterial({\n        color: 0xD3D3D3\n    }));\n    $45957cac9e9dfe0a$var$ground.rotation.x = -Math.PI / 2;\n    $45957cac9e9dfe0a$var$ground.receiveShadow = true;\n    $45957cac9e9dfe0a$var$ground.position.y = -$45957cac9e9dfe0a$var$Hoogte / 2 - BovenPlank_H - 1.2 * $45957cac9e9dfe0a$var$ExplodeFactor;\n    $45957cac9e9dfe0a$var$scene.add($45957cac9e9dfe0a$var$ground);\n}\n//--------------------------------------------------\nfunction $45957cac9e9dfe0a$var$animate() {\n    requestAnimationFrame($45957cac9e9dfe0a$var$animate);\n    $45957cac9e9dfe0a$var$controls.update();\n    $45957cac9e9dfe0a$var$renderer.render($45957cac9e9dfe0a$var$scene, $45957cac9e9dfe0a$var$camera);\n}\n$45957cac9e9dfe0a$var$animate();\n//-------------kist updaten bij aanpassing-----------\nfunction $45957cac9e9dfe0a$var$setupEventListeners() {\n    const elements = document.querySelectorAll(\"input, select, textarea\");\n    elements.forEach((el)=>{\n        if (el.tagName === \"INPUT\") {\n            if (el.type === \"range\") // Sliders live update bij input\n            el.addEventListener(\"input\", $45957cac9e9dfe0a$var$UpdateModel);\n            else if (el.type === \"text\" || el.type === \"number\") {\n                // Tekst/nummer: update bij blur of Enter\n                el.addEventListener(\"blur\", $45957cac9e9dfe0a$var$UpdateModel);\n                el.addEventListener(\"keydown\", (e)=>{\n                    if (e.key === \"Enter\") $45957cac9e9dfe0a$var$UpdateModel();\n                });\n            } else if (el.type === \"checkbox\") // Checkbox update bij change\n            el.addEventListener(\"change\", $45957cac9e9dfe0a$var$UpdateModel);\n            else if (el.type === \"radio\") // Checkbox update bij change\n            el.addEventListener(\"change\", $45957cac9e9dfe0a$var$UpdateModel);\n        } else if (el.tagName === \"SELECT\") // Select update bij change\n        el.addEventListener(\"change\", $45957cac9e9dfe0a$var$UpdateModel);\n    });\n}\n$45957cac9e9dfe0a$var$UpdateModel();\n// Start eventlisteners\n$45957cac9e9dfe0a$var$setupEventListeners();\n\n\n//# sourceMappingURL=Chinese_kist.3d9693bc.js.map\n","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { update } from 'three/examples/jsm/libs/tween.module.js';\r\n\r\n// De scene\r\nvar scene = new THREE.Scene();\r\nscene.background = new THREE.Color('white');\r\n\r\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\r\nconst container = document.getElementById('canvas-container');\r\nconst renderer = new THREE.WebGLRenderer(\r\n  { antialias: true, alpha: true, powerPreference: \"high-performance\",  canvas: container.querySelector('canvas') });\r\nrenderer.setSize(container.clientWidth, container.clientHeight);\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n// Update canvas bij resize:\r\nwindow.addEventListener('resize', () => {\r\n  const width = container.clientWidth;\r\n  const height = container.clientHeight;\r\n  renderer.setSize(width, height);\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n});\r\n\r\n// Camera die de grootte van de container gebruikt\r\nvar camera = new THREE.PerspectiveCamera(\r\n  70,\r\n  container.clientWidth / container.clientHeight,\r\n  0.1,\r\n  1000\r\n);\r\ncamera.position.set(1.2, 1.2, 1.2);\r\ncamera.lookAt(scene.position);\r\n\r\n// OrbitControls instellen\r\nvar controls = new OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true; // Schakel demping in voor soepelere beweging\r\ncontrols.dampingFactor = 0.25;\r\ncontrols.screenSpacePanning = false;\r\n\r\n// Verlichting toevoegen\r\nconst ambientLight = new THREE.AmbientLight(0xf6cd8b, 2.0);\r\nconst light = new THREE.DirectionalLight(0xFFFFFF, 2.0);\r\nlight.position.set(2.5, 5, 5);\r\nlight.castShadow = true;\r\nlight.shadow.mapSize.width = 2048;\r\nlight.shadow.mapSize.height = 2048;\r\nlight.shadow.camera.near = 0.5;\r\nlight.shadow.camera.far = 50;\r\nlight.shadow.camera.left = -10;\r\nlight.shadow.camera.right = 10;\r\nlight.shadow.camera.top = 10;\r\nlight.shadow.camera.bottom = -10;\r\nrenderer.shadowMap.enabled = true;\r\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\r\nscene.add(ambientLight, light);\r\n\r\n\r\n//schaduwvlak\r\nlet ground;\r\n\r\n// Voeg een axis helper toe\r\n//scene.add(new THREE.AxesHelper(2));\r\n\r\n\r\n// Materialen\r\nconst OSBColorMat = new THREE.MeshStandardMaterial({ color: 0x1b7101 });\r\nconst KeperColorMat = new THREE.MeshStandardMaterial({ color: 0x8e6103 });\r\nconst LatColorMat = new THREE.MeshStandardMaterial({ color: 0x6d4c08 });\r\n\r\n\r\nconst edgeMaterial = new THREE.LineBasicMaterial({ color: 0x000000 });\r\n\r\n\r\n// Functie om een object met randen te maken\r\nfunction createBoxWithEdges(geometry, material) {\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.castShadow = true;\r\n    const edges = new THREE.EdgesGeometry(geometry);\r\n    const line = new THREE.LineSegments(edges, edgeMaterial);\r\n    mesh.add(line);\r\n    return mesh;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//onderdelen\r\n//bodem\r\nlet Blokken= [];\r\nlet BodemPlanken = [];\r\nlet Plaat;\r\n\r\n//omranding\r\nlet Zijkanten = [];\r\nlet ZijRegels = [];\r\nlet ZijStaanders = [];\r\nlet Koppen = [];\r\nlet KopRegels = [];\r\nlet KopStaanders = [];\r\n\r\n//deksel\r\nlet DeksepPlaat;\r\n\r\n\r\n\r\nlet Lengte;\r\nlet Breedte;\r\nlet Hoogte;\r\nlet AantalOnderLatten = 3;\r\nlet AantalTussenLatten = 3;\r\nlet AantalBovenlatten = 3;\r\nlet ExplodeFactor = 0;\r\n\r\nfunction UpdateModel(){\r\n\r\n\r\n\r\n\r\n //input gebruiker ophalen\r\n Lengte = parseFloat(document.getElementById('LengteSlider').value) / 1000;\r\n Breedte = parseFloat(document.getElementById('BreedteSlider').value) / 1000;\r\n Hoogte = parseFloat(document.getElementById('HoogteSlider').value) / 1000;\r\n let dekselcheck = document.getElementById('DekselVerbergenCheck');\r\n \r\n\r\n\r\n\r\n\r\n//Afmetingen in Meten\r\nlet PlaatDikte = 0.010;\r\n\r\nlet DekPlank_H = 0.022;\r\nlet DekPlank_B = 0.100;\r\n\r\nlet BovenPlank_H = 0.022;\r\nlet BovenPlank_B = 0.100;\r\n\r\nlet TussenPlank_H = 0.022;\r\nlet TussenPlank_B = 0.100;\r\n\r\nlet\tBlok_H = 0.100;\r\nlet\tBlok_B = 0.080;\r\nlet\tBlok_L = 0.080;\r\n\r\nlet\tKeper_H = 0.100;\r\nlet Keper_B = 0.08;\r\n\r\nlet Regel_B = 0.100;\r\n\r\n// Eerst verwijderen we de oude onderdelen\r\nZijkanten.forEach(Zijkant => scene.remove(Zijkant));\r\nBodemPlanken.forEach(plank => scene.remove(plank));\r\nBlokken.forEach(blok => scene.remove(blok));\r\nKoppen.forEach(Kop => scene.remove(Kop));\r\nZijStaanders.forEach(ZijStaander => scene.remove(ZijStaander));\r\nZijRegels.forEach(ZijRegel => scene.remove(ZijRegel));\r\nKopRegels.forEach(KopRegel => scene.remove(KopRegel));\r\nKopStaanders.forEach(KopStaander => scene.remove(KopStaander));\r\nif (Plaat) scene.remove(Plaat);\r\nif (DeksepPlaat) scene.remove(DeksepPlaat);\r\n\r\n\r\n\r\n//---------------Onderste Planken generenen---------------------------\r\nlet startZ = -(Lengte - BovenPlank_B) / 2;\r\nlet spacingZ = (Lengte - BovenPlank_B) / (AantalOnderLatten - 1);\r\n\r\nfor (let i = 0; i < AantalOnderLatten; i++) {\r\n    let zPos = startZ + i * spacingZ;\r\n    let BodemPlank = createBoxWithEdges(new THREE.BoxGeometry(Breedte, BovenPlank_H, BovenPlank_B), KeperColorMat);\r\n    BodemPlank.position.set(0,-Keper_H - PlaatDikte/2 - BovenPlank_H/2 - 1.2*ExplodeFactor, zPos);\r\n    scene.add(BodemPlank);\r\n    BodemPlanken.push(BodemPlank);\r\n}\r\n\r\n\r\n\r\n\r\n//-----------------Blokken genereren op een grid---------------------\r\nlet startX = -(Breedte - Blok_B) / 2;\r\nlet spacingX = (Breedte - Blok_B) / (AantalTussenLatten - 1);\r\n\r\nstartZ = -(Lengte - Blok_B) / 2;\r\nspacingZ = (Lengte -Blok_B) / (AantalOnderLatten - 1);\r\n\r\n\r\nfor (let i = 0; i < AantalTussenLatten; i++) {\r\n    for (let j = 0; j < AantalOnderLatten; j++) {\r\n        let xPos = startX + i * spacingX;\r\n        let zPos = startZ + j * spacingZ;\r\n\r\n        let blok = createBoxWithEdges(new THREE.BoxGeometry(Blok_L, Blok_H, Blok_B), KeperColorMat);\r\n        blok.position.set(xPos,- Blok_H/2 - PlaatDikte /2 - 1*ExplodeFactor, zPos);\r\n        scene.add(blok);\r\n        Blokken.push(blok);\r\n    }\r\n}\r\n\r\n//*****************BodemPlaat***********************\r\n      Plaat = createBoxWithEdges(new THREE.BoxGeometry(Breedte,PlaatDikte,Lengte), KeperColorMat);\r\n  \r\n      // Positioneren onder de kist\r\n      Plaat.position.set(0,1.2*ExplodeFactor,0);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(Plaat);\r\n\r\n //-----------------------koppen-----------------------------\r\n   for (let i = 0; i < 2; i++) {\r\n    \r\n    let kop = createBoxWithEdges(new THREE.BoxGeometry(Breedte - 2*PlaatDikte, Hoogte, PlaatDikte), KeperColorMat);\r\n\r\n        // Positie van de plaat instellen\r\n        let zPositie = ((Lengte/2 - PlaatDikte/2) + ExplodeFactor);\r\n        if (i === 1) {\r\n            zPositie = -((Lengte/2 - PlaatDikte/2) + ExplodeFactor); // Maak de z-positie negatief voor de tweede plaat\r\n        }\r\n    \r\n        kop.position.set(0,Hoogte/2 + PlaatDikte/2, zPositie);\r\n\r\n    // Toevoegen aan de scene en de array\r\n    scene.add(kop);\r\n    Koppen.push(kop);\r\n}\r\n\r\n //------------- Koppen versteviging -------------\r\nstartX = -(Breedte - Regel_B + 2 * PlaatDikte) / 2;\r\nspacingX = (Breedte - Regel_B + 2 * PlaatDikte) / (AantalTussenLatten - 1);\r\nlet staanderY = Hoogte /2 - Regel_B + PlaatDikte/2;\r\nconst zOffset = Lengte / 2 + PlaatDikte / 2;\r\n\r\nfor (let i = 0; i < AantalTussenLatten; i++) {\r\n    const xPos = startX + i * spacingX;\r\n\r\n    for (let richting of [1, -1]) {\r\n        const zPos = richting * zOffset;\r\n\r\n        const KopStaander = createBoxWithEdges(\r\n            new THREE.BoxGeometry(Regel_B, Hoogte, PlaatDikte),\r\n            LatColorMat\r\n        );\r\n\r\n        KopStaander.position.set(xPos, staanderY, zPos);\r\n        scene.add(KopStaander);\r\n        KopStaanders.push(KopStaander);\r\n    }\r\n}\r\n\r\n//---------------KopRegels------------------------\r\nfor (let i = 0; i < 2; i++) {\r\nlet KopRegel = createBoxWithEdges(new THREE.BoxGeometry(PlaatDikte,Regel_B,Lengte), KeperColorMat);\r\n\r\n      // Positie van de plaat instellen\r\n      let xPositie = ((Breedte + PlaatDikte)/2 + ExplodeFactor);\r\n      if (i === 1) {\r\n          xPositie = -((Breedte + PlaatDikte)/2 + ExplodeFactor); // Maak de z-positie negatief voor de tweede plaat\r\n      }\r\n      \r\n      KopRegel.position.set(xPositie,Hoogte + PlaatDikte/2 - Regel_B/2,0);\r\n\r\n  // Toevoegen aan de scene en de array\r\n  scene.add(KopRegel);\r\n  KopRegels.push(KopRegel);\r\n\r\n    }\r\n\r\n//---------------- Zijkanten ----------------\r\nfor (let richting of [1, -1]) {\r\n    const xPositie = richting * ((Breedte - PlaatDikte) / 2 + ExplodeFactor);\r\n    const zijkant = createBoxWithEdges(\r\n        new THREE.BoxGeometry(PlaatDikte, Hoogte, Lengte),\r\n        KeperColorMat\r\n    );\r\n    zijkant.position.set(xPositie, Hoogte/2 + PlaatDikte/2, 0);\r\n    scene.add(zijkant);\r\n    Zijkanten.push(zijkant);\r\n}\r\n\r\n//------------- Zijkanten versteviging -------------\r\n//---------------ZijStaanders-------------------------\r\n startZ = -(Lengte - Regel_B) / 2;\r\n spacingZ = (Lengte - Regel_B) / (AantalOnderLatten - 1);\r\n staanderY = Hoogte /2 - Regel_B + PlaatDikte/2;\r\n let staanderX = Breedte / 2 + PlaatDikte / 2 + 1.2 * ExplodeFactor;\r\n\r\nfor (let i = 0; i < AantalOnderLatten; i++) {\r\n    const zPos = startZ + i * spacingZ;\r\n\r\n    for (let richting of [1, -1]) {\r\n        const ZijStaander = createBoxWithEdges(\r\n            new THREE.BoxGeometry(PlaatDikte, Hoogte, Regel_B),\r\n            LatColorMat\r\n        );\r\n\r\n        ZijStaander.position.set(richting * staanderX, staanderY, zPos);\r\n        scene.add(ZijStaander);\r\n        ZijStaanders.push(ZijStaander);\r\n    }\r\n}\r\n\r\n//---------------- Zijregels ----------------\r\nconst regelBreedte = Breedte + 2 * PlaatDikte;\r\nconst regelHoogte = Regel_B;\r\nconst regelDiepte = PlaatDikte;\r\nconst regelY = Hoogte - regelHoogte / 2 + PlaatDikte/2;\r\nconst regelZOffset = (Lengte + PlaatDikte) / 2 + ExplodeFactor;\r\n\r\nfor (let richting of [1, -1]) {\r\n    const zPos = richting * regelZOffset;\r\n\r\n    const ZijRegel = createBoxWithEdges(\r\n        new THREE.BoxGeometry(regelBreedte, regelHoogte, regelDiepte),\r\n        KeperColorMat\r\n    );\r\n\r\n    ZijRegel.position.set(0, regelY, zPos);\r\n    scene.add(ZijRegel);\r\n    ZijRegels.push(ZijRegel);\r\n}\r\n\r\n\r\n\r\n//----------------------Deksel-------------------------------\r\n//*****************Deksel***********************\r\n  if (document.getElementById('DekselVerbergenCheck').checked === false) {\r\n    // Positioneren onder de kist\r\n    DeksepPlaat = createBoxWithEdges(new THREE.BoxGeometry(Breedte + 2*PlaatDikte,PlaatDikte,Lengte + 2*PlaatDikte), KeperColorMat);\r\n\r\n    DeksepPlaat.position.set(0, Hoogte + PlaatDikte + 1.2 * ExplodeFactor, 0);\r\n\r\n    // Toevoegen aan de scene en de array\r\n    scene.add(DeksepPlaat);\r\n  }\r\n else {\r\n}\r\n\r\n\r\n//-----------------schaduwvlak toevoegen------------------------\r\nif (ground) scene.remove(ground);\r\nground = new THREE.Mesh(new THREE.PlaneGeometry(30, 30), new THREE.ShadowMaterial({color: 0xD3D3D3}));\r\nground.rotation.x = -Math.PI / 2;\r\nground.receiveShadow = true;\r\nground.position.y =  -Hoogte/2 - BovenPlank_H -1.2* ExplodeFactor;\r\nscene.add(ground);\r\n\r\n}\r\n\r\n//--------------------------------------------------\r\nfunction animate() {\r\n    requestAnimationFrame(animate);\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n  }\r\n  animate();\r\n  \r\n  //-------------kist updaten bij aanpassing-----------\r\nfunction setupEventListeners() {\r\n  const elements = document.querySelectorAll(\"input, select, textarea\");\r\n\r\n  elements.forEach((el) => {\r\n    if (el.tagName === \"INPUT\") {\r\n      if (el.type === \"range\") {\r\n        // Sliders live update bij input\r\n        el.addEventListener(\"input\", UpdateModel);\r\n      } else if (el.type === \"text\" || el.type === \"number\") {\r\n        // Tekst/nummer: update bij blur of Enter\r\n        el.addEventListener(\"blur\", UpdateModel);\r\n        el.addEventListener(\"keydown\", (e) => {\r\n          if (e.key === \"Enter\") UpdateModel();\r\n        });\r\n      } else if (el.type === \"checkbox\") {\r\n        // Checkbox update bij change\r\n        el.addEventListener(\"change\", UpdateModel);\r\n      } \r\n      else if (el.type === \"radio\") {\r\n        // Checkbox update bij change\r\n        el.addEventListener(\"change\", UpdateModel);\r\n      }\r\n    } else if (el.tagName === \"SELECT\") {\r\n      // Select update bij change\r\n      el.addEventListener(\"change\", UpdateModel);\r\n    }\r\n  });\r\n}\r\n  \r\n  UpdateModel();\r\n  \r\n\r\n \r\n  // Start eventlisteners\r\n  setupEventListeners();\r\n\r\n\r\n"],"names":["$45957cac9e9dfe0a$var$ground","$45957cac9e9dfe0a$var$Plaat","$45957cac9e9dfe0a$var$DeksepPlaat","$45957cac9e9dfe0a$var$Lengte","$45957cac9e9dfe0a$var$Breedte","$45957cac9e9dfe0a$var$Hoogte","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$dyjou","$ilwiq","$5Rd1x","$45957cac9e9dfe0a$var$scene","Scene","background","Color","$45957cac9e9dfe0a$var$container","document","getElementById","$45957cac9e9dfe0a$var$renderer","WebGLRenderer","antialias","alpha","powerPreference","canvas","querySelector","setSize","clientWidth","clientHeight","setPixelRatio","window","devicePixelRatio","addEventListener","width","height","$45957cac9e9dfe0a$var$camera","aspect","updateProjectionMatrix","PerspectiveCamera","position","set","lookAt","$45957cac9e9dfe0a$var$controls","OrbitControls","domElement","enableDamping","dampingFactor","screenSpacePanning","$45957cac9e9dfe0a$var$ambientLight","AmbientLight","$45957cac9e9dfe0a$var$light","DirectionalLight","castShadow","shadow","mapSize","camera","near","far","left","right","top","bottom","shadowMap","enabled","type","PCFSoftShadowMap","add","MeshStandardMaterial","color","$45957cac9e9dfe0a$var$KeperColorMat","$45957cac9e9dfe0a$var$LatColorMat","$45957cac9e9dfe0a$var$edgeMaterial","LineBasicMaterial","$45957cac9e9dfe0a$var$createBoxWithEdges","geometry","material","mesh","Mesh","edges","EdgesGeometry","line","LineSegments","$45957cac9e9dfe0a$var$Blokken","$45957cac9e9dfe0a$var$BodemPlanken","$45957cac9e9dfe0a$var$Zijkanten","$45957cac9e9dfe0a$var$ZijRegels","$45957cac9e9dfe0a$var$ZijStaanders","$45957cac9e9dfe0a$var$Koppen","$45957cac9e9dfe0a$var$KopRegels","$45957cac9e9dfe0a$var$KopStaanders","$45957cac9e9dfe0a$var$UpdateModel","parseFloat","value","forEach","Zijkant","remove","plank","blok","Kop","ZijStaander","ZijRegel","KopRegel","KopStaander","startZ","spacingZ","$45957cac9e9dfe0a$var$AantalOnderLatten","i","zPos","BodemPlank","BoxGeometry","push","startX","spacingX","$45957cac9e9dfe0a$var$AantalTussenLatten","j","xPos","kop","zPositie","PlaatDikte","staanderY","zOffset","richting","xPositie","Regel_B","zijkant","staanderX","regelBreedte","regelY","regelHoogte","regelZOffset","checked","PlaneGeometry","ShadowMaterial","rotation","x","Math","PI","receiveShadow","y","$45957cac9e9dfe0a$var$animate","requestAnimationFrame","update","render","elements","querySelectorAll","el","tagName","e","key"],"version":3,"file":"Chinese_kist.3d9693bc.js.map"}