{"mappings":"IC8DI,EAgCA,EAEA,EACA,EACA,EACA,EACA,EAUA,EACA,C,O,8C,C,IA3CA,EAmCA,EACA,E,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,S,E,E,SAlGA,EAAQ,IAAI,EAAhB,KAAA,AACA,CAAA,EAAM,UAAU,CAAG,IAAI,EAAA,KAAA,CAAY,SAGnC,IAAM,EAAY,SAAS,cAAc,CAAC,oBACpC,EAAW,IAAI,EAAA,aAAA,CAAoB,CAAE,UAAW,CAAA,EAAM,MAAO,CAAA,EAAM,gBAAiB,mBAAqB,OAAQ,EAAU,aAAa,CAAC,SAAU,GACzJ,EAAS,OAAO,CAAC,EAAU,WAAW,CAAE,EAAU,YAAY,EAC9D,EAAS,aAAa,CAAC,OAAO,gBAAgB,EAG9C,OAAO,gBAAgB,CAAC,SAAU,KAChC,IAAM,EAAQ,EAAU,WAAW,CAC7B,EAAS,EAAU,YAAY,CACrC,EAAS,OAAO,CAAC,EAAO,GACxB,EAAO,MAAM,CAAG,EAAQ,EACxB,EAAO,sBAAsB,EAC/B,GAGA,IAAI,EAAS,IAAI,EAAA,iBAAA,CACf,GACA,EAAU,WAAW,CAAG,EAAU,YAAY,CAC9C,GACA,KAEF,EAAO,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,GACxB,EAAO,MAAM,CAAC,EAAM,QAAQ,EAM5B,IAAI,EAAW,GAAI,CAAA,EAAA,EAAA,aAAY,AAAZ,EAAc,EAAQ,EAAS,UAAU,CAC5D,CAAA,EAAS,aAAa,CAAG,CAAA,EACzB,EAAS,aAAa,CAAG,IACzB,EAAS,kBAAkB,CAAG,CAAA,EAI9B,IAAM,EAAe,IAAI,EAAA,YAAA,CAAmB,SAAU,GAChD,EAAQ,IAAI,EAAA,gBAAA,CAAuB,SAAU,GACnD,EAAM,QAAQ,CAAC,GAAG,CAAC,IAAK,EAAG,GAC3B,EAAM,UAAU,CAAG,CAAA,EACnB,EAAM,MAAM,CAAC,OAAO,CAAC,KAAK,CAAG,KAC7B,EAAM,MAAM,CAAC,OAAO,CAAC,MAAM,CAAG,KAC9B,EAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAG,GAC3B,EAAM,MAAM,CAAC,MAAM,CAAC,GAAG,CAAG,GAC1B,EAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAG,IAC3B,EAAM,MAAM,CAAC,MAAM,CAAC,KAAK,CAAG,GAC5B,EAAM,MAAM,CAAC,MAAM,CAAC,GAAG,CAAG,GAC1B,EAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAG,IAC7B,EAAS,SAAS,CAAC,OAAO,CAAG,CAAA,EAC7B,EAAS,SAAS,CAAC,IAAI,CAAG,EAAA,gBAAA,CAC1B,EAAM,GAAG,CAAC,EAAc,GAUxB,IAAM,EAAc,IAAI,EAAA,oBAAA,CAA2B,CAAE,MAAO,OAAS,GAC/D,EAAgB,IAAI,EAAA,oBAAA,CAA2B,CAAE,MAAO,OAAS,GACjE,EAAe,IAAI,EAAA,oBAAA,CAA2B,CAAE,MAAO,QAAS,GAEhE,EAAgB,IAAI,EAAA,oBAAA,CAA2B,CAAE,MAAO,QAAS,GAEjE,EAAe,IAAI,EAAA,iBAAA,CAAwB,CAAE,MAAO,CAAS,GAInE,SAAS,EAAmB,CAAQ,CAAE,CAAQ,EAC1C,IAAM,EAAO,IAAI,EAAA,IAAA,CAAW,EAAU,EACtC,CAAA,EAAK,UAAU,CAAG,CAAA,EAClB,IAAM,EAAQ,IAAI,EAAA,aAAA,CAAoB,GAChC,EAAO,IAAI,EAAA,YAAA,CAAmB,EAAO,GAE3C,OADA,EAAK,GAAG,CAAC,GACF,CACX,CAIA,IAAI,EAAS,EAAE,CACX,EAAc,EAAE,CAChB,EAAe,EAAE,CACjB,EAAY,EAAE,CAed,EAAa,KAKb,EAAiB,KACjB,EAAkB,GAElB,EAAmB,KACnB,EAAoB,GAEpB,EAAoB,KACpB,EAAqB,GAErB,EAAa,GACb,EAAc,IAuOlB,SAAS,IA1JG,OAzEX,EAAS,WAAW,SAAS,cAAc,CAAC,gBAAgB,KAAK,EAAI,IACrE,EAAU,WAAW,SAAS,cAAc,CAAC,iBAAiB,KAAK,EAAI,IACvE,EAAqB,WAAW,SAAS,cAAc,CAAC,qBAAqB,KAAK,EAClF,EAAsB,WAAW,SAAS,cAAc,CAAC,sBAAsB,KAAK,EACpF,EAAmB,WAAW,SAAS,cAAc,CAAC,mBAAmB,KAAK,EAG/E,EAAgB,SAAS,cAAc,CAAC,iBAAiB,OAAO,CAChE,EAAkB,SAAS,cAAc,CAAC,mBAAmB,OAAO,CAGpE,EAAS,KAAK,GAAG,CAAC,EADA,EAAoB,GAQtC,EAAU,KAAK,GAAG,CAAC,EAJO,EAAmB,EAChB,EAAiB,GAO9C,SAAS,cAAc,CAAC,gBAAgB,KAAK,CAAI,AAAA,CAAA,AAAQ,IAAR,CAAQ,EAAM,OAAO,CAAC,GACvE,SAAS,cAAc,CAAC,eAAe,KAAK,CAAI,AAAA,CAAA,AAAO,IAAP,CAAO,EAAM,OAAO,CAAC,GAkB7D,AAA+C,SAA/C,SAAS,cAAc,CAAC,cAAc,KAAK,EAC3C,EAAW,KACX,EAAa,KACb,EAAa,GACb,EAAc,IACd,EAAa,MAET,AAA+C,UAA/C,SAAS,cAAc,CAAC,cAAc,KAAK,EAC/C,EAAW,KACX,EAAa,GACb,EAAa,GACb,EAAc,GACd,EAAa,MAEsC,SAA/C,SAAS,cAAc,CAAC,cAAc,KAAK,GAC/C,EAAW,KACX,EAAa,GACb,EAAa,GACb,EAAc,GACd,EAAa,MAGb,EAAiB,EACjB,EAAkB,EAClB,EAAmB,EACnB,EAAoB,EACpB,EAAoB,EACpB,EAAqB,EAET,SAAS,cAAc,CAAC,mBAAmB,KAAK,EAIlE,IAAK,MACH,EAAa,KACb,EAAiB,EACjB,KACF,KAAK,YACH,EAAa,KACb,EAAiB,EACjB,KACF,KAAK,YACH,EAAa,KACb,EAAiB,CAErB,CAvDA,EAAa,OAAO,CAAC,AAAA,GAAS,EAAM,MAAM,CAAC,IAC3C,EAAc,OAAO,CAAC,AAAA,GAAS,EAAM,MAAM,CAAC,IAC5C,EAAW,OAAO,CAAC,AAAA,GAAS,EAAM,MAAM,CAAC,IACzC,EAAQ,OAAO,CAAC,AAAA,GAAQ,EAAM,MAAM,CAAC,IACjC,GAAO,EAAM,MAAM,CAAC,GAuMpB,AAhJJ,WAEA,IAAI,EAAS,CAAE,CAAA,EAAU,CAAA,EAAqB,EAC1C,EAAW,AAAC,CAAA,EAAU,CAAA,EAAsB,CAAA,EAAqB,CAAA,EAIrE,IAAK,IAAI,EAAI,EAAG,EAAI,EAAoB,IAAK,CACzC,IAAI,EAAO,EAAS,EAAI,EACpB,EAAa,EAAmB,IAAI,EAAA,WAAA,CAAkB,EAAmB,EAAkB,GAAS,GACxG,EAAW,QAAQ,CAAC,GAAG,CAAC,EAAK,EAAiB,EAAG,GACjD,EAAM,GAAG,CAAC,GACV,EAAa,IAAI,CAAC,EACtB,CACA,IAmII,AAhIJ,WAGA,IAuBQ,EACA,EAxBJ,EAAS,CAAE,CAAA,EAAU,CAAA,EAAe,EACpC,EAAW,AAAC,CAAA,EAAU,CAAA,EAAgB,CAAA,EAAqB,CAAA,EAE3D,EAAS,CAAE,CAAA,EAAS,CAAA,EAAe,EACnC,EAAW,AAAC,CAAA,EAAS,CAAA,EAAgB,CAAA,EAAsB,CAAA,EAM/D,IAAK,IAAI,EAAI,EAAG,EAAI,EAAoB,IACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAqB,IAAK,CAE1C,IAAI,EAAO,EAAS,EAAI,EACpB,EAAO,EAAS,EAAI,EAEpB,EAAO,EAAmB,IAAI,EAAA,WAAA,CAAkB,EAAa,EAAY,GAAc,GAC3F,EAAK,QAAQ,CAAC,GAAG,CAAC,EAAM,EAAmB,EAAa,EAAG,GAC3D,EAAM,GAAG,CAAC,GACV,EAAQ,IAAI,CAAC,EACjB,CAQQ,EADJ,EAAqB,GAAK,EACP,AAAE,EAAa,EAEf,EAAE,EAAc,EAK/B,EADJ,EAAsB,GAAK,EACR,AAAE,EAAa,EAEf,EAAE,EAAa,EAKtC,SAAS,cAAc,CAAC,gBAAgB,WAAW,CAAI,AAAA,CAAA,AAAa,IAAb,CAAa,EAAM,OAAO,CAAC,GAClF,SAAS,cAAc,CAAC,gBAAgB,WAAW,CAAI,AAAA,CAAA,AAAa,IAAb,CAAa,EAAM,OAAO,CAAC,EAGtF,IAgFI,AA9EJ,WAGA,IAAI,EAAS,CAAG,CAAA,EAAS,CAAA,EAAoB,EAEzC,EAAW,AAAC,CAAA,EAAS,CAAA,EAAuB,CAAA,EAAsB,CAAA,EAGtE,IAAK,IAAI,EAAI,EAAG,EAAI,EAAqB,IAAK,CAC1C,IAAI,EAAO,EAAS,EAAI,EACpB,EAAc,EAAmB,IAAI,EAAA,WAAA,CAAkB,EAAS,EAAmB,GAAqB,GAC5G,EAAY,QAAQ,CAAC,GAAG,CAAC,EAAG,EAAa,EAAmB,EAAkB,EAAG,GACjF,EAAM,GAAG,CAAC,GACV,EAAc,IAAI,CAAC,EACvB,CACA,IAgEI,AA9DJ,WAGE,GAAG,AAAiB,CAAA,GAAjB,EAMC,AAHA,CAAA,EAAQ,EAAmB,IAAI,EAAA,WAAA,CAAkB,EAAQ,EAAW,GAAS,EAA7E,EAGM,QAAQ,CAAC,GAAG,CAAC,EAAG,EAAa,EAAoB,EAAmB,EAAW,EAAE,GAGvF,EAAM,GAAG,CAAC,QAKT,GAAG,AAAmB,CAAA,GAAnB,EAAwB,CAG9B,IAAI,EAAS,CAAE,CAAA,EAAS,CAAA,EAAmB,EACvC,EAAO,AAAC,CAAA,EAAS,CAAA,EAAmB,EAIlC,EAAU,EAAoB,EAAK,AADf,CAAA,EAAO,CAAjC,EAC8D,CAAA,EAAmB,CAAA,EAAK,EAGtF,IAAK,IAAI,EAAI,EAAG,EAAI,EAAkB,IAAK,CACvC,IAAI,EAAO,EAAS,EAAI,EAEpB,EAAW,EAAmB,IAAI,EAAA,WAAA,CAAkB,EAAiB,EAAgB,GAAS,GAGlG,EAAS,QAAQ,CAAC,GAAG,CAAC,EAAK,EAAa,EAAmB,EAAoB,EAAe,EAAG,GAGjG,EAAM,GAAG,CAAC,GACV,EAAW,IAAI,CAAC,EACpB,CACJ,CACA,GAuBA,CApBI,GAAQ,EAAM,MAAM,CAAC,GAEzB,AADA,CAAA,EAAS,IAAI,EAAA,IAAA,CAAW,IAAI,EAAA,aAAA,CAAoB,GAAI,IAAK,IAAI,EAAA,cAAA,CAAqB,CAAC,MAAO,QAAQ,GAAA,EAC3F,QAAQ,CAAC,CAAC,CAAG,CAAC,KAAK,EAAE,CAAG,EAC/B,EAAO,aAAa,CAAG,CAAA,EACvB,EAAO,QAAQ,CAAC,CAAC,CAAG,CAAE,EAAiB,EACvC,EAAM,GAAG,CAAC,IAsBR,AALF,SAAS,IACL,sBAAsB,GACtB,EAAS,MAAM,GACf,EAAS,MAAM,CAAC,EAAO,EACzB,IAkCA,IA3BA,AAFiB,SAAS,gBAAgB,CAAC,2BAElC,OAAO,CAAC,AAAC,IACZ,AAAe,UAAf,EAAG,OAAO,CACR,AAAY,UAAZ,EAAG,IAAI,CAET,EAAG,gBAAgB,CAAC,QAAS,GACpB,AAAY,SAAZ,EAAG,IAAI,EAAe,AAAY,WAAZ,EAAG,IAAI,EAEtC,EAAG,gBAAgB,CAAC,OAAQ,GAC5B,EAAG,gBAAgB,CAAC,UAAW,AAAC,IAC1B,AAAU,UAAV,EAAE,GAAG,EAAc,GACzB,IACS,AAAY,aAAZ,EAAG,IAAI,CAEhB,EAAG,gBAAgB,CAAC,SAAU,GAEvB,AAAY,UAAZ,EAAG,IAAI,EAEd,EAAG,gBAAgB,CAAC,SAAU,GAEvB,AAAe,WAAf,EAAG,OAAO,EAEnB,EAAG,gBAAgB,CAAC,SAAU,EAElC","sources":["<anon>","js/Pallet.js"],"sourcesContent":["import \"./Massieve_kist.626d928d.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $dyjou = parcelRequire(\"dyjou\");\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $5Rd1x = parcelRequire(\"5Rd1x\");\n// De scene\nvar $51f5d5cb2648e663$var$scene = new $dyjou.Scene();\n$51f5d5cb2648e663$var$scene.background = new $ilwiq.Color('white');\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\nconst $51f5d5cb2648e663$var$container = document.getElementById('canvas-container');\nconst $51f5d5cb2648e663$var$renderer = new $ilwiq.WebGLRenderer({\n    antialias: true,\n    alpha: true,\n    powerPreference: \"high-performance\",\n    canvas: $51f5d5cb2648e663$var$container.querySelector('canvas')\n});\n$51f5d5cb2648e663$var$renderer.setSize($51f5d5cb2648e663$var$container.clientWidth, $51f5d5cb2648e663$var$container.clientHeight);\n$51f5d5cb2648e663$var$renderer.setPixelRatio(window.devicePixelRatio);\n// Update canvas bij resize:\nwindow.addEventListener('resize', ()=>{\n    const width = $51f5d5cb2648e663$var$container.clientWidth;\n    const height = $51f5d5cb2648e663$var$container.clientHeight;\n    $51f5d5cb2648e663$var$renderer.setSize(width, height);\n    $51f5d5cb2648e663$var$camera.aspect = width / height;\n    $51f5d5cb2648e663$var$camera.updateProjectionMatrix();\n});\n// Camera die de grootte van de container gebruikt\nvar $51f5d5cb2648e663$var$camera = new $ilwiq.PerspectiveCamera(70, $51f5d5cb2648e663$var$container.clientWidth / $51f5d5cb2648e663$var$container.clientHeight, 0.1, 1000);\n$51f5d5cb2648e663$var$camera.position.set(1, 1, 1);\n$51f5d5cb2648e663$var$camera.lookAt($51f5d5cb2648e663$var$scene.position);\n// OrbitControls instellen\nvar $51f5d5cb2648e663$var$controls = new (0, $5Rd1x.OrbitControls)($51f5d5cb2648e663$var$camera, $51f5d5cb2648e663$var$renderer.domElement);\n$51f5d5cb2648e663$var$controls.enableDamping = true; // Schakel demping in voor soepelere beweging\n$51f5d5cb2648e663$var$controls.dampingFactor = 0.25;\n$51f5d5cb2648e663$var$controls.screenSpacePanning = false;\n// Verlichting toevoegen\nconst $51f5d5cb2648e663$var$ambientLight = new $dyjou.AmbientLight(0xf6cd8b, 2.0);\nconst $51f5d5cb2648e663$var$light = new $dyjou.DirectionalLight(0xFFFFFF, 2.0);\n$51f5d5cb2648e663$var$light.position.set(2.5, 5, 5);\n$51f5d5cb2648e663$var$light.castShadow = true;\n$51f5d5cb2648e663$var$light.shadow.mapSize.width = 2048;\n$51f5d5cb2648e663$var$light.shadow.mapSize.height = 2048;\n$51f5d5cb2648e663$var$light.shadow.camera.near = 0.5;\n$51f5d5cb2648e663$var$light.shadow.camera.far = 50;\n$51f5d5cb2648e663$var$light.shadow.camera.left = -10;\n$51f5d5cb2648e663$var$light.shadow.camera.right = 10;\n$51f5d5cb2648e663$var$light.shadow.camera.top = 10;\n$51f5d5cb2648e663$var$light.shadow.camera.bottom = -10;\n$51f5d5cb2648e663$var$renderer.shadowMap.enabled = true;\n$51f5d5cb2648e663$var$renderer.shadowMap.type = $ilwiq.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\n$51f5d5cb2648e663$var$scene.add($51f5d5cb2648e663$var$ambientLight, $51f5d5cb2648e663$var$light);\n//schaduwvlak\nlet $51f5d5cb2648e663$var$ground;\n// Voeg een axis helper toe\n//scene.add(new THREE.AxesHelper(2));\n//materialen\nvar $51f5d5cb2648e663$var$PlaatMateriaal;\nconst $51f5d5cb2648e663$var$OSBColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0x1b7101\n});\nconst $51f5d5cb2648e663$var$BetonColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0x1f1716\n});\nconst $51f5d5cb2648e663$var$MultColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xccac74\n});\nconst $51f5d5cb2648e663$var$KeperColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xccac74\n});\nconst $51f5d5cb2648e663$var$edgeMaterial = new $dyjou.LineBasicMaterial({\n    color: 0x000000\n});\n// Functie om een object met randen te maken\nfunction $51f5d5cb2648e663$var$createBoxWithEdges(geometry, material) {\n    const mesh = new $ilwiq.Mesh(geometry, material);\n    mesh.castShadow = true;\n    const edges = new $dyjou.EdgesGeometry(geometry);\n    const line = new $dyjou.LineSegments(edges, $51f5d5cb2648e663$var$edgeMaterial);\n    mesh.add(line);\n    return mesh;\n}\n//onderdelen\nlet $51f5d5cb2648e663$var$Blokken = [];\nlet $51f5d5cb2648e663$var$BovenPlanken = [];\nlet $51f5d5cb2648e663$var$TussenPlanken = [];\nlet $51f5d5cb2648e663$var$DekPlanken = [];\nlet $51f5d5cb2648e663$var$Plaat;\nlet $51f5d5cb2648e663$var$Lengte;\nlet $51f5d5cb2648e663$var$Breedte;\nlet $51f5d5cb2648e663$var$AantalBodemPlanken;\nlet $51f5d5cb2648e663$var$AantalTussenPlanken;\nlet $51f5d5cb2648e663$var$AantalDekPlanken;\nvar $51f5d5cb2648e663$var$OptieDekPlaat;\nvar $51f5d5cb2648e663$var$OptieDekPlanken;\nvar $51f5d5cb2648e663$var$Uitvoering;\nlet $51f5d5cb2648e663$var$PlaatDikte = 0.022;\nlet $51f5d5cb2648e663$var$PlankDikte;\nlet $51f5d5cb2648e663$var$PlankBreedte;\nlet $51f5d5cb2648e663$var$DekPlankHoogte = 0.022;\nlet $51f5d5cb2648e663$var$DekPlankBreedte = 0.100;\nlet $51f5d5cb2648e663$var$BodemPlankHoogte = 0.022;\nlet $51f5d5cb2648e663$var$BodemPlankBreedte = 0.100;\nlet $51f5d5cb2648e663$var$TussenPlankHoogte = 0.022;\nlet $51f5d5cb2648e663$var$TussenPlankBreedte = 0.100;\nlet $51f5d5cb2648e663$var$BlokHoogte = 0.1;\nlet $51f5d5cb2648e663$var$BlokBreedte = 0.08;\nfunction $51f5d5cb2648e663$var$VariabelenInLezen() {\n    //input gebruiker ophalen\n    $51f5d5cb2648e663$var$Lengte = parseFloat(document.getElementById('LengteSlider').value) / 1000;\n    $51f5d5cb2648e663$var$Breedte = parseFloat(document.getElementById('BreedteSlider').value) / 1000;\n    $51f5d5cb2648e663$var$AantalBodemPlanken = parseFloat(document.getElementById(\"BodemPlankenInput\").value);\n    $51f5d5cb2648e663$var$AantalTussenPlanken = parseFloat(document.getElementById(\"TussenPlankenInput\").value);\n    $51f5d5cb2648e663$var$AantalDekPlanken = parseFloat(document.getElementById('DekPlankenInput').value);\n    $51f5d5cb2648e663$var$OptieDekPlaat = document.getElementById('OptieDekPlaat').checked;\n    $51f5d5cb2648e663$var$OptieDekPlanken = document.getElementById('OptieDekPlanken').checked;\n    var MaxLengte = $51f5d5cb2648e663$var$AantalTussenPlanken * $51f5d5cb2648e663$var$BlokBreedte;\n    $51f5d5cb2648e663$var$Lengte = Math.max($51f5d5cb2648e663$var$Lengte, MaxLengte);\n    let MaxBreedteBlokken = $51f5d5cb2648e663$var$AantalBodemPlanken * $51f5d5cb2648e663$var$BlokBreedte;\n    let MaxBreedteDekPlanken = $51f5d5cb2648e663$var$AantalDekPlanken * $51f5d5cb2648e663$var$DekPlankBreedte;\n    $51f5d5cb2648e663$var$Breedte = Math.max($51f5d5cb2648e663$var$Breedte, MaxBreedteBlokken, MaxBreedteDekPlanken);\n    document.getElementById(\"BreedteInput\").value = ($51f5d5cb2648e663$var$Breedte * 1000).toFixed(0);\n    document.getElementById(\"LengteInput\").value = ($51f5d5cb2648e663$var$Lengte * 1000).toFixed(0);\n}\nfunction $51f5d5cb2648e663$var$VerwijderOnderdelen() {\n    // Eerst verwijderen we de oude onderdelen\n    $51f5d5cb2648e663$var$BovenPlanken.forEach((plank)=>$51f5d5cb2648e663$var$scene.remove(plank));\n    $51f5d5cb2648e663$var$TussenPlanken.forEach((plank)=>$51f5d5cb2648e663$var$scene.remove(plank));\n    $51f5d5cb2648e663$var$DekPlanken.forEach((plank)=>$51f5d5cb2648e663$var$scene.remove(plank));\n    $51f5d5cb2648e663$var$Blokken.forEach((blok)=>$51f5d5cb2648e663$var$scene.remove(blok));\n    if ($51f5d5cb2648e663$var$Plaat) $51f5d5cb2648e663$var$scene.remove($51f5d5cb2648e663$var$Plaat);\n}\nfunction $51f5d5cb2648e663$var$OptiePlank() {\n    if (document.getElementById('Uitvoering').value == 'Light') {\n        $51f5d5cb2648e663$var$PlankDikte = 0.015;\n        $51f5d5cb2648e663$var$PlankBreedte = 0.075;\n        $51f5d5cb2648e663$var$BlokHoogte = 0.1;\n        $51f5d5cb2648e663$var$BlokBreedte = 0.08;\n        $51f5d5cb2648e663$var$PlaatDikte = 0.015;\n    } else if (document.getElementById('Uitvoering').value == 'Medium') {\n        $51f5d5cb2648e663$var$PlankDikte = 0.018;\n        $51f5d5cb2648e663$var$PlankBreedte = 0.1;\n        $51f5d5cb2648e663$var$BlokHoogte = 0.1;\n        $51f5d5cb2648e663$var$BlokBreedte = 0.1;\n        $51f5d5cb2648e663$var$PlaatDikte = 0.018;\n    } else if (document.getElementById('Uitvoering').value == 'Heavy') {\n        $51f5d5cb2648e663$var$PlankDikte = 0.022;\n        $51f5d5cb2648e663$var$PlankBreedte = 0.1;\n        $51f5d5cb2648e663$var$BlokHoogte = 0.1;\n        $51f5d5cb2648e663$var$BlokBreedte = 0.1;\n        $51f5d5cb2648e663$var$PlaatDikte = 0.021;\n    }\n    $51f5d5cb2648e663$var$DekPlankHoogte = $51f5d5cb2648e663$var$PlankDikte;\n    $51f5d5cb2648e663$var$DekPlankBreedte = $51f5d5cb2648e663$var$PlankBreedte;\n    $51f5d5cb2648e663$var$BodemPlankHoogte = $51f5d5cb2648e663$var$PlankDikte;\n    $51f5d5cb2648e663$var$BodemPlankBreedte = $51f5d5cb2648e663$var$PlankBreedte;\n    $51f5d5cb2648e663$var$TussenPlankHoogte = $51f5d5cb2648e663$var$PlankDikte;\n    $51f5d5cb2648e663$var$TussenPlankBreedte = $51f5d5cb2648e663$var$PlankBreedte;\n    let PlaatType = document.getElementById(\"PlaatTypeSelect\").value;\n    switch(PlaatType){\n        case \"osb\":\n            $51f5d5cb2648e663$var$PlaatDikte = 0.015;\n            $51f5d5cb2648e663$var$PlaatMateriaal = $51f5d5cb2648e663$var$OSBColorMat;\n            break;\n        case \"multiplex\":\n            $51f5d5cb2648e663$var$PlaatDikte = 0.018;\n            $51f5d5cb2648e663$var$PlaatMateriaal = $51f5d5cb2648e663$var$MultColorMat;\n            break;\n        case \"betonplex\":\n            $51f5d5cb2648e663$var$PlaatDikte = 0.018;\n            $51f5d5cb2648e663$var$PlaatMateriaal = $51f5d5cb2648e663$var$BetonColorMat;\n            break;\n    }\n}\nfunction $51f5d5cb2648e663$var$Bodem_GEN() {\n    //---------------Onderste Planken generenen---------------------------\n    let startX = -($51f5d5cb2648e663$var$Breedte - $51f5d5cb2648e663$var$BodemPlankBreedte) / 2;\n    let spacingX = ($51f5d5cb2648e663$var$Breedte - $51f5d5cb2648e663$var$BodemPlankBreedte) / ($51f5d5cb2648e663$var$AantalBodemPlanken - 1);\n    for(let i = 0; i < $51f5d5cb2648e663$var$AantalBodemPlanken; i++){\n        let xPos = startX + i * spacingX;\n        let BovenPlank = $51f5d5cb2648e663$var$createBoxWithEdges(new $ilwiq.BoxGeometry($51f5d5cb2648e663$var$BodemPlankBreedte, $51f5d5cb2648e663$var$BodemPlankHoogte, $51f5d5cb2648e663$var$Lengte), $51f5d5cb2648e663$var$KeperColorMat);\n        BovenPlank.position.set(xPos, $51f5d5cb2648e663$var$BodemPlankHoogte / 2, 0);\n        $51f5d5cb2648e663$var$scene.add(BovenPlank);\n        $51f5d5cb2648e663$var$BovenPlanken.push(BovenPlank);\n    }\n}\nfunction $51f5d5cb2648e663$var$Blokken_GEN() {\n    //-----------------Blokken genereren op een grid---------------------\n    let startX = -($51f5d5cb2648e663$var$Breedte - $51f5d5cb2648e663$var$BlokBreedte) / 2;\n    let spacingX = ($51f5d5cb2648e663$var$Breedte - $51f5d5cb2648e663$var$BlokBreedte) / ($51f5d5cb2648e663$var$AantalBodemPlanken - 1);\n    let startZ = -($51f5d5cb2648e663$var$Lengte - $51f5d5cb2648e663$var$BlokBreedte) / 2;\n    let spacingZ = ($51f5d5cb2648e663$var$Lengte - $51f5d5cb2648e663$var$BlokBreedte) / ($51f5d5cb2648e663$var$AantalTussenPlanken - 1);\n    for(let i = 0; i < $51f5d5cb2648e663$var$AantalBodemPlanken; i++)for(let j = 0; j < $51f5d5cb2648e663$var$AantalTussenPlanken; j++){\n        let xPos = startX + i * spacingX;\n        let zPos = startZ + j * spacingZ;\n        let blok = $51f5d5cb2648e663$var$createBoxWithEdges(new $ilwiq.BoxGeometry($51f5d5cb2648e663$var$BlokBreedte, $51f5d5cb2648e663$var$BlokHoogte, $51f5d5cb2648e663$var$BlokBreedte), $51f5d5cb2648e663$var$KeperColorMat);\n        blok.position.set(xPos, $51f5d5cb2648e663$var$BodemPlankHoogte + $51f5d5cb2648e663$var$BlokHoogte / 2, zPos);\n        $51f5d5cb2648e663$var$scene.add(blok);\n        $51f5d5cb2648e663$var$Blokken.push(blok);\n    }\n    let OpeningDwars;\n    let OpeningLangs;\n    //Opening uitrekenen en terugsturen naar html\n    if ($51f5d5cb2648e663$var$AantalBodemPlanken % 2 == 0) OpeningDwars = 1 * spacingX - 1 * $51f5d5cb2648e663$var$BlokBreedte;\n    else OpeningDwars = 2 * spacingX - 1 * $51f5d5cb2648e663$var$BlokBreedte;\n    //Opening uitrekenen en terugsturen naar html\n    if ($51f5d5cb2648e663$var$AantalTussenPlanken % 2 == 0) OpeningLangs = 1 * spacingZ - 1 * $51f5d5cb2648e663$var$BlokBreedte;\n    else OpeningLangs = 2 * spacingZ - 1 * $51f5d5cb2648e663$var$BlokBreedte;\n    document.getElementById(\"OpeningDwars\").textContent = (OpeningDwars * 1000).toFixed(0);\n    document.getElementById(\"OpeningLangs\").textContent = (OpeningLangs * 1000).toFixed(0);\n}\nfunction $51f5d5cb2648e663$var$TussenPlanken_GEN() {\n    // TussenPlanken genereren\n    let startZ = -($51f5d5cb2648e663$var$Lengte - $51f5d5cb2648e663$var$TussenPlankBreedte) / 2;\n    let spacingZ = ($51f5d5cb2648e663$var$Lengte - $51f5d5cb2648e663$var$TussenPlankBreedte) / ($51f5d5cb2648e663$var$AantalTussenPlanken - 1);\n    for(let i = 0; i < $51f5d5cb2648e663$var$AantalTussenPlanken; i++){\n        let ZPos = startZ + i * spacingZ;\n        let TussenPlank = $51f5d5cb2648e663$var$createBoxWithEdges(new $ilwiq.BoxGeometry($51f5d5cb2648e663$var$Breedte, $51f5d5cb2648e663$var$TussenPlankHoogte, $51f5d5cb2648e663$var$TussenPlankBreedte), $51f5d5cb2648e663$var$KeperColorMat);\n        TussenPlank.position.set(0, $51f5d5cb2648e663$var$BlokHoogte + $51f5d5cb2648e663$var$BodemPlankHoogte + $51f5d5cb2648e663$var$TussenPlankHoogte / 2, ZPos);\n        $51f5d5cb2648e663$var$scene.add(TussenPlank);\n        $51f5d5cb2648e663$var$TussenPlanken.push(TussenPlank);\n    }\n}\nfunction $51f5d5cb2648e663$var$Dek_GEN() {\n    //*****************plaat als dek***********************\n    if ($51f5d5cb2648e663$var$OptieDekPlaat == true) {\n        $51f5d5cb2648e663$var$Plaat = $51f5d5cb2648e663$var$createBoxWithEdges(new $ilwiq.BoxGeometry($51f5d5cb2648e663$var$Breedte, $51f5d5cb2648e663$var$PlaatDikte, $51f5d5cb2648e663$var$Lengte), $51f5d5cb2648e663$var$PlaatMateriaal);\n        // Positioneren onder de kist\n        $51f5d5cb2648e663$var$Plaat.position.set(0, $51f5d5cb2648e663$var$BlokHoogte + $51f5d5cb2648e663$var$TussenPlankHoogte + $51f5d5cb2648e663$var$BodemPlankHoogte + $51f5d5cb2648e663$var$PlaatDikte / 2, 0);\n        // Toevoegen aan de scene en de array\n        $51f5d5cb2648e663$var$scene.add($51f5d5cb2648e663$var$Plaat);\n    //************spreiding van aantal planken over dek************\n    } else if ($51f5d5cb2648e663$var$OptieDekPlanken == true) {\n        let startZ = -($51f5d5cb2648e663$var$Breedte - $51f5d5cb2648e663$var$DekPlankBreedte) / 2;\n        let endZ = ($51f5d5cb2648e663$var$Breedte - $51f5d5cb2648e663$var$DekPlankBreedte) / 2;\n        const beschikbareLengte = endZ - startZ;\n        const spacing = $51f5d5cb2648e663$var$AantalDekPlanken > 1 ? beschikbareLengte / ($51f5d5cb2648e663$var$AantalDekPlanken - 1) : 0;\n        for(let i = 0; i < $51f5d5cb2648e663$var$AantalDekPlanken; i++){\n            let zPos = startZ + i * spacing;\n            let DekPlank = $51f5d5cb2648e663$var$createBoxWithEdges(new $ilwiq.BoxGeometry($51f5d5cb2648e663$var$DekPlankBreedte, $51f5d5cb2648e663$var$DekPlankHoogte, $51f5d5cb2648e663$var$Lengte), $51f5d5cb2648e663$var$KeperColorMat);\n            // Positioneren onder de kist\n            DekPlank.position.set(zPos, $51f5d5cb2648e663$var$BlokHoogte + $51f5d5cb2648e663$var$BodemPlankHoogte + $51f5d5cb2648e663$var$TussenPlankHoogte + $51f5d5cb2648e663$var$DekPlankHoogte / 2, 0);\n            // Toevoegen aan de scene en de array\n            $51f5d5cb2648e663$var$scene.add(DekPlank);\n            $51f5d5cb2648e663$var$DekPlanken.push(DekPlank);\n        }\n    }\n}\n//-----------------schaduwvlak toevoegen------------------------\nif ($51f5d5cb2648e663$var$ground) $51f5d5cb2648e663$var$scene.remove($51f5d5cb2648e663$var$ground);\n$51f5d5cb2648e663$var$ground = new $ilwiq.Mesh(new $ilwiq.PlaneGeometry(30, 30), new $dyjou.ShadowMaterial({\n    color: 0xD3D3D3\n}));\n$51f5d5cb2648e663$var$ground.rotation.x = -Math.PI / 2;\n$51f5d5cb2648e663$var$ground.receiveShadow = true;\n$51f5d5cb2648e663$var$ground.position.y = -$51f5d5cb2648e663$var$BodemPlankHoogte / 2;\n$51f5d5cb2648e663$var$scene.add($51f5d5cb2648e663$var$ground);\nfunction $51f5d5cb2648e663$var$UpdateModel() {\n    $51f5d5cb2648e663$var$VariabelenInLezen();\n    $51f5d5cb2648e663$var$OptiePlank();\n    $51f5d5cb2648e663$var$VerwijderOnderdelen();\n    $51f5d5cb2648e663$var$Bodem_GEN();\n    $51f5d5cb2648e663$var$Blokken_GEN();\n    $51f5d5cb2648e663$var$TussenPlanken_GEN();\n    $51f5d5cb2648e663$var$Dek_GEN();\n}\n//\nfunction $51f5d5cb2648e663$var$animate() {\n    requestAnimationFrame($51f5d5cb2648e663$var$animate);\n    $51f5d5cb2648e663$var$controls.update();\n    $51f5d5cb2648e663$var$renderer.render($51f5d5cb2648e663$var$scene, $51f5d5cb2648e663$var$camera);\n}\n$51f5d5cb2648e663$var$animate();\n//-------------kist updaten bij aanpassing-----------\nfunction $51f5d5cb2648e663$var$setupEventListeners() {\n    const elements = document.querySelectorAll(\"input, select, textarea\");\n    elements.forEach((el)=>{\n        if (el.tagName === \"INPUT\") {\n            if (el.type === \"range\") // Sliders live update bij input\n            el.addEventListener(\"input\", $51f5d5cb2648e663$var$UpdateModel);\n            else if (el.type === \"text\" || el.type === \"number\") {\n                // Tekst/nummer: update bij blur of Enter\n                el.addEventListener(\"blur\", $51f5d5cb2648e663$var$UpdateModel);\n                el.addEventListener(\"keydown\", (e)=>{\n                    if (e.key === \"Enter\") $51f5d5cb2648e663$var$UpdateModel();\n                });\n            } else if (el.type === \"checkbox\") // Checkbox update bij change\n            el.addEventListener(\"change\", $51f5d5cb2648e663$var$UpdateModel);\n            else if (el.type === \"radio\") // Checkbox update bij change\n            el.addEventListener(\"change\", $51f5d5cb2648e663$var$UpdateModel);\n        } else if (el.tagName === \"SELECT\") // Select update bij change\n        el.addEventListener(\"change\", $51f5d5cb2648e663$var$UpdateModel);\n    });\n}\n$51f5d5cb2648e663$var$UpdateModel();\n// Start eventlisteners\n$51f5d5cb2648e663$var$setupEventListeners();\n\n\n//# sourceMappingURL=pallet.c31de93f.js.map\n","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\n\r\n\r\n\r\n// De scene\r\nvar scene = new THREE.Scene();\r\nscene.background = new THREE.Color('white');\r\n\r\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\r\nconst container = document.getElementById('canvas-container');\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true, powerPreference: \"high-performance\",  canvas: container.querySelector('canvas') });\r\nrenderer.setSize(container.clientWidth, container.clientHeight);\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n// Update canvas bij resize:\r\nwindow.addEventListener('resize', () => {\r\n  const width = container.clientWidth;\r\n  const height = container.clientHeight;\r\n  renderer.setSize(width, height);\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n});\r\n\r\n// Camera die de grootte van de container gebruikt\r\nvar camera = new THREE.PerspectiveCamera(\r\n  70,\r\n  container.clientWidth / container.clientHeight,\r\n  0.1,\r\n  1000\r\n);\r\ncamera.position.set(1,1,1);\r\ncamera.lookAt(scene.position);\r\n\r\n\r\n\r\n\r\n// OrbitControls instellen\r\nvar controls = new OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true; // Schakel demping in voor soepelere beweging\r\ncontrols.dampingFactor = 0.25;\r\ncontrols.screenSpacePanning = false;\r\n\r\n\r\n// Verlichting toevoegen\r\nconst ambientLight = new THREE.AmbientLight(0xf6cd8b, 2.0);\r\nconst light = new THREE.DirectionalLight(0xFFFFFF, 2.0);\r\nlight.position.set(2.5, 5, 5);\r\nlight.castShadow = true;\r\nlight.shadow.mapSize.width = 2048;\r\nlight.shadow.mapSize.height = 2048;\r\nlight.shadow.camera.near = 0.5;\r\nlight.shadow.camera.far = 50;\r\nlight.shadow.camera.left = -10;\r\nlight.shadow.camera.right = 10;\r\nlight.shadow.camera.top = 10;\r\nlight.shadow.camera.bottom = -10;\r\nrenderer.shadowMap.enabled = true;\r\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\r\nscene.add(ambientLight, light);\r\n\r\n//schaduwvlak\r\nlet ground;\r\n\r\n// Voeg een axis helper toe\r\n//scene.add(new THREE.AxesHelper(2));\r\n\r\n//materialen\r\nvar PlaatMateriaal;\r\nconst OSBColorMat = new THREE.MeshStandardMaterial({ color: 0x1b7101 });\r\nconst BetonColorMat = new THREE.MeshStandardMaterial({ color: 0x1f1716 });\r\nconst MultColorMat = new THREE.MeshStandardMaterial({ color: 0xccac74 });\r\n\r\nconst KeperColorMat = new THREE.MeshStandardMaterial({ color: 0xccac74 });\r\n\r\nconst edgeMaterial = new THREE.LineBasicMaterial({ color: 0x000000 });\r\n\r\n\r\n// Functie om een object met randen te maken\r\nfunction createBoxWithEdges(geometry, material) {\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.castShadow = true;\r\n    const edges = new THREE.EdgesGeometry(geometry);\r\n    const line = new THREE.LineSegments(edges, edgeMaterial);\r\n    mesh.add(line);\r\n    return mesh;\r\n}\r\n\r\n\r\n//onderdelen\r\nlet Blokken= [];\r\nlet BovenPlanken= [];\r\nlet TussenPlanken= [];\r\nlet DekPlanken= [];\r\nlet Plaat;\r\n\r\nlet Lengte;\r\nlet Breedte;\r\nlet AantalBodemPlanken;\r\nlet AantalTussenPlanken;\r\nlet AantalDekPlanken;\r\n\r\n\r\nvar OptieDekPlaat;\r\nvar OptieDekPlanken;\r\n\r\nvar Uitvoering;\r\n\r\nlet PlaatDikte = 0.022;\r\n\r\nlet PlankDikte;\r\nlet PlankBreedte;\r\n\r\nlet DekPlankHoogte = 0.022;\r\nlet DekPlankBreedte = 0.100;\r\n\r\nlet BodemPlankHoogte = 0.022;\r\nlet BodemPlankBreedte = 0.100;\r\n\r\nlet TussenPlankHoogte = 0.022;\r\nlet TussenPlankBreedte = 0.100;\r\n\r\nlet\tBlokHoogte = 0.1;\r\nlet\tBlokBreedte = 0.08;\r\n\r\nfunction VariabelenInLezen(){\r\n //input gebruiker ophalen\r\n Lengte = parseFloat(document.getElementById('LengteSlider').value) / 1000;\r\n Breedte = parseFloat(document.getElementById('BreedteSlider').value) / 1000;\r\n AantalBodemPlanken = parseFloat(document.getElementById(\"BodemPlankenInput\").value);\r\n AantalTussenPlanken = parseFloat(document.getElementById(\"TussenPlankenInput\").value);\r\n AantalDekPlanken = parseFloat(document.getElementById('DekPlankenInput').value);\r\n\r\n\r\nOptieDekPlaat = document.getElementById('OptieDekPlaat').checked;\r\nOptieDekPlanken = document.getElementById('OptieDekPlanken').checked;\r\n\r\n var MaxLengte = (AantalTussenPlanken*BlokBreedte);\r\nLengte = Math.max(Lengte,MaxLengte);\r\n\r\n\r\n let MaxBreedteBlokken = (AantalBodemPlanken*BlokBreedte)\r\n let MaxBreedteDekPlanken = (AantalDekPlanken*DekPlankBreedte)\r\n\r\n\r\nBreedte = Math.max(Breedte,MaxBreedteBlokken,MaxBreedteDekPlanken);\r\n\r\n        \r\n\r\ndocument.getElementById(\"BreedteInput\").value = (Breedte*1000).toFixed(0);;\r\ndocument.getElementById(\"LengteInput\").value = (Lengte*1000).toFixed(0);;\r\n\r\n}\r\n\r\n\r\n\r\nfunction VerwijderOnderdelen(){\r\n// Eerst verwijderen we de oude onderdelen\r\nBovenPlanken.forEach(plank => scene.remove(plank));\r\nTussenPlanken.forEach(plank => scene.remove(plank));\r\nDekPlanken.forEach(plank => scene.remove(plank));\r\nBlokken.forEach(blok => scene.remove(blok));\r\nif (Plaat) scene.remove(Plaat);\r\n}\r\n\r\nfunction OptiePlank(){\r\n\r\n\r\n    if (document.getElementById('Uitvoering').value == 'Light'){\r\n        PlankDikte=15/1000;\r\n        PlankBreedte=75/1000;\r\n        BlokHoogte = 0.1;\r\n        BlokBreedte = 0.08;\r\n        PlaatDikte = 0.015;\r\n        }\r\n    else if(document.getElementById('Uitvoering').value == 'Medium'){\r\n        PlankDikte=18/1000;\r\n        PlankBreedte=100/1000;\r\n        BlokHoogte = 0.1;\r\n        BlokBreedte = 0.1;\r\n        PlaatDikte = 0.018;\r\n        }\r\n    else if(document.getElementById('Uitvoering').value == 'Heavy'){\r\n        PlankDikte=22/1000;\r\n        PlankBreedte=100/1000;\r\n        BlokHoogte = 0.1;\r\n        BlokBreedte = 0.1;\r\n        PlaatDikte = 0.021\r\n        }  \r\n\r\n        DekPlankHoogte = PlankDikte;\r\n        DekPlankBreedte = PlankBreedte;\r\n        BodemPlankHoogte = PlankDikte;\r\n        BodemPlankBreedte = PlankBreedte;\r\n        TussenPlankHoogte = PlankDikte;\r\n        TussenPlankBreedte = PlankBreedte;\r\n\r\n    let PlaatType = document.getElementById(\"PlaatTypeSelect\").value;\r\n\r\n\r\n            switch (PlaatType) {\r\n  case \"osb\":\r\n    PlaatDikte = 0.015;\r\n    PlaatMateriaal = OSBColorMat;\r\n    break;\r\n  case \"multiplex\":\r\n    PlaatDikte = 0.018;\r\n    PlaatMateriaal = MultColorMat;\r\n    break;\r\n  case \"betonplex\":\r\n    PlaatDikte = 0.018;\r\n    PlaatMateriaal = BetonColorMat;\r\n    break;\r\n}\r\n\r\n}\r\n\r\nfunction Bodem_GEN(){\r\n//---------------Onderste Planken generenen---------------------------\r\nlet startX = -(Breedte - BodemPlankBreedte) / 2;\r\nlet spacingX = (Breedte - BodemPlankBreedte) / (AantalBodemPlanken - 1);\r\n\r\n\r\n\r\nfor (let i = 0; i < AantalBodemPlanken; i++) {\r\n    let xPos = startX + i * spacingX;\r\n    let BovenPlank = createBoxWithEdges(new THREE.BoxGeometry(BodemPlankBreedte, BodemPlankHoogte, Lengte), KeperColorMat);\r\n    BovenPlank.position.set(xPos,BodemPlankHoogte/2, 0);\r\n    scene.add(BovenPlank);\r\n    BovenPlanken.push(BovenPlank);\r\n}\r\n}\r\n\r\n\r\nfunction Blokken_GEN(){\r\n\r\n//-----------------Blokken genereren op een grid---------------------\r\nlet startX = -(Breedte - BlokBreedte) / 2;\r\nlet spacingX = (Breedte - BlokBreedte) / (AantalBodemPlanken - 1);\r\n\r\nlet startZ = -(Lengte - BlokBreedte) / 2;\r\nlet spacingZ = (Lengte - BlokBreedte) / (AantalTussenPlanken - 1);\r\n\r\n\r\n\r\n\r\n\r\nfor (let i = 0; i < AantalBodemPlanken; i++) {\r\n    for (let j = 0; j < AantalTussenPlanken; j++) {\r\n\r\n        let xPos = startX + i * spacingX;\r\n        let zPos = startZ + j * spacingZ;\r\n\r\n        let blok = createBoxWithEdges(new THREE.BoxGeometry(BlokBreedte, BlokHoogte, BlokBreedte), KeperColorMat);\r\n        blok.position.set(xPos, BodemPlankHoogte + BlokHoogte / 2, zPos);\r\n        scene.add(blok);\r\n        Blokken.push(blok);\r\n    }\r\n}\r\n\r\n    let OpeningDwars\r\n    let OpeningLangs\r\n\r\n  //Opening uitrekenen en terugsturen naar html\r\n    if (AantalBodemPlanken % 2 == 0){\r\n            OpeningDwars = 1*spacingX - 1*BlokBreedte;\r\n    }else{\r\n            OpeningDwars = 2*spacingX - 1* BlokBreedte;\r\n    }\r\n\r\n      //Opening uitrekenen en terugsturen naar html\r\n    if (AantalTussenPlanken % 2 == 0){\r\n            OpeningLangs = 1*spacingZ - 1*BlokBreedte;\r\n    }else{\r\n            OpeningLangs = 2*spacingZ - 1*BlokBreedte;\r\n    }\r\n\r\n    \r\n     \r\n    document.getElementById(\"OpeningDwars\").textContent = (OpeningDwars*1000).toFixed(0);\r\n    document.getElementById(\"OpeningLangs\").textContent = (OpeningLangs*1000).toFixed(0);\r\n\r\n\r\n}\r\n\r\nfunction TussenPlanken_GEN(){\r\n// TussenPlanken genereren\r\n\r\nlet startZ = - (Lengte - TussenPlankBreedte)/2\r\n\r\nlet spacingZ = (Lengte - TussenPlankBreedte) / (AantalTussenPlanken - 1);\r\n\r\n\r\nfor (let i = 0; i < AantalTussenPlanken; i++) {\r\n    let ZPos = startZ + i * spacingZ;\r\n    let TussenPlank = createBoxWithEdges(new THREE.BoxGeometry(Breedte, TussenPlankHoogte, TussenPlankBreedte), KeperColorMat);\r\n    TussenPlank.position.set(0, BlokHoogte + BodemPlankHoogte + TussenPlankHoogte/2, ZPos);\r\n    scene.add(TussenPlank);\r\n    TussenPlanken.push(TussenPlank);\r\n}\r\n}\r\n\r\nfunction Dek_GEN(){\r\n\r\n//*****************plaat als dek***********************\r\n  if(OptieDekPlaat == true){\r\n\r\n\r\n      Plaat = createBoxWithEdges(new THREE.BoxGeometry(Breedte,PlaatDikte,Lengte), PlaatMateriaal);\r\n  \r\n      // Positioneren onder de kist\r\n      Plaat.position.set(0, BlokHoogte + TussenPlankHoogte + BodemPlankHoogte + PlaatDikte/2,0);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(Plaat);\r\n   \r\n  \r\n\r\n//************spreiding van aantal planken over dek************\r\n} else if(OptieDekPlanken == true){\r\n\r\n  \r\n    let startZ = -(Breedte- DekPlankBreedte) / 2;\r\n    let endZ = (Breedte- DekPlankBreedte) / 2;\r\n\r\n\r\n    const beschikbareLengte = endZ - startZ;\r\n    const spacing = (AantalDekPlanken > 1) ? beschikbareLengte / (AantalDekPlanken - 1) : 0;\r\n    \r\n  \r\n    for (let i = 0; i < AantalDekPlanken; i++) {\r\n        let zPos = startZ + i * spacing;\r\n    \r\n        let DekPlank = createBoxWithEdges(new THREE.BoxGeometry(DekPlankBreedte, DekPlankHoogte, Lengte), KeperColorMat);\r\n    \r\n        // Positioneren onder de kist\r\n        DekPlank.position.set(zPos,BlokHoogte + BodemPlankHoogte + TussenPlankHoogte + DekPlankHoogte/2, 0);\r\n    \r\n        // Toevoegen aan de scene en de array\r\n        scene.add(DekPlank);\r\n        DekPlanken.push(DekPlank);\r\n    }\r\n}\r\n}\r\n\r\n//-----------------schaduwvlak toevoegen------------------------\r\nif (ground) scene.remove(ground);\r\nground = new THREE.Mesh(new THREE.PlaneGeometry(30, 30), new THREE.ShadowMaterial({color: 0xD3D3D3}));\r\nground.rotation.x = -Math.PI / 2;\r\nground.receiveShadow = true;\r\nground.position.y = - BodemPlankHoogte/2;\r\nscene.add(ground);\r\n\r\n\r\nfunction UpdateModel(){\r\n\r\n\r\n    VariabelenInLezen();\r\n    OptiePlank();\r\n    VerwijderOnderdelen();\r\n\r\n    Bodem_GEN();\r\n    Blokken_GEN();\r\n    TussenPlanken_GEN();\r\n    Dek_GEN();\r\n\r\n}\r\n//\r\nfunction animate() {\r\n    requestAnimationFrame(animate);\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n  }\r\n  animate();\r\n  \r\n  //-------------kist updaten bij aanpassing-----------\r\nfunction setupEventListeners() {\r\n  const elements = document.querySelectorAll(\"input, select, textarea\");\r\n\r\n  elements.forEach((el) => {\r\n    if (el.tagName === \"INPUT\") {\r\n      if (el.type === \"range\") {\r\n        // Sliders live update bij input\r\n        el.addEventListener(\"input\", UpdateModel);\r\n      } else if (el.type === \"text\" || el.type === \"number\") {\r\n        // Tekst/nummer: update bij blur of Enter\r\n        el.addEventListener(\"blur\", UpdateModel);\r\n        el.addEventListener(\"keydown\", (e) => {\r\n          if (e.key === \"Enter\") UpdateModel();\r\n        });\r\n      } else if (el.type === \"checkbox\") {\r\n        // Checkbox update bij change\r\n        el.addEventListener(\"change\", UpdateModel);\r\n      } \r\n      else if (el.type === \"radio\") {\r\n        // Checkbox update bij change\r\n        el.addEventListener(\"change\", UpdateModel);\r\n      }\r\n    } else if (el.tagName === \"SELECT\") {\r\n      // Select update bij change\r\n      el.addEventListener(\"change\", UpdateModel);\r\n    }\r\n  });\r\n}\r\n\r\n  \r\n  UpdateModel();\r\n  \r\n  // Start eventlisteners\r\n  setupEventListeners();\r\n\r\n\r\n"],"names":["$51f5d5cb2648e663$var$ground","$51f5d5cb2648e663$var$Plaat","$51f5d5cb2648e663$var$Lengte","$51f5d5cb2648e663$var$Breedte","$51f5d5cb2648e663$var$AantalBodemPlanken","$51f5d5cb2648e663$var$AantalTussenPlanken","$51f5d5cb2648e663$var$AantalDekPlanken","$51f5d5cb2648e663$var$PlankDikte","$51f5d5cb2648e663$var$PlankBreedte","$51f5d5cb2648e663$var$PlaatMateriaal","$51f5d5cb2648e663$var$OptieDekPlaat","$51f5d5cb2648e663$var$OptieDekPlanken","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$dyjou","$ilwiq","$5Rd1x","$51f5d5cb2648e663$var$scene","Scene","background","Color","$51f5d5cb2648e663$var$container","document","getElementById","$51f5d5cb2648e663$var$renderer","WebGLRenderer","antialias","alpha","powerPreference","canvas","querySelector","setSize","clientWidth","clientHeight","setPixelRatio","window","devicePixelRatio","addEventListener","width","height","$51f5d5cb2648e663$var$camera","aspect","updateProjectionMatrix","PerspectiveCamera","position","set","lookAt","$51f5d5cb2648e663$var$controls","OrbitControls","domElement","enableDamping","dampingFactor","screenSpacePanning","$51f5d5cb2648e663$var$ambientLight","AmbientLight","$51f5d5cb2648e663$var$light","DirectionalLight","castShadow","shadow","mapSize","camera","near","far","left","right","top","bottom","shadowMap","enabled","type","PCFSoftShadowMap","add","$51f5d5cb2648e663$var$OSBColorMat","MeshStandardMaterial","color","$51f5d5cb2648e663$var$BetonColorMat","$51f5d5cb2648e663$var$MultColorMat","$51f5d5cb2648e663$var$KeperColorMat","$51f5d5cb2648e663$var$edgeMaterial","LineBasicMaterial","$51f5d5cb2648e663$var$createBoxWithEdges","geometry","material","mesh","Mesh","edges","EdgesGeometry","line","LineSegments","$51f5d5cb2648e663$var$Blokken","$51f5d5cb2648e663$var$BovenPlanken","$51f5d5cb2648e663$var$TussenPlanken","$51f5d5cb2648e663$var$DekPlanken","$51f5d5cb2648e663$var$PlaatDikte","$51f5d5cb2648e663$var$DekPlankHoogte","$51f5d5cb2648e663$var$DekPlankBreedte","$51f5d5cb2648e663$var$BodemPlankHoogte","$51f5d5cb2648e663$var$BodemPlankBreedte","$51f5d5cb2648e663$var$TussenPlankHoogte","$51f5d5cb2648e663$var$TussenPlankBreedte","$51f5d5cb2648e663$var$BlokHoogte","$51f5d5cb2648e663$var$BlokBreedte","$51f5d5cb2648e663$var$UpdateModel","parseFloat","value","checked","Math","max","toFixed","forEach","plank","remove","blok","$51f5d5cb2648e663$var$Bodem_GEN","startX","spacingX","i","xPos","BovenPlank","BoxGeometry","push","$51f5d5cb2648e663$var$Blokken_GEN","OpeningDwars","OpeningLangs","startZ","spacingZ","j","zPos","textContent","$51f5d5cb2648e663$var$TussenPlanken_GEN","ZPos","TussenPlank","$51f5d5cb2648e663$var$Dek_GEN","endZ","spacing","beschikbareLengte","DekPlank","PlaneGeometry","ShadowMaterial","rotation","x","PI","receiveShadow","y","$51f5d5cb2648e663$var$animate","requestAnimationFrame","update","render","elements","querySelectorAll","el","tagName","e","key"],"version":3,"file":"pallet.c31de93f.js.map"}