{"mappings":"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","sources":["<anon>","js/Krat_toe.js"],"sourcesContent":["import \"./Massieve_kist.626d928d.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $dyjou = parcelRequire(\"dyjou\");\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $5Rd1x = parcelRequire(\"5Rd1x\");\n// De scene\nvar $b8e56d9f6bee6a06$var$scene = new $dyjou.Scene();\n$b8e56d9f6bee6a06$var$scene.background = new $ilwiq.Color('white');\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\nconst $b8e56d9f6bee6a06$var$container = document.getElementById('canvas-container');\nconst $b8e56d9f6bee6a06$var$renderer = new $ilwiq.WebGLRenderer({\n    antialias: true,\n    alpha: true,\n    powerPreference: \"high-performance\",\n    canvas: $b8e56d9f6bee6a06$var$container.querySelector('canvas')\n});\n$b8e56d9f6bee6a06$var$renderer.setSize($b8e56d9f6bee6a06$var$container.clientWidth, $b8e56d9f6bee6a06$var$container.clientHeight);\n$b8e56d9f6bee6a06$var$renderer.setPixelRatio(window.devicePixelRatio);\n// Update canvas bij resize:\nwindow.addEventListener('resize', ()=>{\n    const width = $b8e56d9f6bee6a06$var$container.clientWidth;\n    const height = $b8e56d9f6bee6a06$var$container.clientHeight;\n    $b8e56d9f6bee6a06$var$renderer.setSize(width, height);\n    $b8e56d9f6bee6a06$var$camera.aspect = width / height;\n    $b8e56d9f6bee6a06$var$camera.updateProjectionMatrix();\n});\n// Camera die de grootte van de container gebruikt\nvar $b8e56d9f6bee6a06$var$camera = new $ilwiq.PerspectiveCamera(70, $b8e56d9f6bee6a06$var$container.clientWidth / $b8e56d9f6bee6a06$var$container.clientHeight, 0.1, 1000);\n$b8e56d9f6bee6a06$var$camera.position.set(1.2, 1.2, 1.2);\n$b8e56d9f6bee6a06$var$camera.lookAt($b8e56d9f6bee6a06$var$scene.position);\n// OrbitControls instellen\nvar $b8e56d9f6bee6a06$var$controls = new (0, $5Rd1x.OrbitControls)($b8e56d9f6bee6a06$var$camera, $b8e56d9f6bee6a06$var$renderer.domElement);\n$b8e56d9f6bee6a06$var$controls.enableDamping = true; // Schakel demping in voor soepelere beweging\n$b8e56d9f6bee6a06$var$controls.dampingFactor = 0.25;\n$b8e56d9f6bee6a06$var$controls.screenSpacePanning = false;\n// Verlichting toevoegen\nconst $b8e56d9f6bee6a06$var$ambientLight = new $dyjou.AmbientLight(0xf6cd8b, 2.0);\nconst $b8e56d9f6bee6a06$var$light = new $dyjou.DirectionalLight(0xFFFFFF, 2.0);\n$b8e56d9f6bee6a06$var$light.position.set(2.5, 5, 5);\n$b8e56d9f6bee6a06$var$light.castShadow = true;\n$b8e56d9f6bee6a06$var$light.shadow.mapSize.width = 2048;\n$b8e56d9f6bee6a06$var$light.shadow.mapSize.height = 2048;\n$b8e56d9f6bee6a06$var$light.shadow.camera.near = 0.5;\n$b8e56d9f6bee6a06$var$light.shadow.camera.far = 50;\n$b8e56d9f6bee6a06$var$light.shadow.camera.left = -10;\n$b8e56d9f6bee6a06$var$light.shadow.camera.right = 10;\n$b8e56d9f6bee6a06$var$light.shadow.camera.top = 10;\n$b8e56d9f6bee6a06$var$light.shadow.camera.bottom = -10;\n$b8e56d9f6bee6a06$var$renderer.shadowMap.enabled = true;\n$b8e56d9f6bee6a06$var$renderer.shadowMap.type = $ilwiq.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\n$b8e56d9f6bee6a06$var$scene.add($b8e56d9f6bee6a06$var$ambientLight, $b8e56d9f6bee6a06$var$light);\n//schaduwvlak\nlet $b8e56d9f6bee6a06$var$ground;\n// Voeg een axis helper toe\n//scene.add(new THREE.AxesHelper(2));\nconst $b8e56d9f6bee6a06$var$OSBColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xA28338\n});\nconst $b8e56d9f6bee6a06$var$KeperColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xa28338\n});\nconst $b8e56d9f6bee6a06$var$LatColorMat = new $dyjou.MeshStandardMaterial({\n    color: 0xccac74\n});\nconst $b8e56d9f6bee6a06$var$edgeMaterial = new $dyjou.LineBasicMaterial({\n    color: 0x000000\n});\n//-------------Functie om een object met randen te maken--------------\nfunction $b8e56d9f6bee6a06$var$createBoxWithEdges(geometry, material) {\n    const mesh = new $ilwiq.Mesh(geometry, material);\n    mesh.castShadow = true;\n    const edges = new $dyjou.EdgesGeometry(geometry);\n    const line = new $dyjou.LineSegments(edges, $b8e56d9f6bee6a06$var$edgeMaterial);\n    mesh.add(line);\n    return mesh;\n}\n//--------onderdelen------------\nlet $b8e56d9f6bee6a06$var$Kepers = [];\nlet $b8e56d9f6bee6a06$var$DekPlanken = [];\nlet $b8e56d9f6bee6a06$var$DekPlaten = [];\nlet $b8e56d9f6bee6a06$var$Koppen = [];\nlet $b8e56d9f6bee6a06$var$ZijKanten = [];\nlet $b8e56d9f6bee6a06$var$ZijkantRegels = [];\nlet $b8e56d9f6bee6a06$var$ZijkantStaanders = [];\nlet $b8e56d9f6bee6a06$var$KopStaanders = [];\nlet $b8e56d9f6bee6a06$var$KopRegels = [];\nlet $b8e56d9f6bee6a06$var$DekselLiggers = [];\nlet $b8e56d9f6bee6a06$var$Deksels = [];\n//----Variabelen-----\nlet $b8e56d9f6bee6a06$var$Lengte;\nlet $b8e56d9f6bee6a06$var$Breedte;\nlet $b8e56d9f6bee6a06$var$Hoogte;\nlet $b8e56d9f6bee6a06$var$AantalKepersIn;\nlet $b8e56d9f6bee6a06$var$AantalDekPlanken;\nlet $b8e56d9f6bee6a06$var$KeperAfstand;\nlet $b8e56d9f6bee6a06$var$KeperAantal;\nlet $b8e56d9f6bee6a06$var$PlaatDikte = 0.005;\nlet $b8e56d9f6bee6a06$var$PlankDikte = 0.02;\nlet $b8e56d9f6bee6a06$var$PlankBreedte = 0.075;\nlet $b8e56d9f6bee6a06$var$KeperBreedte = 0.05;\nlet $b8e56d9f6bee6a06$var$KeperHoogte = 0.1;\nlet $b8e56d9f6bee6a06$var$DekPlankBreedte = 0.075;\nlet $b8e56d9f6bee6a06$var$DekPlankHoogte = 0.018;\nlet $b8e56d9f6bee6a06$var$KeperKopAfstand = 0.1;\nlet $b8e56d9f6bee6a06$var$MaxOverSpanning = 0.6;\nlet $b8e56d9f6bee6a06$var$KopDikte = $b8e56d9f6bee6a06$var$PlaatDikte + $b8e56d9f6bee6a06$var$PlankDikte;\nvar $b8e56d9f6bee6a06$var$StartZ;\nvar $b8e56d9f6bee6a06$var$Spacing;\nvar $b8e56d9f6bee6a06$var$KeperHefAfstand;\nlet $b8e56d9f6bee6a06$var$PlaatBreedte = 1.2;\nlet $b8e56d9f6bee6a06$var$PlaatLengte = 2.4;\n//***************Variabelen inlezen******************\nfunction $b8e56d9f6bee6a06$var$VariabelenInlezen() {\n    $b8e56d9f6bee6a06$var$Lengte = parseFloat(document.getElementById('LengteInput').value) / 1000;\n    $b8e56d9f6bee6a06$var$Breedte = parseFloat(document.getElementById('BreedteInput').value) / 1000;\n    $b8e56d9f6bee6a06$var$Hoogte = parseFloat(document.getElementById('HoogteInput').value) / 1000;\n    $b8e56d9f6bee6a06$var$AantalKepersIn = parseFloat(document.getElementById('KeperAantalInput').value);\n    $b8e56d9f6bee6a06$var$AantalDekPlanken = parseFloat(document.getElementById('DekPlankenInput').value);\n    $b8e56d9f6bee6a06$var$KeperAfstand = parseFloat(document.getElementById('KeperAfstandInput').value) / 1000;\n    //afmetingen beperken\n    $b8e56d9f6bee6a06$var$Lengte = Math.max($b8e56d9f6bee6a06$var$Lengte, $b8e56d9f6bee6a06$var$AantalKepersIn * $b8e56d9f6bee6a06$var$PlankBreedte - 2 * $b8e56d9f6bee6a06$var$KopDikte);\n    $b8e56d9f6bee6a06$var$Breedte = Math.max($b8e56d9f6bee6a06$var$Breedte, $b8e56d9f6bee6a06$var$AantalDekPlanken * $b8e56d9f6bee6a06$var$DekPlankBreedte);\n    $b8e56d9f6bee6a06$var$Lengte = Math.round($b8e56d9f6bee6a06$var$Lengte * 100) / 100;\n    $b8e56d9f6bee6a06$var$Breedte = Math.round($b8e56d9f6bee6a06$var$Breedte * 100) / 100;\n    $b8e56d9f6bee6a06$var$Hoogte = Math.round($b8e56d9f6bee6a06$var$Hoogte * 100) / 100;\n    console.log($b8e56d9f6bee6a06$var$Lengte);\n    //overmeten maat\n    let LLengte = $b8e56d9f6bee6a06$var$Lengte + 2 * $b8e56d9f6bee6a06$var$KopDikte;\n    let BBreedte = $b8e56d9f6bee6a06$var$Breedte + 2 * $b8e56d9f6bee6a06$var$PlaatDikte;\n    let HHoogte = $b8e56d9f6bee6a06$var$Hoogte + 2 * $b8e56d9f6bee6a06$var$PlaatDikte + $b8e56d9f6bee6a06$var$PlankDikte + $b8e56d9f6bee6a06$var$KeperHoogte;\n    document.getElementById(\"LLengte\").textContent = (LLengte * 1000).toFixed(0);\n    document.getElementById(\"BBreedte\").textContent = (BBreedte * 1000).toFixed(0);\n    document.getElementById(\"HHoogte\").textContent = (HHoogte * 1000).toFixed(0);\n    //Variabelen Lengte,Breedte, Hoogte schrijven naar de HTML waarden.\n    document.getElementById(\"BreedteInput\").value = ($b8e56d9f6bee6a06$var$Breedte * 1000).toFixed(0);\n    document.getElementById(\"LengteInput\").value = ($b8e56d9f6bee6a06$var$Lengte * 1000).toFixed(0);\n    document.getElementById(\"HoogteInput\").value = ($b8e56d9f6bee6a06$var$Hoogte * 1000).toFixed(0);\n}\n//***************oude onderdelenen verwijderen******************\nfunction $b8e56d9f6bee6a06$var$OnderdelenDeleten() {\n    $b8e56d9f6bee6a06$var$Kepers.forEach((a)=>$b8e56d9f6bee6a06$var$scene.remove(a));\n    $b8e56d9f6bee6a06$var$ZijkantStaanders.forEach((a)=>$b8e56d9f6bee6a06$var$scene.remove(a));\n    $b8e56d9f6bee6a06$var$ZijkantRegels.forEach((a)=>$b8e56d9f6bee6a06$var$scene.remove(a));\n    $b8e56d9f6bee6a06$var$DekselLiggers.forEach((a)=>$b8e56d9f6bee6a06$var$scene.remove(a));\n    $b8e56d9f6bee6a06$var$KopStaanders.forEach((a)=>$b8e56d9f6bee6a06$var$scene.remove(a));\n    $b8e56d9f6bee6a06$var$KopRegels.forEach((a)=>$b8e56d9f6bee6a06$var$scene.remove(a));\n    $b8e56d9f6bee6a06$var$DekPlanken.forEach((a)=>$b8e56d9f6bee6a06$var$scene.remove(a));\n    $b8e56d9f6bee6a06$var$DekPlaten.forEach((a)=>$b8e56d9f6bee6a06$var$scene.remove(a));\n    $b8e56d9f6bee6a06$var$Koppen.forEach((a)=>$b8e56d9f6bee6a06$var$scene.remove(a));\n    $b8e56d9f6bee6a06$var$ZijKanten.forEach((a)=>$b8e56d9f6bee6a06$var$scene.remove(a));\n    $b8e56d9f6bee6a06$var$Deksels.forEach((a)=>$b8e56d9f6bee6a06$var$scene.remove(a));\n}\n//-------------Functie om een object met randen te maken--------------\nfunction $b8e56d9f6bee6a06$var$createBoxWithEdges(geometry, material) {\n    const mesh = new $ilwiq.Mesh(geometry, material);\n    mesh.castShadow = true;\n    const edges = new $dyjou.EdgesGeometry(geometry);\n    const line = new $dyjou.LineSegments(edges, $b8e56d9f6bee6a06$var$edgeMaterial);\n    mesh.add(line);\n    return mesh;\n}\nfunction $b8e56d9f6bee6a06$var$DekPlanken_GEN() {\n    //---------------DekPlanken---------------------------\n    let startX = -($b8e56d9f6bee6a06$var$Breedte - $b8e56d9f6bee6a06$var$DekPlankBreedte) / 2;\n    let spacingX = ($b8e56d9f6bee6a06$var$Breedte - $b8e56d9f6bee6a06$var$DekPlankBreedte) / ($b8e56d9f6bee6a06$var$AantalDekPlanken - 1);\n    for(let i = 0; i < $b8e56d9f6bee6a06$var$AantalDekPlanken; i++){\n        let xPos = startX + i * spacingX;\n        let DekPlank = $b8e56d9f6bee6a06$var$createBoxWithEdges(new $ilwiq.BoxGeometry($b8e56d9f6bee6a06$var$DekPlankBreedte, $b8e56d9f6bee6a06$var$DekPlankHoogte, $b8e56d9f6bee6a06$var$Lengte + 2 * $b8e56d9f6bee6a06$var$KopDikte), $b8e56d9f6bee6a06$var$LatColorMat);\n        DekPlank.position.set(xPos, -$b8e56d9f6bee6a06$var$DekPlankHoogte / 2 - $b8e56d9f6bee6a06$var$PlaatDikte, 0);\n        $b8e56d9f6bee6a06$var$scene.add(DekPlank);\n        $b8e56d9f6bee6a06$var$DekPlanken.push(DekPlank);\n    }\n}\nfunction $b8e56d9f6bee6a06$var$DekPlaten_GEN() {\n    let DekPlaat = $b8e56d9f6bee6a06$var$createBoxWithEdges(new $ilwiq.BoxGeometry($b8e56d9f6bee6a06$var$Breedte, $b8e56d9f6bee6a06$var$PlaatDikte, $b8e56d9f6bee6a06$var$Lengte + 2 * $b8e56d9f6bee6a06$var$KopDikte), $b8e56d9f6bee6a06$var$OSBColorMat);\n    DekPlaat.position.set(0, -$b8e56d9f6bee6a06$var$PlaatDikte / 2, 0);\n    $b8e56d9f6bee6a06$var$DekPlaten.push(DekPlaat);\n    $b8e56d9f6bee6a06$var$scene.add(DekPlaat);\n}\nfunction $b8e56d9f6bee6a06$var$Keper_GEN() {\n    if (document.getElementById('KeperAfstandCheck').checked == false) {\n        $b8e56d9f6bee6a06$var$KeperAantal = Math.max(2, Math.ceil(($b8e56d9f6bee6a06$var$Lengte + 2 * $b8e56d9f6bee6a06$var$KopDikte - 2 * $b8e56d9f6bee6a06$var$KeperKopAfstand) / $b8e56d9f6bee6a06$var$MaxOverSpanning));\n        $b8e56d9f6bee6a06$var$StartZ = -$b8e56d9f6bee6a06$var$Lengte / 2 - $b8e56d9f6bee6a06$var$KopDikte + $b8e56d9f6bee6a06$var$KeperKopAfstand + $b8e56d9f6bee6a06$var$KeperBreedte / 2;\n        $b8e56d9f6bee6a06$var$Spacing = -2 * (-$b8e56d9f6bee6a06$var$Lengte / 2 - $b8e56d9f6bee6a06$var$KopDikte + $b8e56d9f6bee6a06$var$KeperKopAfstand + $b8e56d9f6bee6a06$var$KeperBreedte / 2) / ($b8e56d9f6bee6a06$var$KeperAantal - 1);\n    } else {\n        $b8e56d9f6bee6a06$var$KeperAantal = $b8e56d9f6bee6a06$var$AantalKepersIn;\n        $b8e56d9f6bee6a06$var$KeperAantal = Math.max(2, $b8e56d9f6bee6a06$var$KeperAantal);\n        document.getElementById('KeperAantalInput').value = $b8e56d9f6bee6a06$var$KeperAantal; // Terugsturen van de Aantalkeper waarde naar HTML\n        $b8e56d9f6bee6a06$var$KeperAfstand = Math.min($b8e56d9f6bee6a06$var$Lengte, $b8e56d9f6bee6a06$var$KeperAfstand); //KeperAfstand zijn maximum waarde begrenzen\n        $b8e56d9f6bee6a06$var$KeperAfstand = Math.max($b8e56d9f6bee6a06$var$KeperAfstand, $b8e56d9f6bee6a06$var$KeperAantal * $b8e56d9f6bee6a06$var$KeperBreedte) //KeperAfstand zijn minimum begrenzen\n        ;\n        document.getElementById('KeperAfstandSlider').max = $b8e56d9f6bee6a06$var$Lengte * 1000; //De maximum waade van de slider terugsturen naar html\n        document.getElementById('KeperAfstandSlider').min = $b8e56d9f6bee6a06$var$KeperAantal * $b8e56d9f6bee6a06$var$KeperBreedte * 1000; //De miniumum waarde van de slider terugsturen naar HTML\n        document.getElementById('KeperAfstandInput').value = ($b8e56d9f6bee6a06$var$KeperAfstand * 1000).toFixed(0); // De value van KeperAfstand terugsturen zodat deze aanpast aan de gestelde grenzen\n        $b8e56d9f6bee6a06$var$KeperAfstand = $b8e56d9f6bee6a06$var$KeperAfstand - $b8e56d9f6bee6a06$var$KeperBreedte; // Compenseren voor de keperbreedte\n        var MinAfstand = ($b8e56d9f6bee6a06$var$KeperAantal - 1) * $b8e56d9f6bee6a06$var$PlankBreedte;\n        $b8e56d9f6bee6a06$var$StartZ = -Math.max($b8e56d9f6bee6a06$var$KeperAfstand / 2, MinAfstand / 2);\n        $b8e56d9f6bee6a06$var$Spacing = Math.max($b8e56d9f6bee6a06$var$KeperAfstand, MinAfstand) / ($b8e56d9f6bee6a06$var$KeperAantal - 1);\n        console.log($b8e56d9f6bee6a06$var$KopDikte * 2000);\n    }\n    // Kepers genereren\n    for(let i = 0; i < $b8e56d9f6bee6a06$var$KeperAantal; i++){\n        let zPos = $b8e56d9f6bee6a06$var$StartZ + i * $b8e56d9f6bee6a06$var$Spacing;\n        let Keper = $b8e56d9f6bee6a06$var$createBoxWithEdges(new $ilwiq.BoxGeometry($b8e56d9f6bee6a06$var$Breedte + 2 * $b8e56d9f6bee6a06$var$PlaatDikte, $b8e56d9f6bee6a06$var$KeperHoogte, $b8e56d9f6bee6a06$var$KeperBreedte), $b8e56d9f6bee6a06$var$KeperColorMat);\n        // Positioneren onder de kist\n        Keper.position.set(0, -$b8e56d9f6bee6a06$var$PlaatDikte - $b8e56d9f6bee6a06$var$DekPlankHoogte - $b8e56d9f6bee6a06$var$KeperHoogte / 2, zPos);\n        // Toevoegen aan de scene en de array\n        $b8e56d9f6bee6a06$var$scene.add(Keper);\n        $b8e56d9f6bee6a06$var$Kepers.push(Keper);\n    }\n    //hefafstand uitrekenen en terugsturen naar html\n    if ($b8e56d9f6bee6a06$var$KeperAantal % 2 == 0) $b8e56d9f6bee6a06$var$KeperHefAfstand = $b8e56d9f6bee6a06$var$Spacing - $b8e56d9f6bee6a06$var$KeperBreedte;\n    else $b8e56d9f6bee6a06$var$KeperHefAfstand = 2 * $b8e56d9f6bee6a06$var$Spacing - 2 * $b8e56d9f6bee6a06$var$KeperBreedte;\n    document.getElementById(\"KeperHefAfstand\").textContent = ($b8e56d9f6bee6a06$var$KeperHefAfstand * 1000).toFixed(0);\n}\nfunction $b8e56d9f6bee6a06$var$Koppen_GEN() {\n    //-----------------------koppen-----------------------------\n    // Positie van de plaat instellen\n    for (let richting of [\n        1,\n        -1\n    ]){\n        let Kop = $b8e56d9f6bee6a06$var$createBoxWithEdges(new $ilwiq.BoxGeometry($b8e56d9f6bee6a06$var$Breedte, $b8e56d9f6bee6a06$var$Hoogte, $b8e56d9f6bee6a06$var$PlaatDikte), $b8e56d9f6bee6a06$var$OSBColorMat);\n        Kop.position.set(0, $b8e56d9f6bee6a06$var$Hoogte / 2, richting * ($b8e56d9f6bee6a06$var$Lengte + $b8e56d9f6bee6a06$var$PlaatDikte) / 2);\n        // Toevoegen aan de scene en de array\n        $b8e56d9f6bee6a06$var$scene.add(Kop);\n        $b8e56d9f6bee6a06$var$Koppen.push(Kop);\n    }\n    //----------Staanders-------------\n    for(let i = 0; i < 4; i++){\n        // Maak een staander\n        let Staander = $b8e56d9f6bee6a06$var$createBoxWithEdges(new $ilwiq.BoxGeometry($b8e56d9f6bee6a06$var$PlankBreedte, $b8e56d9f6bee6a06$var$Hoogte, $b8e56d9f6bee6a06$var$PlankDikte), $b8e56d9f6bee6a06$var$LatColorMat);\n        // Bepaal de x- en z-positie voor de vier hoeken\n        let xPositie = i === 0 || i === 1 ? $b8e56d9f6bee6a06$var$Breedte / 2 - $b8e56d9f6bee6a06$var$PlankBreedte / 2 : -($b8e56d9f6bee6a06$var$Breedte / 2 - $b8e56d9f6bee6a06$var$PlankBreedte / 2);\n        let zPositie = i === 0 || i === 2 ? $b8e56d9f6bee6a06$var$Lengte / 2 + $b8e56d9f6bee6a06$var$PlaatDikte + $b8e56d9f6bee6a06$var$PlankDikte / 2 : -($b8e56d9f6bee6a06$var$Lengte / 2 + $b8e56d9f6bee6a06$var$PlaatDikte + $b8e56d9f6bee6a06$var$PlankDikte / 2);\n        // Positie van de staander instellen\n        Staander.position.set(xPositie, $b8e56d9f6bee6a06$var$Hoogte / 2, zPositie);\n        // Toevoegen aan de scene en de array\n        $b8e56d9f6bee6a06$var$scene.add(Staander);\n        $b8e56d9f6bee6a06$var$KopStaanders.push(Staander);\n    }\n    //----------regels------------\n    for(let i = 0; i < 4; i++){\n        // Maak een regel\n        let Regel = $b8e56d9f6bee6a06$var$createBoxWithEdges(new $ilwiq.BoxGeometry($b8e56d9f6bee6a06$var$Breedte - 2 * $b8e56d9f6bee6a06$var$PlankBreedte, $b8e56d9f6bee6a06$var$PlankBreedte, $b8e56d9f6bee6a06$var$PlankDikte), $b8e56d9f6bee6a06$var$LatColorMat);\n        // Bepaal de x- en z-positie voor de vier hoeken\n        let yPositie = i === 0 || i === 1 ? $b8e56d9f6bee6a06$var$Hoogte - $b8e56d9f6bee6a06$var$PlankBreedte / 2 : $b8e56d9f6bee6a06$var$PlankBreedte / 2;\n        let zPositie = i === 0 || i === 2 ? $b8e56d9f6bee6a06$var$Lengte / 2 + $b8e56d9f6bee6a06$var$KopDikte - $b8e56d9f6bee6a06$var$PlankDikte / 2 : -($b8e56d9f6bee6a06$var$Lengte / 2 + $b8e56d9f6bee6a06$var$KopDikte - $b8e56d9f6bee6a06$var$PlankDikte / 2);\n        // Positie van de staander instellen\n        Regel.position.set(0, yPositie, zPositie);\n        // Toevoegen aan de scene en de array\n        $b8e56d9f6bee6a06$var$scene.add(Regel);\n        $b8e56d9f6bee6a06$var$KopRegels.push(Regel);\n    }\n}\nfunction $b8e56d9f6bee6a06$var$ZijKanten_GEN() {\n    //----------------zijkanten-------------\n    const ZijKantBreedte = $b8e56d9f6bee6a06$var$Lengte + 2 * $b8e56d9f6bee6a06$var$KopDikte;\n    const ZijKantHoogte = $b8e56d9f6bee6a06$var$Hoogte + $b8e56d9f6bee6a06$var$PlaatDikte + $b8e56d9f6bee6a06$var$DekPlankHoogte;\n    for (let richting of [\n        1,\n        -1\n    ]){\n        let ZijKant = $b8e56d9f6bee6a06$var$createBoxWithEdges(new $ilwiq.BoxGeometry($b8e56d9f6bee6a06$var$PlaatDikte, ZijKantHoogte, ZijKantBreedte), $b8e56d9f6bee6a06$var$OSBColorMat);\n        ZijKant.position.set(richting * ($b8e56d9f6bee6a06$var$Breedte + $b8e56d9f6bee6a06$var$PlaatDikte) / 2, -($b8e56d9f6bee6a06$var$PlaatDikte + $b8e56d9f6bee6a06$var$DekPlankHoogte) / 2 + $b8e56d9f6bee6a06$var$Hoogte / 2, 0);\n        // Toevoegen aan de scene en de array\n        $b8e56d9f6bee6a06$var$scene.add(ZijKant);\n        $b8e56d9f6bee6a06$var$ZijKanten.push(ZijKant);\n    }\n    //---------------Zijkant Staanders---------------\n    for(let i = 0; i < $b8e56d9f6bee6a06$var$KeperAantal; i++){\n        const hoogteStaander = $b8e56d9f6bee6a06$var$Hoogte + $b8e56d9f6bee6a06$var$PlaatDikte + $b8e56d9f6bee6a06$var$KeperHoogte / 2 - $b8e56d9f6bee6a06$var$PlankBreedte / 2;\n        const yPos = $b8e56d9f6bee6a06$var$Hoogte - hoogteStaander / 2 - $b8e56d9f6bee6a06$var$PlankBreedte;\n        const zPos = $b8e56d9f6bee6a06$var$StartZ + i * $b8e56d9f6bee6a06$var$Spacing;\n        const xOffset = ($b8e56d9f6bee6a06$var$Breedte + $b8e56d9f6bee6a06$var$PlankDikte) / 2 + $b8e56d9f6bee6a06$var$PlaatDikte;\n        for (let richting of [\n            1,\n            -1\n        ]){\n            const ZijkantStaander = $b8e56d9f6bee6a06$var$createBoxWithEdges(new $ilwiq.BoxGeometry($b8e56d9f6bee6a06$var$PlankDikte, hoogteStaander, $b8e56d9f6bee6a06$var$PlankBreedte), $b8e56d9f6bee6a06$var$LatColorMat);\n            ZijkantStaander.position.set(richting * xOffset, yPos, zPos);\n            $b8e56d9f6bee6a06$var$scene.add(ZijkantStaander);\n            $b8e56d9f6bee6a06$var$ZijkantStaanders.push(ZijkantStaander);\n        }\n    }\n    //------------Zijkant Regels----------------\n    for (let richting of [\n        1,\n        -1\n    ]){\n        let ZijKantRegel = $b8e56d9f6bee6a06$var$createBoxWithEdges(new $ilwiq.BoxGeometry($b8e56d9f6bee6a06$var$PlankDikte, $b8e56d9f6bee6a06$var$PlankBreedte, $b8e56d9f6bee6a06$var$Lengte + 2 * $b8e56d9f6bee6a06$var$KopDikte), $b8e56d9f6bee6a06$var$LatColorMat);\n        ZijKantRegel.position.set(richting * (($b8e56d9f6bee6a06$var$Breedte + $b8e56d9f6bee6a06$var$PlankDikte) / 2 + $b8e56d9f6bee6a06$var$PlaatDikte), $b8e56d9f6bee6a06$var$Hoogte - $b8e56d9f6bee6a06$var$PlankBreedte / 2, 0);\n        // Toevoegen aan de scene en de array\n        $b8e56d9f6bee6a06$var$scene.add(ZijKantRegel);\n        $b8e56d9f6bee6a06$var$ZijkantRegels.push(ZijKantRegel);\n    }\n}\nfunction $b8e56d9f6bee6a06$var$Deksel_GEN() {\n    let Deksel = $b8e56d9f6bee6a06$var$createBoxWithEdges(new $ilwiq.BoxGeometry($b8e56d9f6bee6a06$var$Breedte + 2 * $b8e56d9f6bee6a06$var$PlaatDikte + 2 * $b8e56d9f6bee6a06$var$PlankDikte, $b8e56d9f6bee6a06$var$PlaatDikte, $b8e56d9f6bee6a06$var$Lengte + 2 * $b8e56d9f6bee6a06$var$KopDikte), $b8e56d9f6bee6a06$var$OSBColorMat);\n    Deksel.position.set(0, $b8e56d9f6bee6a06$var$Hoogte + $b8e56d9f6bee6a06$var$PlaatDikte / 2, 0);\n    $b8e56d9f6bee6a06$var$Deksels.push(Deksel);\n    $b8e56d9f6bee6a06$var$scene.add(Deksel);\n    //---------versteveging deksel-----------------\n    for(let i = 0; i < $b8e56d9f6bee6a06$var$KeperAantal; i++){\n        let zPos = $b8e56d9f6bee6a06$var$StartZ + i * $b8e56d9f6bee6a06$var$Spacing;\n        let Ligger = $b8e56d9f6bee6a06$var$createBoxWithEdges(new $ilwiq.BoxGeometry($b8e56d9f6bee6a06$var$Breedte + 2 * $b8e56d9f6bee6a06$var$PlankDikte + 2 * $b8e56d9f6bee6a06$var$PlaatDikte, $b8e56d9f6bee6a06$var$PlankDikte, $b8e56d9f6bee6a06$var$PlankBreedte), $b8e56d9f6bee6a06$var$LatColorMat);\n        // Positioneren onder de kist\n        Ligger.position.set(0, $b8e56d9f6bee6a06$var$Hoogte + $b8e56d9f6bee6a06$var$PlankDikte / 2 + $b8e56d9f6bee6a06$var$PlaatDikte, zPos);\n        // Toevoegen aan de scene en de array\n        $b8e56d9f6bee6a06$var$scene.add(Ligger);\n        $b8e56d9f6bee6a06$var$DekselLiggers.push(Ligger);\n    }\n}\n//-----------------schaduwvlak toevoegen------------------------\nif ($b8e56d9f6bee6a06$var$ground) $b8e56d9f6bee6a06$var$scene.remove($b8e56d9f6bee6a06$var$ground);\n$b8e56d9f6bee6a06$var$ground = new $ilwiq.Mesh(new $ilwiq.PlaneGeometry(30, 30), new $dyjou.ShadowMaterial({\n    color: 0xD3D3D3\n}));\n$b8e56d9f6bee6a06$var$ground.rotation.x = -Math.PI / 2;\n$b8e56d9f6bee6a06$var$ground.receiveShadow = true;\n$b8e56d9f6bee6a06$var$ground.position.y = -$b8e56d9f6bee6a06$var$KeperHoogte - $b8e56d9f6bee6a06$var$PlaatDikte - $b8e56d9f6bee6a06$var$PlankDikte;\n$b8e56d9f6bee6a06$var$scene.add($b8e56d9f6bee6a06$var$ground);\nfunction $b8e56d9f6bee6a06$var$UpdateModel() {\n    $b8e56d9f6bee6a06$var$OnderdelenDeleten();\n    $b8e56d9f6bee6a06$var$VariabelenInlezen();\n    $b8e56d9f6bee6a06$var$DekPlanken_GEN();\n    $b8e56d9f6bee6a06$var$DekPlaten_GEN();\n    $b8e56d9f6bee6a06$var$Keper_GEN();\n    $b8e56d9f6bee6a06$var$Koppen_GEN();\n    $b8e56d9f6bee6a06$var$ZijKanten_GEN();\n    if (document.getElementById('DekselVerbergenCheck').checked == false) $b8e56d9f6bee6a06$var$Deksel_GEN();\n}\n//---------animatie starten------------\nfunction $b8e56d9f6bee6a06$var$animate() {\n    requestAnimationFrame($b8e56d9f6bee6a06$var$animate);\n    $b8e56d9f6bee6a06$var$controls.update();\n    $b8e56d9f6bee6a06$var$renderer.render($b8e56d9f6bee6a06$var$scene, $b8e56d9f6bee6a06$var$camera);\n}\n$b8e56d9f6bee6a06$var$animate();\n//-------------kist updaten bij aanpassing-----------\nfunction $b8e56d9f6bee6a06$var$setupEventListeners() {\n    const elements = document.querySelectorAll(\"input, select, textarea\");\n    elements.forEach((el)=>{\n        if (el.tagName === \"INPUT\") {\n            if (el.type === \"range\") // Sliders live update bij input\n            el.addEventListener(\"input\", $b8e56d9f6bee6a06$var$UpdateModel);\n            else if (el.type === \"text\" || el.type === \"number\") {\n                // Tekst/nummer: update bij blur of Enter\n                el.addEventListener(\"blur\", $b8e56d9f6bee6a06$var$UpdateModel);\n                el.addEventListener(\"keydown\", (e)=>{\n                    if (e.key === \"Enter\") $b8e56d9f6bee6a06$var$UpdateModel();\n                });\n            } else if (el.type === \"checkbox\") // Checkbox update bij change\n            el.addEventListener(\"change\", $b8e56d9f6bee6a06$var$UpdateModel);\n        } else if (el.tagName === \"SELECT\") // Select update bij change\n        el.addEventListener(\"change\", $b8e56d9f6bee6a06$var$UpdateModel);\n    });\n}\n$b8e56d9f6bee6a06$var$setupEventListeners();\n$b8e56d9f6bee6a06$var$VariabelenInlezen();\n$b8e56d9f6bee6a06$var$UpdateModel();\n\n\n//# sourceMappingURL=Krat_toe.b43fea0a.js.map\n","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\n\r\n\r\n// De scene\r\nvar scene = new THREE.Scene();\r\nscene.background = new THREE.Color('white');\r\n\r\n// Renderer die de grootte van de container gebruikt en daarin wordt geplaatst\r\nconst container = document.getElementById('canvas-container');\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true, powerPreference: \"high-performance\",  canvas: container.querySelector('canvas') });\r\nrenderer.setSize(container.clientWidth, container.clientHeight);\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n// Update canvas bij resize:\r\nwindow.addEventListener('resize', () => {\r\n  const width = container.clientWidth;\r\n  const height = container.clientHeight;\r\n  renderer.setSize(width, height);\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n});\r\n\r\n// Camera die de grootte van de container gebruikt\r\nvar camera = new THREE.PerspectiveCamera(\r\n  70,\r\n  container.clientWidth / container.clientHeight,\r\n  0.1,\r\n  1000\r\n);\r\ncamera.position.set(1.2, 1.2, 1.2);\r\ncamera.lookAt(scene.position);\r\n\r\n\r\n\r\n// OrbitControls instellen\r\nvar controls = new OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true; // Schakel demping in voor soepelere beweging\r\ncontrols.dampingFactor = 0.25;\r\ncontrols.screenSpacePanning = false;\r\n\r\n\r\n// Verlichting toevoegen\r\nconst ambientLight = new THREE.AmbientLight(0xf6cd8b, 2.0);\r\nconst light = new THREE.DirectionalLight(0xFFFFFF, 2.0);\r\nlight.position.set(2.5, 5, 5);\r\nlight.castShadow = true;\r\nlight.shadow.mapSize.width = 2048;\r\nlight.shadow.mapSize.height = 2048;\r\nlight.shadow.camera.near = 0.5;\r\nlight.shadow.camera.far = 50;\r\nlight.shadow.camera.left = -10;\r\nlight.shadow.camera.right = 10;\r\nlight.shadow.camera.top = 10;\r\nlight.shadow.camera.bottom = -10;\r\nrenderer.shadowMap.enabled = true;\r\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap; // Dit zorgt voor zachte schaduwen\r\nscene.add(ambientLight, light);\r\n\r\n\r\n\r\n\r\n//schaduwvlak\r\nlet ground;\r\n\r\n// Voeg een axis helper toe\r\n//scene.add(new THREE.AxesHelper(2));\r\n\r\n\r\nconst OSBColorMat = new THREE.MeshStandardMaterial({ color:0xA28338 });\r\nconst KeperColorMat = new THREE.MeshStandardMaterial({ color: 0xa28338 });\r\nconst LatColorMat = new THREE.MeshStandardMaterial({ color: 0xccac74});\r\n\r\nconst edgeMaterial = new THREE.LineBasicMaterial({ color: 0x000000 });\r\n\r\n\r\n\r\n\r\n//-------------Functie om een object met randen te maken--------------\r\nfunction createBoxWithEdges(geometry, material) {\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.castShadow = true;\r\n    const edges = new THREE.EdgesGeometry(geometry);\r\n    const line = new THREE.LineSegments(edges, edgeMaterial);\r\n    mesh.add(line);\r\n    return mesh;\r\n}\r\n\r\n//--------onderdelen------------\r\nlet Kepers = [];\r\nlet DekPlanken = [];\r\nlet DekPlaten = [];\r\nlet Koppen = [];\r\nlet ZijKanten = [];\r\nlet ZijkantRegels = [];\r\nlet ZijkantStaanders = [];\r\nlet KopStaanders = [];\r\nlet KopRegels = [];\r\n\r\nlet DekselLiggers = [];\r\nlet Deksels = [];\r\n\r\n\r\n//----Variabelen-----\r\nlet Lengte;\r\nlet Breedte;\r\nlet Hoogte;\r\n\r\nlet AantalKepersIn;\r\nlet AantalDekPlanken\r\nlet KeperAfstand;\r\nlet KeperAantal;\r\n\r\nlet PlaatDikte = 5/1000;\r\nlet PlankDikte = 20/1000;\r\nlet PlankBreedte = 75/1000;\r\nlet KeperBreedte = 50/1000;\r\nlet KeperHoogte = 100/1000;\r\nlet DekPlankBreedte = 75/1000;\r\nlet DekPlankHoogte = 18/1000;\r\n\r\nlet KeperKopAfstand = 100/1000;\r\nlet MaxOverSpanning = 0.6;\r\nlet KopDikte = PlaatDikte + PlankDikte;\r\nvar StartZ;\r\nvar Spacing;\r\nvar KeperHefAfstand\r\n\r\nlet PlaatBreedte = 1.2;\r\nlet PlaatLengte = 2.4;\r\n\r\n\r\n\r\n//***************Variabelen inlezen******************\r\n\r\nfunction VariabelenInlezen(){ \r\n\r\n    Lengte = parseFloat(document.getElementById('LengteInput').value)/1000;\r\n    Breedte = parseFloat(document.getElementById('BreedteInput').value)/1000;\r\n    Hoogte = parseFloat(document.getElementById('HoogteInput').value)/1000;\r\n    AantalKepersIn = parseFloat(document.getElementById('KeperAantalInput').value);\r\n    AantalDekPlanken = parseFloat(document.getElementById('DekPlankenInput').value);\r\n    KeperAfstand = parseFloat(document.getElementById('KeperAfstandInput').value)/1000;\r\n  //afmetingen beperken\r\n    Lengte = Math.max(Lengte, AantalKepersIn * PlankBreedte - 2*KopDikte)\r\n    Breedte = Math.max(Breedte, AantalDekPlanken*DekPlankBreedte);\r\n\r\n    Lengte = (Math.round(Lengte*100))/100;\r\n    Breedte = Math.round(Breedte*100)/100;\r\n    Hoogte = Math.round(Hoogte*100)/100;\r\n    console.log(Lengte);\r\n\r\n  //overmeten maat\r\n   let LLengte = Lengte+ 2*KopDikte;\r\n   let BBreedte = Breedte + 2* PlaatDikte;\r\n   let HHoogte = Hoogte + 2*PlaatDikte +PlankDikte + KeperHoogte;\r\n\r\n    document.getElementById(\"LLengte\").textContent = (LLengte*1000).toFixed(0);\r\n    document.getElementById(\"BBreedte\").textContent = (BBreedte*1000).toFixed(0);\r\n    document.getElementById(\"HHoogte\").textContent = (HHoogte*1000).toFixed(0);  \r\n    \r\n  //Variabelen Lengte,Breedte, Hoogte schrijven naar de HTML waarden.\r\n      document.getElementById(\"BreedteInput\").value = (Breedte*1000).toFixed(0);\r\n      document.getElementById(\"LengteInput\").value = (Lengte*1000).toFixed(0);\r\n      document.getElementById(\"HoogteInput\").value = (Hoogte*1000).toFixed(0);  \r\n  }\r\n//***************oude onderdelenen verwijderen******************\r\nfunction OnderdelenDeleten(){\r\n    \r\n    Kepers.forEach(a => scene.remove(a));\r\n    ZijkantStaanders.forEach(a => scene.remove(a));\r\n    ZijkantRegels.forEach(a => scene.remove(a));\r\n    DekselLiggers.forEach(a => scene.remove(a));\r\n    KopStaanders.forEach(a => scene.remove(a));\r\n    KopRegels.forEach(a => scene.remove(a));\r\n    DekPlanken.forEach(a => scene.remove(a));\r\n    DekPlaten.forEach(a => scene.remove(a));\r\n    Koppen.forEach(a => scene.remove(a));\r\n    ZijKanten.forEach(a => scene.remove(a));\r\n    Deksels.forEach(a => scene.remove(a));\r\n\r\n}\r\n\r\n//-------------Functie om een object met randen te maken--------------\r\nfunction createBoxWithEdges(geometry, material) {\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.castShadow = true;\r\n    const edges = new THREE.EdgesGeometry(geometry);\r\n    const line = new THREE.LineSegments(edges, edgeMaterial);\r\n    mesh.add(line);\r\n    return mesh;\r\n}\r\n\r\nfunction DekPlanken_GEN(){\r\n\r\n  //---------------DekPlanken---------------------------\r\n  let startX = -(Breedte - DekPlankBreedte) / 2;\r\n  let spacingX = (Breedte - DekPlankBreedte) / (AantalDekPlanken - 1);\r\n  \r\n  for (let i = 0; i < AantalDekPlanken; i++) {\r\n      let xPos = startX + i * spacingX;\r\n      let DekPlank = createBoxWithEdges(new THREE.BoxGeometry(DekPlankBreedte, DekPlankHoogte, Lengte + 2*KopDikte), LatColorMat);\r\n      DekPlank.position.set(xPos,-DekPlankHoogte/2 - PlaatDikte, 0);\r\n      scene.add(DekPlank);\r\n      DekPlanken.push(DekPlank);\r\n  }\r\n  }\r\n\r\nfunction DekPlaten_GEN(){\r\n\r\n  let DekPlaat = createBoxWithEdges(new THREE.BoxGeometry(Breedte, PlaatDikte, Lengte + 2* KopDikte), OSBColorMat);\r\n  DekPlaat.position.set(0,-PlaatDikte/2,0);\r\n  DekPlaten.push(DekPlaat)\r\n  scene.add(DekPlaat);\r\n\r\n}\r\n\r\nfunction Keper_GEN(){\r\n\r\n  if (document.getElementById('KeperAfstandCheck').checked == false) {\r\n\r\n    KeperAantal = Math.max(2,Math.ceil(( Lengte +2*KopDikte - 2*KeperKopAfstand) / (MaxOverSpanning)));\r\n    StartZ = - Lengte/2 - KopDikte + KeperKopAfstand + KeperBreedte/2;\r\n    Spacing = -2*(- Lengte/2 - KopDikte + KeperKopAfstand + KeperBreedte/2)/(KeperAantal - 1);\r\n     \r\n  } \r\n\r\n  else {\r\n\r\n      KeperAantal = AantalKepersIn\r\n      KeperAantal = Math.max(2,KeperAantal);\r\n      document.getElementById('KeperAantalInput').value = KeperAantal;// Terugsturen van de Aantalkeper waarde naar HTML\r\n\r\n      KeperAfstand = Math.min(Lengte, KeperAfstand);  //KeperAfstand zijn maximum waarde begrenzen\r\n      KeperAfstand = Math.max(KeperAfstand,KeperAantal*KeperBreedte) //KeperAfstand zijn minimum begrenzen\r\n\r\n      document.getElementById('KeperAfstandSlider').max = (Lengte)*1000;      //De maximum waade van de slider terugsturen naar html\r\n      document.getElementById('KeperAfstandSlider').min = KeperAantal*KeperBreedte*1000; //De miniumum waarde van de slider terugsturen naar HTML\r\n      document.getElementById('KeperAfstandInput').value = (KeperAfstand*1000).toFixed(0); // De value van KeperAfstand terugsturen zodat deze aanpast aan de gestelde grenzen\r\n      KeperAfstand=KeperAfstand-KeperBreedte;   // Compenseren voor de keperbreedte\r\n\r\n      var MinAfstand = (KeperAantal - 1)*PlankBreedte;\r\n      StartZ = - Math.max(KeperAfstand/2,MinAfstand/2);\r\n      \r\n      Spacing = Math.max(KeperAfstand,MinAfstand) / (KeperAantal - 1)\r\n      console.log(KopDikte*2000);\r\n  }\r\n\r\n  // Kepers genereren\r\n  for (let i = 0; i < KeperAantal; i++) {\r\n\r\n      let zPos = StartZ + i * Spacing;\r\n  \r\n      let Keper = createBoxWithEdges(new THREE.BoxGeometry(Breedte + 2*PlaatDikte, KeperHoogte, KeperBreedte), KeperColorMat);\r\n  \r\n      // Positioneren onder de kist\r\n      Keper.position.set(0, -PlaatDikte - DekPlankHoogte -KeperHoogte/2, zPos);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(Keper);\r\n      Kepers.push(Keper);\r\n  }\r\n\r\n  //hefafstand uitrekenen en terugsturen naar html\r\n    if (KeperAantal % 2 == 0){\r\n      KeperHefAfstand = Spacing - KeperBreedte;\r\n    }else{\r\n      KeperHefAfstand = 2*Spacing - 2*KeperBreedte;\r\n    }\r\n    document.getElementById(\"KeperHefAfstand\").textContent = (KeperHefAfstand*1000).toFixed(0);\r\n}\r\n\r\nfunction Koppen_GEN(){\r\n  //-----------------------koppen-----------------------------\r\n      \r\n  // Positie van de plaat instellen\r\n  for (let richting of [1,-1]) {\r\n\r\n      let Kop = createBoxWithEdges(new THREE.BoxGeometry(Breedte, Hoogte, PlaatDikte), OSBColorMat);\r\n      Kop.position.set(0, Hoogte/2, richting*(Lengte + PlaatDikte)/2);\r\n\r\n    // Toevoegen aan de scene en de array\r\n        scene.add(Kop);\r\n       Koppen.push(Kop);\r\n   }\r\n\r\n    //----------Staanders-------------\r\n  for (let i = 0; i < 4; i++) {\r\n      // Maak een staander\r\n      let Staander = createBoxWithEdges(new THREE.BoxGeometry(PlankBreedte,Hoogte,PlankDikte), LatColorMat);\r\n  \r\n      // Bepaal de x- en z-positie voor de vier hoeken\r\n      let xPositie = (i === 0 || i === 1) ? (Breedte / 2  - PlankBreedte/2): -(Breedte / 2- PlankBreedte/2);\r\n      let zPositie = (i === 0 || i === 2) ? (Lengte / 2  + PlaatDikte + PlankDikte/2) : -(Lengte / 2  + PlaatDikte + PlankDikte/2);\r\n      \r\n      // Positie van de staander instellen\r\n      Staander.position.set(xPositie, Hoogte/2, zPositie);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(Staander);\r\n      KopStaanders.push(Staander);\r\n  }\r\n\r\n   //----------regels------------\r\n  for (let i = 0; i < 4; i++) {\r\n      // Maak een regel\r\n      let Regel = createBoxWithEdges(new THREE.BoxGeometry(Breedte - 2*PlankBreedte,PlankBreedte,PlankDikte), LatColorMat);\r\n  \r\n      // Bepaal de x- en z-positie voor de vier hoeken\r\n      let yPositie = (i === 0 || i === 1) ? (Hoogte - PlankBreedte/2 ): (PlankBreedte/2);\r\n      let zPositie = (i === 0 || i === 2) ? (Lengte/2 + KopDikte - PlankDikte/2) : -(Lengte/2 + KopDikte - PlankDikte/2);\r\n      \r\n      // Positie van de staander instellen\r\n      Regel.position.set(0, yPositie, zPositie);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(Regel);\r\n      KopRegels.push(Regel);\r\n  }\r\n}\r\n\r\nfunction ZijKanten_GEN(){\r\n  //----------------zijkanten-------------\r\n  const ZijKantBreedte = Lengte + 2*KopDikte;\r\n  const ZijKantHoogte = Hoogte + PlaatDikte + DekPlankHoogte;\r\n      \r\n    for (let richting of [1,-1]) {\r\n\r\n    let ZijKant = createBoxWithEdges(new THREE.BoxGeometry(PlaatDikte,ZijKantHoogte,ZijKantBreedte), OSBColorMat);\r\n\r\n    ZijKant.position.set(richting*(Breedte + PlaatDikte)/2, -(PlaatDikte+DekPlankHoogte)/2 + Hoogte/2,0)\r\n\r\n    // Toevoegen aan de scene en de array\r\n    scene.add(ZijKant);\r\n    ZijKanten.push(ZijKant);\r\n  }\r\n\r\n  //---------------Zijkant Staanders---------------\r\n  for (let i = 0; i < KeperAantal; i++) {\r\n\r\n  const hoogteStaander = Hoogte + PlaatDikte + KeperHoogte / 2 - PlankBreedte/2;\r\n  const yPos = Hoogte - hoogteStaander / 2 - PlankBreedte;\r\n  const zPos = StartZ + i * Spacing;\r\n  const xOffset = (Breedte + PlankDikte) / 2 + PlaatDikte;\r\n\r\n  for (let richting of [1, -1]) {\r\n    const ZijkantStaander = createBoxWithEdges(\r\n      new THREE.BoxGeometry(PlankDikte, hoogteStaander, PlankBreedte),LatColorMat);\r\n\r\n    ZijkantStaander.position.set(richting * xOffset, yPos, zPos);\r\n\r\n    scene.add(ZijkantStaander);\r\n    ZijkantStaanders.push(ZijkantStaander);\r\n  }\r\n}\r\n\r\n//------------Zijkant Regels----------------\r\nfor (let richting of [1,-1]) {\r\n\r\n    let ZijKantRegel = createBoxWithEdges(new THREE.BoxGeometry(PlankDikte, PlankBreedte, Lengte + 2*KopDikte), LatColorMat);\r\n\r\n    ZijKantRegel.position.set(richting*((Breedte + PlankDikte)/2 + PlaatDikte),  Hoogte - PlankBreedte/2,0)\r\n\r\n    // Toevoegen aan de scene en de array\r\n    scene.add(ZijKantRegel);\r\n    ZijkantRegels.push(ZijKantRegel);\r\n  }\r\n\r\n}\r\n\r\nfunction Deksel_GEN(){\r\n\r\n  let Deksel = createBoxWithEdges(new THREE.BoxGeometry(Breedte + 2*PlaatDikte + 2*PlankDikte, PlaatDikte, Lengte + 2* KopDikte), OSBColorMat);\r\n  Deksel.position.set(0,Hoogte + PlaatDikte/2,0);\r\n  Deksels.push(Deksel)\r\n  scene.add(Deksel);\r\n\r\n  //---------versteveging deksel-----------------\r\n  \r\n    for (let i = 0; i < KeperAantal; i++) {\r\n      let zPos = StartZ + i * Spacing;\r\n  \r\n      let Ligger = createBoxWithEdges(new THREE.BoxGeometry(Breedte + 2*PlankDikte + 2*PlaatDikte,PlankDikte,PlankBreedte), LatColorMat);\r\n  \r\n      // Positioneren onder de kist\r\n      Ligger.position.set(0,Hoogte + PlankDikte/2 + PlaatDikte, zPos);\r\n  \r\n      // Toevoegen aan de scene en de array\r\n      scene.add(Ligger);\r\n      DekselLiggers.push(Ligger);\r\n  \r\n  }\r\n}\r\n\r\n\r\n//-----------------schaduwvlak toevoegen------------------------\r\nif (ground) scene.remove(ground);\r\nground = new THREE.Mesh(new THREE.PlaneGeometry(30, 30), new THREE.ShadowMaterial({color: 0xD3D3D3}));\r\nground.rotation.x = -Math.PI / 2;\r\nground.receiveShadow = true;\r\nground.position.y = -KeperHoogte - PlaatDikte - PlankDikte;\r\nscene.add(ground);\r\n\r\n\r\n  function UpdateModel(){\r\n\r\n    OnderdelenDeleten();\r\n    VariabelenInlezen();\r\n    DekPlanken_GEN();\r\n    DekPlaten_GEN();\r\n    Keper_GEN();\r\n    Koppen_GEN();\r\n    ZijKanten_GEN();\r\n    \r\n  if (document.getElementById('DekselVerbergenCheck').checked==false){\r\n    Deksel_GEN();\r\n  }\r\n\r\n}\r\n\r\n//---------animatie starten------------\r\nfunction animate() {\r\n    requestAnimationFrame(animate);\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  animate();\r\n  \r\n  //-------------kist updaten bij aanpassing-----------\r\nfunction setupEventListeners() {\r\n  const elements = document.querySelectorAll(\"input, select, textarea\");\r\n\r\n  elements.forEach((el) => {\r\n    if (el.tagName === \"INPUT\") {\r\n      if (el.type === \"range\") {\r\n        // Sliders live update bij input\r\n        el.addEventListener(\"input\", UpdateModel);\r\n      } else if (el.type === \"text\" || el.type === \"number\") {\r\n        // Tekst/nummer: update bij blur of Enter\r\n        el.addEventListener(\"blur\", UpdateModel);\r\n        el.addEventListener(\"keydown\", (e) => {\r\n          if (e.key === \"Enter\") UpdateModel();\r\n        });\r\n      } else if (el.type === \"checkbox\") {\r\n        // Checkbox update bij change\r\n        el.addEventListener(\"change\", UpdateModel);\r\n      }\r\n    } else if (el.tagName === \"SELECT\") {\r\n      // Select update bij change\r\n      el.addEventListener(\"change\", UpdateModel);\r\n    }\r\n  });\r\n}\r\n\r\nsetupEventListeners();\r\nVariabelenInlezen();\r\nUpdateModel();"],"names":["$b8e56d9f6bee6a06$var$ground","$b8e56d9f6bee6a06$var$Lengte","$b8e56d9f6bee6a06$var$Breedte","$b8e56d9f6bee6a06$var$Hoogte","$b8e56d9f6bee6a06$var$AantalKepersIn","$b8e56d9f6bee6a06$var$AantalDekPlanken","$b8e56d9f6bee6a06$var$KeperAfstand","$b8e56d9f6bee6a06$var$KeperAantal","$b8e56d9f6bee6a06$var$StartZ","$b8e56d9f6bee6a06$var$Spacing","$b8e56d9f6bee6a06$var$KeperHefAfstand","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$dyjou","$ilwiq","$5Rd1x","$b8e56d9f6bee6a06$var$scene","Scene","background","Color","$b8e56d9f6bee6a06$var$container","document","getElementById","$b8e56d9f6bee6a06$var$renderer","WebGLRenderer","antialias","alpha","powerPreference","canvas","querySelector","setSize","clientWidth","clientHeight","setPixelRatio","window","devicePixelRatio","addEventListener","width","height","$b8e56d9f6bee6a06$var$camera","aspect","updateProjectionMatrix","PerspectiveCamera","position","set","lookAt","$b8e56d9f6bee6a06$var$controls","OrbitControls","domElement","enableDamping","dampingFactor","screenSpacePanning","$b8e56d9f6bee6a06$var$ambientLight","AmbientLight","$b8e56d9f6bee6a06$var$light","DirectionalLight","castShadow","shadow","mapSize","camera","near","far","left","right","top","bottom","shadowMap","enabled","type","PCFSoftShadowMap","add","$b8e56d9f6bee6a06$var$OSBColorMat","MeshStandardMaterial","color","$b8e56d9f6bee6a06$var$KeperColorMat","$b8e56d9f6bee6a06$var$LatColorMat","$b8e56d9f6bee6a06$var$edgeMaterial","LineBasicMaterial","$b8e56d9f6bee6a06$var$createBoxWithEdges","geometry","material","mesh","Mesh","edges","EdgesGeometry","line","LineSegments","$b8e56d9f6bee6a06$var$Kepers","$b8e56d9f6bee6a06$var$DekPlanken","$b8e56d9f6bee6a06$var$DekPlaten","$b8e56d9f6bee6a06$var$Koppen","$b8e56d9f6bee6a06$var$ZijKanten","$b8e56d9f6bee6a06$var$ZijkantRegels","$b8e56d9f6bee6a06$var$ZijkantStaanders","$b8e56d9f6bee6a06$var$KopStaanders","$b8e56d9f6bee6a06$var$KopRegels","$b8e56d9f6bee6a06$var$DekselLiggers","$b8e56d9f6bee6a06$var$Deksels","$b8e56d9f6bee6a06$var$VariabelenInlezen","parseFloat","value","Math","max","round","console","log","LLengte","BBreedte","HHoogte","textContent","toFixed","$b8e56d9f6bee6a06$var$UpdateModel","DekPlaat","forEach","a","remove","$b8e56d9f6bee6a06$var$DekPlanken_GEN","startX","spacingX","i","xPos","DekPlank","BoxGeometry","push","checked","ceil","$b8e56d9f6bee6a06$var$PlaatDikte","$b8e56d9f6bee6a06$var$KeperBreedte","min","MinAfstand","$b8e56d9f6bee6a06$var$KopDikte","zPos","Keper","$b8e56d9f6bee6a06$var$Koppen_GEN","richting","Kop","Staander","xPositie","$b8e56d9f6bee6a06$var$PlankBreedte","zPositie","$b8e56d9f6bee6a06$var$PlankDikte","Regel","yPositie","$b8e56d9f6bee6a06$var$ZijKanten_GEN","ZijKantBreedte","ZijKantHoogte","ZijKant","hoogteStaander","$b8e56d9f6bee6a06$var$KeperHoogte","yPos","xOffset","ZijkantStaander","ZijKantRegel","$b8e56d9f6bee6a06$var$Deksel_GEN","Deksel","Ligger","PlaneGeometry","ShadowMaterial","rotation","x","PI","receiveShadow","y","$b8e56d9f6bee6a06$var$animate","requestAnimationFrame","update","render","elements","querySelectorAll","el","tagName","e","key"],"version":3,"file":"Krat_toe.b43fea0a.js.map"}